import{__plugin_vue_export_helper_default as e,createElementBlock as t,createStaticVNode as n,openBlock as r}from"./chunks/plugin-vue_export-helper.Bts1mPc7.js";const i=JSON.parse(`{"title":"Node.js 를 사용하는 데 필요한 JavaScript 지식","description":"Node.js 를 마스터하려면 필요한 JavaScript 의 기본 개념을 학습하세요. 렉시컬 구조, 표현식, 데이터 타입, 클래스, 변수, 함수 및 비동기 프로그래밍 등이 포함됩니다.","frontmatter":{"title":"Node.js 를 사용하는 데 필요한 JavaScript 지식","description":"Node.js 를 마스터하려면 필요한 JavaScript 의 기본 개념을 학습하세요. 렉시컬 구조, 표현식, 데이터 타입, 클래스, 변수, 함수 및 비동기 프로그래밍 등이 포함됩니다.","head":[["meta",{"name":"og:title","content":"Node.js 를 사용하는 데 필요한 JavaScript 지식 | Node.js - iDoc.dev"}],["meta",{"name":"og:description","content":"Node.js 를 마스터하려면 필요한 JavaScript 의 기본 개념을 학습하세요. 렉시컬 구조, 표현식, 데이터 타입, 클래스, 변수, 함수 및 비동기 프로그래밍 등이 포함됩니다."}],["meta",{"name":"twitter:title","content":"Node.js 를 사용하는 데 필요한 JavaScript 지식 | Node.js - iDoc.dev"}],["meta",{"name":"twitter:description","content":"Node.js 를 마스터하려면 필요한 JavaScript 의 기본 개념을 학습하세요. 렉시컬 구조, 표현식, 데이터 타입, 클래스, 변수, 함수 및 비동기 프로그래밍 등이 포함됩니다."}],["link",{"rel":"canonical","href":"https://idoc.dev/ko/nodejs/guide/javascript-for-nodejs"}],["meta",{"property":"og:url","content":"https://idoc.dev/ko/nodejs/guide/javascript-for-nodejs"}]]},"headers":[],"relativePath":"ko/nodejs/guide/javascript-for-nodejs.md","filePath":"ko/nodejs/guide/javascript-for-nodejs.md","lastUpdated":1749464498000}`),a={name:`ko/nodejs/guide/javascript-for-nodejs.md`};function o(e,i,a,o,s,c){return r(),t(`div`,null,i[0]||=[n(`<h1 id="node-js를-사용하기-위해-얼마나-많은-javascript를-알아야-할까요" tabindex="-1">Node.js를 사용하기 위해 얼마나 많은 JavaScript를 알아야 할까요? <a class="header-anchor" href="#node-js를-사용하기-위해-얼마나-많은-javascript를-알아야-할까요" aria-label="Permalink to “Node.js를 사용하기 위해 얼마나 많은 JavaScript를 알아야 할까요?”">​</a></h1><p>초보자로서 프로그래밍 능력에 충분히 자신감을 갖게 되는 것은 어렵습니다. 코딩을 배우는 동안 JavaScript가 어디에서 끝나고 Node.js가 어디에서 시작되는지, 또는 그 반대의 경우도 혼란스러울 수 있습니다.</p><h3 id="node-js를-깊이-파고들기-전에-무엇을-배우는-것이-좋을까요" tabindex="-1">Node.js를 깊이 파고들기 전에 무엇을 배우는 것이 좋을까요? <a class="header-anchor" href="#node-js를-깊이-파고들기-전에-무엇을-배우는-것이-좋을까요" aria-label="Permalink to “Node.js를 깊이 파고들기 전에 무엇을 배우는 것이 좋을까요?”">​</a></h3><ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Lexical_grammar" target="_blank" rel="noreferrer">어휘 구조</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators" target="_blank" rel="noreferrer">표현식</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures" target="_blank" rel="noreferrer">데이터 유형</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes" target="_blank" rel="noreferrer">클래스</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/First_steps/Variables#what_is_a_variable" target="_blank" rel="noreferrer">변수</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Functions" target="_blank" rel="noreferrer">함수</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this" target="_blank" rel="noreferrer">this 연산자</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions" target="_blank" rel="noreferrer">화살표 함수</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Loops_and_iteration" target="_blank" rel="noreferrer">반복문</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Glossary/Scope" target="_blank" rel="noreferrer">스코프</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array" target="_blank" rel="noreferrer">배열</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals" target="_blank" rel="noreferrer">템플릿 리터럴</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Strict_mode" target="_blank" rel="noreferrer">엄격 모드</a></li><li><a href="https://nodejs.org/en/learn/getting-started/ecmascript-2015-es6-and-beyond" target="_blank" rel="noreferrer">ECMAScript 2015 (ES6) 이상</a></li></ul><p>이러한 개념들을 염두에 두고 있다면 브라우저와 Node.js 모두에서 능숙한 JavaScript 개발자가 되기 위한 길을 잘 가고 있는 것입니다.</p><h3 id="비동기-프로그래밍" tabindex="-1">비동기 프로그래밍 <a class="header-anchor" href="#비동기-프로그래밍" aria-label="Permalink to “비동기 프로그래밍”">​</a></h3><p>다음 개념들은 Node.js의 기본적인 부분 중 하나인 비동기 프로그래밍을 이해하는 데 매우 중요합니다.</p><ul><li><a href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Asynchronous/Introducing" target="_blank" rel="noreferrer">비동기 프로그래밍과 콜백</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/API/setTimeout" target="_blank" rel="noreferrer">타이머</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Using_promises" target="_blank" rel="noreferrer">프로미스</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function" target="_blank" rel="noreferrer">Async 및 Await</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Closures" target="_blank" rel="noreferrer">클로저</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/EventLoop" target="_blank" rel="noreferrer">이벤트 루프</a></li></ul>`,8)])}var s=e(a,[[`render`,o]]);export{i as __pageData,s as default};