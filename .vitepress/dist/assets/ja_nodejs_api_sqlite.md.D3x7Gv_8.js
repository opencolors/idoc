import{__plugin_vue_export_helper_default as e,createElementBlock as t,createStaticVNode as n,openBlock as r}from"./chunks/plugin-vue_export-helper.Bts1mPc7.js";const i=JSON.parse(`{"title":"Node.js SQLite API ドキュメント","description":"Node.js SQLite API ドキュメントは、Node.js アプリケーション内で SQLite データベースとどのように対話するかについての詳細な情報を提供します。データベース接続管理、SQL クエリの実行、トランザクション処理、エラー管理が含まれます。","frontmatter":{"title":"Node.js SQLite API ドキュメント","description":"Node.js SQLite API ドキュメントは、Node.js アプリケーション内で SQLite データベースとどのように対話するかについての詳細な情報を提供します。データベース接続管理、SQL クエリの実行、トランザクション処理、エラー管理が含まれます。","head":[["meta",{"name":"og:title","content":"Node.js SQLite API ドキュメント | Node.js - iDoc.dev"}],["meta",{"name":"og:description","content":"Node.js SQLite API ドキュメントは、Node.js アプリケーション内で SQLite データベースとどのように対話するかについての詳細な情報を提供します。データベース接続管理、SQL クエリの実行、トランザクション処理、エラー管理が含まれます。"}],["meta",{"name":"twitter:title","content":"Node.js SQLite API ドキュメント | Node.js - iDoc.dev"}],["meta",{"name":"twitter:description","content":"Node.js SQLite API ドキュメントは、Node.js アプリケーション内で SQLite データベースとどのように対話するかについての詳細な情報を提供します。データベース接続管理、SQL クエリの実行、トランザクション処理、エラー管理が含まれます。"}],["link",{"rel":"canonical","href":"https://idoc.dev/ja/nodejs/api/sqlite"}],["meta",{"property":"og:url","content":"https://idoc.dev/ja/nodejs/api/sqlite"}]]},"headers":[],"relativePath":"ja/nodejs/api/sqlite.md","filePath":"ja/nodejs/api/sqlite.md","lastUpdated":1749464498000}`),a={name:`ja/nodejs/api/sqlite.md`};function o(e,i,a,o,s,c){return r(),t(`div`,null,i[0]||=[n(`<h1 id="sqlite" tabindex="-1">SQLite <a class="header-anchor" href="#sqlite" aria-label="Permalink to “SQLite”">​</a></h1><p><strong>Added in: v22.5.0</strong></p><div class="warning custom-block"><p class="custom-block-title">[Stable: 1 - Experimental]</p><p><a href="/ja/nodejs/api/documentation#stability-index">Stable: 1</a> <a href="/ja/nodejs/api/documentation#stability-index">Stability: 1</a>.1 - 活発な開発。</p></div><p><strong>ソースコード:</strong> <a href="https://github.com/nodejs/node/blob/v23.5.0/lib/sqlite.js" target="_blank" rel="noreferrer">lib/sqlite.js</a></p><p><code>node:sqlite</code> モジュールは、SQLite データベースの操作を容易にします。アクセスするには:</p><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-17" id="tab-18" checked><label data-title="ESM" for="tab-18">ESM</label><input type="radio" name="group-17" id="tab-19"><label data-title="CJS" for="tab-19">CJS</label></div><div class="blocks"><div class="language-js active line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sqlite </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;node:sqlite&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> sqlite</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;node:sqlite&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></div></div><p>このモジュールは、<code>node:</code> スキームでのみ利用可能です。</p><p>次の例は、<code>node:sqlite</code> モジュールの基本的な使用方法を示しています。インメモリデータベースを開き、データベースにデータを書き込み、データを読み返します。</p><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-27" id="tab-28" checked><label data-title="ESM" for="tab-28">ESM</label><input type="radio" name="group-27" id="tab-29"><label data-title="CJS" for="tab-29">CJS</label></div><div class="blocks"><div class="language-js active line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { DatabaseSync } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;node:sqlite&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> database</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> DatabaseSync</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;:memory:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 文字列から SQL ステートメントを実行します。</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">database.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">exec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  CREATE TABLE data(</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    key INTEGER PRIMARY KEY,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    value TEXT</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  ) STRICT</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// データベースにデータを挿入するためのプリペアドステートメントを作成します。</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> insert</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> database.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">prepare</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;INSERT INTO data (key, value) VALUES (?, ?)&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// バインドされた値でプリペアドステートメントを実行します。</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">insert.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">run</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;hello&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">insert.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">run</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;world&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// データベースからデータを読み取るためのプリペアドステートメントを作成します。</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> query</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> database.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">prepare</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;SELECT * FROM data ORDER BY key&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// プリペアドステートメントを実行し、結果セットをログに記録します。</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(query.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">all</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">());</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Prints: [ { key: 1, value: &#39;hello&#39; }, { key: 2, value: &#39;world&#39; } ]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;use strict&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">DatabaseSync</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;node:sqlite&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> database</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> DatabaseSync</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;:memory:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 文字列から SQL ステートメントを実行します。</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">database.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">exec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  CREATE TABLE data(</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    key INTEGER PRIMARY KEY,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    value TEXT</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  ) STRICT</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// データベースにデータを挿入するためのプリペアドステートメントを作成します。</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> insert</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> database.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">prepare</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;INSERT INTO data (key, value) VALUES (?, ?)&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// バインドされた値でプリペアドステートメントを実行します。</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">insert.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">run</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;hello&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">insert.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">run</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;world&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// データベースからデータを読み取るためのプリペアドステートメントを作成します。</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> query</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> database.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">prepare</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;SELECT * FROM data ORDER BY key&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// プリペアドステートメントを実行し、結果セットをログに記録します。</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(query.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">all</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">());</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Prints: [ { key: 1, value: &#39;hello&#39; }, { key: 2, value: &#39;world&#39; } ]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div></div></div><h2 id="class-databasesync" tabindex="-1">クラス: <code>DatabaseSync</code> <a class="header-anchor" href="#class-databasesync" aria-label="Permalink to “クラス: DatabaseSync”">​</a></h2><p><strong>Added in: v22.5.0</strong></p><p>このクラスは、SQLiteデータベースへの単一の<a href="https://www.sqlite.org/c3ref/sqlite3" target="_blank" rel="noreferrer">接続</a>を表します。このクラスによって公開されるすべてのAPIは、同期的に実行されます。</p><h3 id="new-databasesynclocation-options" tabindex="-1"><code>new DatabaseSync(location[, options])</code> <a class="header-anchor" href="#new-databasesynclocation-options" aria-label="Permalink to “new DatabaseSync(location[, options])”">​</a></h3><p><strong>Added in: v22.5.0</strong></p><ul><li><code>location</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> データベースの場所。SQLiteデータベースは、ファイルに保存することも、完全に<a href="https://www.sqlite.org/inmemorydb" target="_blank" rel="noreferrer">メモリ内</a>に保存することもできます。ファイルベースのデータベースを使用するには、場所はファイルパスである必要があります。インメモリデータベースを使用するには、場所は特別な名前 <code>&#39;:memory:&#39;</code> である必要があります。</li><li><code>options</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object&gt;</a> データベース接続の構成オプション。次のオプションがサポートされています。 <ul><li><code>open</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type" target="_blank" rel="noreferrer">&lt;boolean&gt;</a> <code>true</code>の場合、データベースはコンストラクタによって開かれます。この値が<code>false</code>の場合、データベースは<code>open()</code>メソッドを介して開かれる必要があります。<strong>デフォルト:</strong> <code>true</code>。</li><li><code>readOnly</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type" target="_blank" rel="noreferrer">&lt;boolean&gt;</a> <code>true</code>の場合、データベースは読み取り専用モードで開かれます。データベースが存在しない場合、開こうとすると失敗します。<strong>デフォルト:</strong> <code>false</code>。</li><li><code>enableForeignKeyConstraints</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type" target="_blank" rel="noreferrer">&lt;boolean&gt;</a> <code>true</code>の場合、外部キー制約が有効になります。これは推奨されますが、レガシーデータベーススキーマとの互換性のために無効にすることができます。外部キー制約の適用は、<a href="https://www.sqlite.org/pragma#pragma_foreign_keys" target="_blank" rel="noreferrer"><code>PRAGMA foreign_keys</code></a>を使用してデータベースを開いた後に有効または無効にできます。<strong>デフォルト:</strong> <code>true</code>。</li><li><code>enableDoubleQuotedStringLiterals</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type" target="_blank" rel="noreferrer">&lt;boolean&gt;</a> <code>true</code>の場合、SQLiteは<a href="https://www.sqlite.org/quirks#dblquote" target="_blank" rel="noreferrer">二重引用符で囲まれた文字列リテラル</a>を受け入れます。これは推奨されませんが、レガシーデータベーススキーマとの互換性のために有効にすることができます。<strong>デフォルト:</strong> <code>false</code>。</li><li><code>allowExtension</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type" target="_blank" rel="noreferrer">&lt;boolean&gt;</a> <code>true</code>の場合、<code>loadExtension</code> SQL関数と<code>loadExtension()</code>メソッドが有効になります。後で<code>enableLoadExtension(false)</code>を呼び出して、この機能を無効にすることができます。<strong>デフォルト:</strong> <code>false</code>。</li></ul></li></ul><p>新しい<code>DatabaseSync</code>インスタンスを構築します。</p><h3 id="databaseclose" tabindex="-1"><code>database.close()</code> <a class="header-anchor" href="#databaseclose" aria-label="Permalink to “database.close()”">​</a></h3><p><strong>Added in: v22.5.0</strong></p><p>データベース接続を閉じます。データベースが開いていない場合、例外がスローされます。このメソッドは、<a href="https://www.sqlite.org/c3ref/close" target="_blank" rel="noreferrer"><code>sqlite3_close_v2()</code></a> のラッパーです。</p><h3 id="databaseloadextensionpath" tabindex="-1"><code>database.loadExtension(path)</code> <a class="header-anchor" href="#databaseloadextensionpath" aria-label="Permalink to “database.loadExtension(path)”">​</a></h3><p><strong>Added in: v23.5.0</strong></p><ul><li><code>path</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> ロードする共有ライブラリへのパス。</li></ul><p>共有ライブラリをデータベース接続にロードします。このメソッドは、<a href="https://www.sqlite.org/c3ref/load_extension" target="_blank" rel="noreferrer"><code>sqlite3_load_extension()</code></a> のラッパーです。<code>DatabaseSync</code> インスタンスを構築するときに、<code>allowExtension</code> オプションを有効にする必要があります。</p><h3 id="databaseenableloadextensionallow" tabindex="-1"><code>database.enableLoadExtension(allow)</code> <a class="header-anchor" href="#databaseenableloadextensionallow" aria-label="Permalink to “database.enableLoadExtension(allow)”">​</a></h3><p><strong>Added in: v23.5.0</strong></p><ul><li><code>allow</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type" target="_blank" rel="noreferrer">&lt;boolean&gt;</a> 拡張機能のロードを許可するかどうか。</li></ul><p><code>loadExtension</code> SQL 関数と <code>loadExtension()</code> メソッドを有効または無効にします。構築時に <code>allowExtension</code> が <code>false</code> の場合、セキュリティ上の理由から拡張機能のロードを有効にすることはできません。</p><h3 id="databaseexecsql" tabindex="-1"><code>database.exec(sql)</code> <a class="header-anchor" href="#databaseexecsql" aria-label="Permalink to “database.exec(sql)”">​</a></h3><p><strong>Added in: v22.5.0</strong></p><ul><li><code>sql</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> 実行する SQL 文字列。</li></ul><p>このメソッドを使用すると、結果を返さずに 1 つ以上の SQL ステートメントを実行できます。このメソッドは、ファイルから読み取った SQL ステートメントを実行する場合に役立ちます。このメソッドは、<a href="https://www.sqlite.org/c3ref/exec" target="_blank" rel="noreferrer"><code>sqlite3_exec()</code></a> のラッパーです。</p><h3 id="databasefunctionname-options-function" tabindex="-1"><code>database.function(name[, options], function)</code> <a class="header-anchor" href="#databasefunctionname-options-function" aria-label="Permalink to “database.function(name[, options], function)”">​</a></h3><p><strong>Added in: v23.5.0</strong></p><ul><li><p><code>name</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> 作成する SQLite 関数の名前。</p></li><li><p><code>options</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object&gt;</a> 関数のオプションの構成設定。以下のプロパティがサポートされています。</p><ul><li><code>deterministic</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type" target="_blank" rel="noreferrer">&lt;boolean&gt;</a> <code>true</code> の場合、作成された関数に <a href="https://www.sqlite.org/c3ref/c_deterministic" target="_blank" rel="noreferrer"><code>SQLITE_DETERMINISTIC</code></a> フラグが設定されます。<strong>デフォルト:</strong> <code>false</code>。</li><li><code>directOnly</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type" target="_blank" rel="noreferrer">&lt;boolean&gt;</a> <code>true</code> の場合、作成された関数に <a href="https://www.sqlite.org/c3ref/c_deterministic" target="_blank" rel="noreferrer"><code>SQLITE_DIRECTONLY</code></a> フラグが設定されます。<strong>デフォルト:</strong> <code>false</code>。</li><li><code>useBigIntArguments</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type" target="_blank" rel="noreferrer">&lt;boolean&gt;</a> <code>true</code> の場合、<code>function</code> への整数の引数は <code>BigInt</code> に変換されます。 <code>false</code> の場合、整数の引数は JavaScript の数値として渡されます。<strong>デフォルト:</strong> <code>false</code>。</li><li><code>varargs</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type" target="_blank" rel="noreferrer">&lt;boolean&gt;</a> <code>true</code> の場合、<code>function</code> は可変数の引数を受け入れることができます。 <code>false</code> の場合、<code>function</code> は正確に <code>function.length</code> 引数で呼び出す必要があります。<strong>デフォルト:</strong> <code>false</code>。</li></ul></li><li><p><code>function</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function" target="_blank" rel="noreferrer">&lt;Function&gt;</a> SQLite 関数が呼び出されたときに呼び出す JavaScript 関数。</p></li></ul><p>このメソッドは、SQLite ユーザー定義関数を作成するために使用されます。このメソッドは、<a href="https://www.sqlite.org/c3ref/create_function" target="_blank" rel="noreferrer"><code>sqlite3_create_function_v2()</code></a> のラッパーです。</p><h3 id="databaseopen" tabindex="-1"><code>database.open()</code> <a class="header-anchor" href="#databaseopen" aria-label="Permalink to “database.open()”">​</a></h3><p><strong>追加:</strong> v22.5.0</p><p><code>DatabaseSync</code>コンストラクターの<code>location</code>引数で指定されたデータベースを開きます。このメソッドは、データベースがコンストラクター経由で開かれていない場合にのみ使用する必要があります。データベースがすでに開いている場合、例外がスローされます。</p><h3 id="databasepreparesql" tabindex="-1"><code>database.prepare(sql)</code> <a class="header-anchor" href="#databasepreparesql" aria-label="Permalink to “database.prepare(sql)”">​</a></h3><p><strong>追加:</strong> v22.5.0</p><ul><li><code>sql</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> プリペアドステートメントにコンパイルするSQL文字列。</li><li>戻り値: <a href="/ja/nodejs/api/sqlite#class-statementsync">&lt;StatementSync&gt;</a> プリペアドステートメント。</li></ul><p>SQLステートメントを<a href="https://www.sqlite.org/c3ref/stmt" target="_blank" rel="noreferrer">プリペアドステートメント</a>にコンパイルします。このメソッドは、<a href="https://www.sqlite.org/c3ref/prepare" target="_blank" rel="noreferrer"><code>sqlite3_prepare_v2()</code></a>のラッパーです。</p><h3 id="databasecreatesessionoptions" tabindex="-1"><code>database.createSession([options])</code> <a class="header-anchor" href="#databasecreatesessionoptions" aria-label="Permalink to “database.createSession([options])”">​</a></h3><p><strong>追加:</strong> v23.3.0</p><ul><li><p><code>options</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object&gt;</a> セッションの構成オプション。</p><ul><li><code>table</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> 変更を追跡する特定のテーブル。デフォルトでは、すべてのテーブルへの変更が追跡されます。</li><li><code>db</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> 追跡するデータベースの名前。これは、<a href="https://www.sqlite.org/lang_attach" target="_blank" rel="noreferrer"><code>ATTACH DATABASE</code></a>を使用して複数のデータベースが追加された場合に役立ちます。<strong>デフォルト</strong>: <code>&#39;main&#39;</code>。</li></ul></li><li><p>戻り値: <a href="/ja/nodejs/api/sqlite#class-session">&lt;Session&gt;</a> セッションハンドル。</p></li></ul><p>データベースにセッションを作成してアタッチします。このメソッドは、<a href="https://www.sqlite.org/session/sqlite3session_create" target="_blank" rel="noreferrer"><code>sqlite3session_create()</code></a>と<a href="https://www.sqlite.org/session/sqlite3session_attach" target="_blank" rel="noreferrer"><code>sqlite3session_attach()</code></a>のラッパーです。</p><h3 id="databaseapplychangesetchangeset-options" tabindex="-1"><code>database.applyChangeset(changeset[, options])</code> <a class="header-anchor" href="#databaseapplychangesetchangeset-options" aria-label="Permalink to “database.applyChangeset(changeset[, options])”">​</a></h3><p><strong>追加:</strong> v23.3.0</p><ul><li><p><code>changeset</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array" target="_blank" rel="noreferrer">&lt;Uint8Array&gt;</a> バイナリのチェンジセットまたはパッチセット。</p></li><li><p><code>options</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object&gt;</a> 変更の適用方法に関する構成オプション。</p><ul><li><code>filter</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function" target="_blank" rel="noreferrer">&lt;Function&gt;</a> 対象のテーブル名がこの関数に提供されたときに、真の値を返す変更をスキップします。デフォルトでは、すべての変更が試行されます。</li><li><code>onConflict</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type" target="_blank" rel="noreferrer">&lt;number&gt;</a> 競合の処理方法を決定します。<strong>デフォルト</strong>: <code>SQLITE_CHANGESET_ABORT</code>。</li><li><code>SQLITE_CHANGESET_OMIT</code>: 競合する変更は省略されます。</li><li><code>SQLITE_CHANGESET_REPLACE</code>: 競合する変更は既存の値を置き換えます。</li><li><code>SQLITE_CHANGESET_ABORT</code>: 競合時に中止し、データベースをロールバックします。</li></ul></li><li><p>戻り値: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type" target="_blank" rel="noreferrer">&lt;boolean&gt;</a> チェンジセットが中止されることなく正常に適用されたかどうか。</p></li></ul><p>データベースが開いていない場合、例外がスローされます。このメソッドは、<a href="https://www.sqlite.org/session/sqlite3changeset_apply" target="_blank" rel="noreferrer"><code>sqlite3changeset_apply()</code></a>のラッパーです。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> sourceDb</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> DatabaseSync</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;:memory:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> targetDb</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> DatabaseSync</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;:memory:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">sourceDb.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">exec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;CREATE TABLE data(key INTEGER PRIMARY KEY, value TEXT)&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">targetDb.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">exec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;CREATE TABLE data(key INTEGER PRIMARY KEY, value TEXT)&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> session</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sourceDb.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createSession</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> insert</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sourceDb.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">prepare</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;INSERT INTO data (key, value) VALUES (?, ?)&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">insert.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">run</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;hello&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">insert.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">run</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;world&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> changeset</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> session.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">changeset</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">targetDb.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">applyChangeset</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(changeset);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Now that the changeset has been applied, targetDb contains the same data as sourceDb.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// これでチェンジセットが適用されたので、targetDbにはsourceDbと同じデータが含まれています。</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h2 id="class-session" tabindex="-1">Class: <code>Session</code> <a class="header-anchor" href="#class-session" aria-label="Permalink to “Class: Session”">​</a></h2><p><strong>Added in: v23.3.0</strong></p><h3 id="sessionchangeset" tabindex="-1"><code>session.changeset()</code> <a class="header-anchor" href="#sessionchangeset" aria-label="Permalink to “session.changeset()”">​</a></h3><p><strong>Added in: v23.3.0</strong></p><ul><li>Returns: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array" target="_blank" rel="noreferrer">&lt;Uint8Array&gt;</a> 他のデータベースに適用できるバイナリチェンジセット。</li></ul><p>チェンジセットが作成されてからのすべての変更を含むチェンジセットを取得します。複数回呼び出すことができます。データベースまたはセッションが開かれていない場合、例外がスローされます。このメソッドは、<a href="https://www.sqlite.org/session/sqlite3session_changeset" target="_blank" rel="noreferrer"><code>sqlite3session_changeset()</code></a> のラッパーです。</p><h3 id="sessionpatchset" tabindex="-1"><code>session.patchset()</code> <a class="header-anchor" href="#sessionpatchset" aria-label="Permalink to “session.patchset()”">​</a></h3><p><strong>Added in: v23.3.0</strong></p><ul><li>Returns: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array" target="_blank" rel="noreferrer">&lt;Uint8Array&gt;</a> 他のデータベースに適用できるバイナリパッチセット。</li></ul><p>上記のメソッドと同様ですが、よりコンパクトなパッチセットを生成します。SQLite のドキュメントの <a href="https://www.sqlite.org/sessionintro#changesets_and_patchsets" target="_blank" rel="noreferrer">チェンジセットとパッチセット</a> を参照してください。データベースまたはセッションが開かれていない場合、例外がスローされます。このメソッドは、<a href="https://www.sqlite.org/session/sqlite3session_patchset" target="_blank" rel="noreferrer"><code>sqlite3session_patchset()</code></a> のラッパーです。</p><h3 id="sessionclose" tabindex="-1"><code>session.close()</code> <a class="header-anchor" href="#sessionclose" aria-label="Permalink to “session.close()”">​</a></h3><p>セッションを閉じます。データベースまたはセッションが開かれていない場合、例外がスローされます。このメソッドは、<a href="https://www.sqlite.org/session/sqlite3session_delete" target="_blank" rel="noreferrer"><code>sqlite3session_delete()</code></a> のラッパーです。</p><h2 id="class-statementsync" tabindex="-1">Class: <code>StatementSync</code> <a class="header-anchor" href="#class-statementsync" aria-label="Permalink to “Class: StatementSync”">​</a></h2><p><strong>Added in: v22.5.0</strong></p><p>このクラスは、単一の <a href="https://www.sqlite.org/c3ref/stmt" target="_blank" rel="noreferrer">プリペアドステートメント</a> を表します。このクラスは、コンストラクタを介してインスタンス化することはできません。代わりに、インスタンスは <code>database.prepare()</code> メソッドを介して作成されます。このクラスによって公開されるすべての API は、同期的に実行されます。</p><p>プリペアドステートメントは、それを作成するために使用される SQL の効率的なバイナリ表現です。プリペアドステートメントはパラメータ化可能であり、異なるバインド値で複数回呼び出すことができます。パラメータは、<a href="https://en.wikipedia.org/wiki/SQL_injection" target="_blank" rel="noreferrer">SQLインジェクション</a>攻撃に対する保護も提供します。これらの理由から、ユーザー入力を処理する際には、手作りの SQL 文字列よりもプリペアドステートメントが推奨されます。</p><h3 id="statementallnamedparameters-anonymousparameters" tabindex="-1"><code>statement.all([namedParameters][, ...anonymousParameters])</code> <a class="header-anchor" href="#statementallnamedparameters-anonymousparameters" aria-label="Permalink to “statement.all([namedParameters][, ...anonymousParameters])”">​</a></h3><p><strong>Added in: v22.5.0</strong></p><ul><li><code>namedParameters</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object&gt;</a> 名前付きパラメーターをバインドするために使用されるオプションのオブジェクト。このオブジェクトのキーは、マッピングの構成に使用されます。</li><li><code>...anonymousParameters</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Null_type" target="_blank" rel="noreferrer">&lt;null&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type" target="_blank" rel="noreferrer">&lt;number&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt" target="_blank" rel="noreferrer">&lt;bigint&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> | <a href="/ja/nodejs/api/buffer#class-buffer">&lt;Buffer&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array" target="_blank" rel="noreferrer">&lt;Uint8Array&gt;</a> 匿名パラメーターにバインドするゼロ個以上の値。</li><li>戻り値: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array" target="_blank" rel="noreferrer">&lt;Array&gt;</a> オブジェクトの配列。各オブジェクトは、プリペアドステートメントを実行して返された行に対応します。各オブジェクトのキーと値は、行の列名と値に対応します。</li></ul><p>このメソッドは、プリペアドステートメントを実行し、すべての結果をオブジェクトの配列として返します。プリペアドステートメントが結果を返さない場合、このメソッドは空の配列を返します。プリペアドステートメントの<a href="https://www.sqlite.org/c3ref/bind_blob" target="_blank" rel="noreferrer">パラメーターは、<code>namedParameters</code>と<code>anonymousParameters</code>の値を使用してバインドされます</a>。</p><h3 id="statementexpandedsql" tabindex="-1"><code>statement.expandedSQL</code> <a class="header-anchor" href="#statementexpandedsql" aria-label="Permalink to “statement.expandedSQL”">​</a></h3><p><strong>Added in: v22.5.0</strong></p><ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> パラメーター値を含むように拡張されたソースSQL。</li></ul><p>プリペアドステートメントのソースSQLテキスト。パラメータープレースホルダーは、このプリペアドステートメントの最新の実行時に使用された値に置き換えられます。このプロパティは、<a href="https://www.sqlite.org/c3ref/expanded_sql" target="_blank" rel="noreferrer"><code>sqlite3_expanded_sql()</code></a>のラッパーです。</p><h3 id="statementgetnamedparameters-anonymousparameters" tabindex="-1"><code>statement.get([namedParameters][, ...anonymousParameters])</code> <a class="header-anchor" href="#statementgetnamedparameters-anonymousparameters" aria-label="Permalink to “statement.get([namedParameters][, ...anonymousParameters])”">​</a></h3><p><strong>Added in: v22.5.0</strong></p><ul><li><code>namedParameters</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object&gt;</a> 名前付きパラメータをバインドするために使用されるオプションのオブジェクト。 このオブジェクトのキーは、マッピングの構成に使用されます。</li><li><code>...anonymousParameters</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Null_type" target="_blank" rel="noreferrer">&lt;null&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type" target="_blank" rel="noreferrer">&lt;number&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt" target="_blank" rel="noreferrer">&lt;bigint&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> | <a href="/ja/nodejs/api/buffer#class-buffer">&lt;Buffer&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array" target="_blank" rel="noreferrer">&lt;Uint8Array&gt;</a> 匿名パラメータにバインドするゼロ個以上の値。</li><li>戻り値: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Undefined_type" target="_blank" rel="noreferrer">&lt;undefined&gt;</a> プリペアドステートメントを実行して返された最初の行に対応するオブジェクト。 オブジェクトのキーと値は、行の列名と値に対応します。 データベースから行が返されなかった場合、このメソッドは <code>undefined</code> を返します。</li></ul><p>このメソッドは、プリペアドステートメントを実行し、最初の結果をオブジェクトとして返します。 プリペアドステートメントが結果を返さない場合、このメソッドは <code>undefined</code> を返します。 プリペアドステートメントの<a href="https://www.sqlite.org/c3ref/bind_blob" target="_blank" rel="noreferrer">パラメータは、<code>namedParameters</code> と <code>anonymousParameters</code> の値を使用してバインドされます</a>。</p><h3 id="statementiteratenamedparameters-anonymousparameters" tabindex="-1"><code>statement.iterate([namedParameters][, ...anonymousParameters])</code> <a class="header-anchor" href="#statementiteratenamedparameters-anonymousparameters" aria-label="Permalink to “statement.iterate([namedParameters][, ...anonymousParameters])”">​</a></h3><p><strong>Added in: v23.4.0</strong></p><ul><li><code>namedParameters</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object&gt;</a> 名前付きパラメータをバインドするために使用されるオプションのオブジェクト。 このオブジェクトのキーは、マッピングの構成に使用されます。</li><li><code>...anonymousParameters</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Null_type" target="_blank" rel="noreferrer">&lt;null&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type" target="_blank" rel="noreferrer">&lt;number&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt" target="_blank" rel="noreferrer">&lt;bigint&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> | <a href="/ja/nodejs/api/buffer#class-buffer">&lt;Buffer&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array" target="_blank" rel="noreferrer">&lt;Uint8Array&gt;</a> 匿名パラメータにバインドするゼロ個以上の値。</li><li>戻り値: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#The_iterator_protocol" target="_blank" rel="noreferrer">&lt;Iterator&gt;</a> オブジェクトの反復可能イテレータ。 各オブジェクトは、プリペアドステートメントを実行して返された行に対応します。 各オブジェクトのキーと値は、行の列名と値に対応します。</li></ul><p>このメソッドは、プリペアドステートメントを実行し、オブジェクトのイテレータを返します。 プリペアドステートメントが結果を返さない場合、このメソッドは空のイテレータを返します。 プリペアドステートメントの<a href="https://www.sqlite.org/c3ref/bind_blob" target="_blank" rel="noreferrer">パラメータは、<code>namedParameters</code> と <code>anonymousParameters</code> の値を使用してバインドされます</a>。</p><h3 id="statementrunnamedparameters-anonymousparameters" tabindex="-1"><code>statement.run([namedParameters][, ...anonymousParameters])</code> <a class="header-anchor" href="#statementrunnamedparameters-anonymousparameters" aria-label="Permalink to “statement.run([namedParameters][, ...anonymousParameters])”">​</a></h3><p><strong>Added in: v22.5.0</strong></p><ul><li><code>namedParameters</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object&gt;</a> 名前付きパラメータをバインドするために使用されるオプションのオブジェクト。このオブジェクトのキーは、マッピングを構成するために使用されます。</li><li><code>...anonymousParameters</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Null_type" target="_blank" rel="noreferrer">&lt;null&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type" target="_blank" rel="noreferrer">&lt;number&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt" target="_blank" rel="noreferrer">&lt;bigint&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> | <a href="/ja/nodejs/api/buffer#class-buffer">&lt;Buffer&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array" target="_blank" rel="noreferrer">&lt;Uint8Array&gt;</a> 匿名パラメータにバインドするゼロ個以上の値。</li><li>戻り値: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object&gt;</a><ul><li><code>changes</code>: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type" target="_blank" rel="noreferrer">&lt;number&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt" target="_blank" rel="noreferrer">&lt;bigint&gt;</a> 最近完了した<code>INSERT</code>、<code>UPDATE</code>、または<code>DELETE</code>ステートメントによって変更、挿入、または削除された行の数。このフィールドは、準備されたステートメントの構成に応じて、数値または<code>BigInt</code>のいずれかです。このプロパティは、<a href="https://www.sqlite.org/c3ref/changes" target="_blank" rel="noreferrer"><code>sqlite3_changes64()</code></a>の結果です。</li><li><code>lastInsertRowid</code>: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type" target="_blank" rel="noreferrer">&lt;number&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt" target="_blank" rel="noreferrer">&lt;bigint&gt;</a> 最近挿入された rowid。このフィールドは、準備されたステートメントの構成に応じて、数値または<code>BigInt</code>のいずれかです。このプロパティは、<a href="https://www.sqlite.org/c3ref/last_insert_rowid" target="_blank" rel="noreferrer"><code>sqlite3_last_insert_rowid()</code></a>の結果です。</li></ul></li></ul><p>このメソッドは、準備されたステートメントを実行し、結果として生じた変更をまとめたオブジェクトを返します。準備されたステートメント<a href="https://www.sqlite.org/c3ref/bind_blob" target="_blank" rel="noreferrer">パラメータは、<code>namedParameters</code>と<code>anonymousParameters</code>の値を使用してバインドされます</a>。</p><h3 id="statementsetallowbarenamedparametersenabled" tabindex="-1"><code>statement.setAllowBareNamedParameters(enabled)</code> <a class="header-anchor" href="#statementsetallowbarenamedparametersenabled" aria-label="Permalink to “statement.setAllowBareNamedParameters(enabled)”">​</a></h3><p><strong>追加:</strong> v22.5.0</p><ul><li><code>enabled</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type" target="_blank" rel="noreferrer">&lt;boolean&gt;</a> 接頭辞文字なしで名前付きパラメータのバインドのサポートを有効または無効にします。</li></ul><p>SQLiteパラメータの名前は接頭辞文字で始まります。デフォルトでは、<code>node:sqlite</code>はパラメータをバインドするときにこの接頭辞文字が存在することを要求します。ただし、ドル記号を除いて、これらの接頭辞文字はオブジェクトキーで使用する場合にも追加の引用符が必要です。</p><p>人間工学を向上させるために、このメソッドを使用して、JavaScriptコードで接頭辞文字を必要としない、生の（bare）名前付きパラメータも許可できます。生の（bare）名前付きパラメータを有効にする場合は、注意すべき点がいくつかあります。</p><ul><li>接頭辞文字はSQLで依然として必要です。</li><li>接頭辞文字はJavaScriptでも依然として許可されます。実際、接頭辞付きの名前の方がバインドのパフォーマンスがわずかに向上します。</li><li>同じプリペアドステートメントで<code>$k</code>や<code>@k</code>のようなあいまいな名前付きパラメータを使用すると、生の（bare）名前をどのようにバインドするかを判別できないため、例外が発生します。</li></ul><h3 id="statementsetreadbigintsenabled" tabindex="-1"><code>statement.setReadBigInts(enabled)</code> <a class="header-anchor" href="#statementsetreadbigintsenabled" aria-label="Permalink to “statement.setReadBigInts(enabled)”">​</a></h3><p><strong>追加:</strong> v22.5.0</p><ul><li><code>enabled</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type" target="_blank" rel="noreferrer">&lt;boolean&gt;</a> データベースから<code>INTEGER</code>フィールドを読み取るときに<code>BigInt</code>の使用を有効または無効にします。</li></ul><p>データベースからの読み取り時、SQLiteの<code>INTEGER</code>はデフォルトでJavaScriptの数値にマッピングされます。ただし、SQLiteの<code>INTEGER</code>はJavaScriptの数値が表現できるよりも大きな値を格納できます。このような場合、このメソッドを使用して、JavaScriptの<code>BigInt</code>を使用して<code>INTEGER</code>データを読み取ることができます。このメソッドは、数値と<code>BigInt</code>の両方が常にサポートされているデータベースの書き込み操作には影響を与えません。</p><h3 id="statementsourcesql" tabindex="-1"><code>statement.sourceSQL</code> <a class="header-anchor" href="#statementsourcesql" aria-label="Permalink to “statement.sourceSQL”">​</a></h3><p><strong>追加:</strong> v22.5.0</p><ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> このプリペアドステートメントの作成に使用されたソースSQL。</li></ul><p>プリペアドステートメントのソースSQLテキスト。このプロパティは、<a href="https://www.sqlite.org/c3ref/expanded_sql" target="_blank" rel="noreferrer"><code>sqlite3_sql()</code></a>のラッパーです。</p><h3 id="type-conversion-between-javascript-and-sqlite" tabindex="-1">JavaScriptとSQLite間の型変換 <a class="header-anchor" href="#type-conversion-between-javascript-and-sqlite" aria-label="Permalink to “JavaScriptとSQLite間の型変換”">​</a></h3><p>Node.jsがSQLiteに書き込みまたは読み込みを行う場合、JavaScriptのデータ型とSQLiteの<a href="https://www.sqlite.org/datatype3" target="_blank" rel="noreferrer">データ型</a>の間で変換を行う必要があります。JavaScriptはSQLiteよりも多くのデータ型をサポートしているため、JavaScript型のサブセットのみがサポートされています。サポートされていないデータ型をSQLiteに書き込もうとすると、例外が発生します。</p><table tabindex="0"><thead><tr><th>SQLite</th><th>JavaScript</th></tr></thead><tbody><tr><td><code>NULL</code></td><td><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Null_type" target="_blank" rel="noreferrer">&lt;null&gt;</a></td></tr><tr><td><code>INTEGER</code></td><td><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type" target="_blank" rel="noreferrer">&lt;number&gt;</a> または <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt" target="_blank" rel="noreferrer">&lt;bigint&gt;</a></td></tr><tr><td><code>REAL</code></td><td><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type" target="_blank" rel="noreferrer">&lt;number&gt;</a></td></tr><tr><td><code>TEXT</code></td><td><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a></td></tr><tr><td><code>BLOB</code></td><td><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array" target="_blank" rel="noreferrer">&lt;Uint8Array&gt;</a></td></tr></tbody></table><h2 id="sqliteconstants" tabindex="-1"><code>sqlite.constants</code> <a class="header-anchor" href="#sqliteconstants" aria-label="Permalink to “sqlite.constants”">​</a></h2><p><strong>追加:</strong> v23.5.0</p><ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object&gt;</a></li></ul><p>SQLite操作で一般的に使用される定数を含むオブジェクト。</p><h3 id="sqlite-constants" tabindex="-1">SQLite定数 <a class="header-anchor" href="#sqlite-constants" aria-label="Permalink to “SQLite定数”">​</a></h3><p>次の定数は、<code>sqlite.constants</code>オブジェクトによってエクスポートされます。</p><h4 id="conflict-resolution-constants" tabindex="-1">競合解決定数 <a class="header-anchor" href="#conflict-resolution-constants" aria-label="Permalink to “競合解決定数”">​</a></h4><p>次の定数は、<a href="/ja/nodejs/api/sqlite#databaseapplychangesetchangeset-options"><code>database.applyChangeset()</code></a>で使用することを目的としています。</p><table tabindex="0"><thead><tr><th>定数</th><th>説明</th></tr></thead><tbody><tr><td><code>SQLITE_CHANGESET_OMIT</code></td><td>競合する変更は省略されます。</td></tr><tr><td><code>SQLITE_CHANGESET_REPLACE</code></td><td>競合する変更は既存の値を置き換えます。</td></tr><tr><td><code>SQLITE_CHANGESET_ABORT</code></td><td>変更が競合に遭遇し、データベースをロールバックしたときに中止します。</td></tr></tbody></table>`,113)])}var s=e(a,[[`render`,o]]);export{i as __pageData,s as default};