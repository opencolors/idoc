import{__plugin_vue_export_helper_default as e,createElementBlock as t,createStaticVNode as n,openBlock as r}from"./chunks/plugin-vue_export-helper.Bts1mPc7.js";const i=JSON.parse(`{"title":"理解 Node.js 流中的背压","description":"了解如何在 Node.js 中实现自定义的可读和可写流，同时尊重背压以确保高效的数据流并避免常见的陷阱。","frontmatter":{"title":"理解 Node.js 流中的背压","description":"了解如何在 Node.js 中实现自定义的可读和可写流，同时尊重背压以确保高效的数据流并避免常见的陷阱。","head":[["meta",{"name":"og:title","content":"理解 Node.js 流中的背压 | Node.js - iDoc.dev"}],["meta",{"name":"og:description","content":"了解如何在 Node.js 中实现自定义的可读和可写流，同时尊重背压以确保高效的数据流并避免常见的陷阱。"}],["meta",{"name":"twitter:title","content":"理解 Node.js 流中的背压 | Node.js - iDoc.dev"}],["meta",{"name":"twitter:description","content":"了解如何在 Node.js 中实现自定义的可读和可写流，同时尊重背压以确保高效的数据流并避免常见的陷阱。"}],["link",{"rel":"canonical","href":"https://idoc.dev/zh/nodejs/guide/backpressuring-in-streams"}],["meta",{"property":"og:url","content":"https://idoc.dev/zh/nodejs/guide/backpressuring-in-streams"}]]},"headers":[],"relativePath":"zh/nodejs/guide/backpressuring-in-streams.md","filePath":"zh/nodejs/guide/backpressuring-in-streams.md","lastUpdated":1749464498000}`),a={name:`zh/nodejs/guide/backpressuring-in-streams.md`};function o(e,i,a,o,s,c){return r(),t(`div`,null,i[0]||=[n("",104)])}var s=e(a,[[`render`,o]]);export{i as __pageData,s as default};