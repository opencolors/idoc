import{__plugin_vue_export_helper_default as e,createElementBlock as t,createStaticVNode as n,openBlock as r}from"./chunks/plugin-vue_export-helper.Bts1mPc7.js";const i=JSON.parse(`{"title":"Node.js SQLite API 文档","description":"Node.js SQLite API 文档详细介绍了如何在 Node.js 应用程序中与 SQLite 数据库进行交互，包括数据库连接管理、SQL 查询执行、事务处理和错误管理。","frontmatter":{"title":"Node.js SQLite API 文档","description":"Node.js SQLite API 文档详细介绍了如何在 Node.js 应用程序中与 SQLite 数据库进行交互，包括数据库连接管理、SQL 查询执行、事务处理和错误管理。","head":[["meta",{"name":"og:title","content":"Node.js SQLite API 文档 | Node.js - iDoc.dev"}],["meta",{"name":"og:description","content":"Node.js SQLite API 文档详细介绍了如何在 Node.js 应用程序中与 SQLite 数据库进行交互，包括数据库连接管理、SQL 查询执行、事务处理和错误管理。"}],["meta",{"name":"twitter:title","content":"Node.js SQLite API 文档 | Node.js - iDoc.dev"}],["meta",{"name":"twitter:description","content":"Node.js SQLite API 文档详细介绍了如何在 Node.js 应用程序中与 SQLite 数据库进行交互，包括数据库连接管理、SQL 查询执行、事务处理和错误管理。"}],["link",{"rel":"canonical","href":"https://idoc.dev/zh/nodejs/api/sqlite"}],["meta",{"property":"og:url","content":"https://idoc.dev/zh/nodejs/api/sqlite"}]]},"headers":[],"relativePath":"zh/nodejs/api/sqlite.md","filePath":"zh/nodejs/api/sqlite.md","lastUpdated":1749464498000}`),a={name:`zh/nodejs/api/sqlite.md`};function o(e,i,a,o,s,c){return r(),t(`div`,null,i[0]||=[n(`<h1 id="sqlite" tabindex="-1">SQLite <a class="header-anchor" href="#sqlite" aria-label="Permalink to “SQLite”">​</a></h1><p><strong>添加于: v22.5.0</strong></p><div class="warning custom-block"><p class="custom-block-title">[Stable: 1 - 实验性]</p><p><a href="/zh/nodejs/api/documentation#stability-index">Stable: 1</a> <a href="/zh/nodejs/api/documentation#stability-index">稳定性: 1</a>.1 - 积极开发中。</p></div><p><strong>源码:</strong> <a href="https://github.com/nodejs/node/blob/v23.5.0/lib/sqlite.js" target="_blank" rel="noreferrer">lib/sqlite.js</a></p><p><code>node:sqlite</code> 模块方便使用 SQLite 数据库。要访问它：</p><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-17" id="tab-18" checked><label data-title="ESM" for="tab-18">ESM</label><input type="radio" name="group-17" id="tab-19"><label data-title="CJS" for="tab-19">CJS</label></div><div class="blocks"><div class="language-js active line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sqlite </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;node:sqlite&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> sqlite</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;node:sqlite&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></div></div><p>此模块仅在 <code>node:</code> 方案下可用。</p><p>以下示例展示了 <code>node:sqlite</code> 模块的基本用法，用于打开一个内存数据库，将数据写入数据库，然后将数据读回。</p><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-27" id="tab-28" checked><label data-title="ESM" for="tab-28">ESM</label><input type="radio" name="group-27" id="tab-29"><label data-title="CJS" for="tab-29">CJS</label></div><div class="blocks"><div class="language-js active line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { DatabaseSync } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;node:sqlite&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> database</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> DatabaseSync</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;:memory:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 从字符串执行 SQL 语句。</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">database.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">exec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  CREATE TABLE data(</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    key INTEGER PRIMARY KEY,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    value TEXT</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  ) STRICT</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 创建一个预处理语句以将数据插入数据库。</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> insert</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> database.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">prepare</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;INSERT INTO data (key, value) VALUES (?, ?)&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 使用绑定值执行预处理语句。</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">insert.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">run</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;hello&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">insert.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">run</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;world&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 创建一个预处理语句以从数据库读取数据。</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> query</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> database.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">prepare</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;SELECT * FROM data ORDER BY key&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 执行预处理语句并记录结果集。</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(query.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">all</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">());</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 打印: [ { key: 1, value: &#39;hello&#39; }, { key: 2, value: &#39;world&#39; } ]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;use strict&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">DatabaseSync</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;node:sqlite&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> database</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> DatabaseSync</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;:memory:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 从字符串执行 SQL 语句。</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">database.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">exec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  CREATE TABLE data(</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    key INTEGER PRIMARY KEY,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    value TEXT</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  ) STRICT</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 创建一个预处理语句以将数据插入数据库。</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> insert</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> database.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">prepare</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;INSERT INTO data (key, value) VALUES (?, ?)&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 使用绑定值执行预处理语句。</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">insert.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">run</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;hello&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">insert.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">run</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;world&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 创建一个预处理语句以从数据库读取数据。</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> query</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> database.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">prepare</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;SELECT * FROM data ORDER BY key&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 执行预处理语句并记录结果集。</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(query.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">all</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">());</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 打印: [ { key: 1, value: &#39;hello&#39; }, { key: 2, value: &#39;world&#39; } ]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div></div></div><h2 id="class-databasesync" tabindex="-1">类: <code>DatabaseSync</code> <a class="header-anchor" href="#class-databasesync" aria-label="Permalink to “类: DatabaseSync”">​</a></h2><p><strong>新增于: v22.5.0</strong></p><p>此类代表与 SQLite 数据库的单个<a href="https://www.sqlite.org/c3ref/sqlite3" target="_blank" rel="noreferrer">连接</a>。此类暴露的所有 API 都是同步执行的。</p><h3 id="new-databasesynclocation-options" tabindex="-1"><code>new DatabaseSync(location[, options])</code> <a class="header-anchor" href="#new-databasesynclocation-options" aria-label="Permalink to “new DatabaseSync(location[, options])”">​</a></h3><p><strong>新增于: v22.5.0</strong></p><ul><li><code>location</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> 数据库的位置。SQLite 数据库可以存储在文件中或完全<a href="https://www.sqlite.org/inmemorydb" target="_blank" rel="noreferrer">在内存中</a>。要使用文件支持的数据库，位置应该是文件路径。要使用内存数据库，位置应该是特殊名称 <code>&#39;:memory:&#39;</code>。</li><li><code>options</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object&gt;</a> 数据库连接的配置选项。支持以下选项： <ul><li><code>open</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type" target="_blank" rel="noreferrer">&lt;boolean&gt;</a> 如果为 <code>true</code>，则数据库由构造函数打开。当此值为 <code>false</code> 时，必须通过 <code>open()</code> 方法打开数据库。<strong>默认值:</strong> <code>true</code>。</li><li><code>readOnly</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type" target="_blank" rel="noreferrer">&lt;boolean&gt;</a> 如果为 <code>true</code>，则以只读模式打开数据库。如果数据库不存在，则打开它将失败。<strong>默认值:</strong> <code>false</code>。</li><li><code>enableForeignKeyConstraints</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type" target="_blank" rel="noreferrer">&lt;boolean&gt;</a> 如果为 <code>true</code>，则启用外键约束。建议这样做，但为了与旧数据库架构兼容，可以禁用它。可以使用 <a href="https://www.sqlite.org/pragma#pragma_foreign_keys" target="_blank" rel="noreferrer"><code>PRAGMA foreign_keys</code></a> 在打开数据库后启用和禁用外键约束的强制执行。<strong>默认值:</strong> <code>true</code>。</li><li><code>enableDoubleQuotedStringLiterals</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type" target="_blank" rel="noreferrer">&lt;boolean&gt;</a> 如果为 <code>true</code>，SQLite 将接受<a href="https://www.sqlite.org/quirks#dblquote" target="_blank" rel="noreferrer">双引号字符串文字</a>。不建议这样做，但可以启用它以与旧数据库架构兼容。<strong>默认值:</strong> <code>false</code>。</li><li><code>allowExtension</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type" target="_blank" rel="noreferrer">&lt;boolean&gt;</a> 如果为 <code>true</code>，则启用 <code>loadExtension</code> SQL 函数和 <code>loadExtension()</code> 方法。您可以稍后调用 <code>enableLoadExtension(false)</code> 来禁用此功能。<strong>默认值:</strong> <code>false</code>。</li></ul></li></ul><p>构造一个新的 <code>DatabaseSync</code> 实例。</p><h3 id="databaseclose" tabindex="-1"><code>database.close()</code> <a class="header-anchor" href="#databaseclose" aria-label="Permalink to “database.close()”">​</a></h3><p><strong>添加于: v22.5.0</strong></p><p>关闭数据库连接。如果数据库未打开，则会抛出异常。此方法是 <a href="https://www.sqlite.org/c3ref/close" target="_blank" rel="noreferrer"><code>sqlite3_close_v2()</code></a> 的一个包装器。</p><h3 id="databaseloadextensionpath" tabindex="-1"><code>database.loadExtension(path)</code> <a class="header-anchor" href="#databaseloadextensionpath" aria-label="Permalink to “database.loadExtension(path)”">​</a></h3><p><strong>添加于: v23.5.0</strong></p><ul><li><code>path</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> 要加载的共享库的路径。</li></ul><p>将共享库加载到数据库连接中。此方法是 <a href="https://www.sqlite.org/c3ref/load_extension" target="_blank" rel="noreferrer"><code>sqlite3_load_extension()</code></a> 的一个包装器。构造 <code>DatabaseSync</code> 实例时，需要启用 <code>allowExtension</code> 选项。</p><h3 id="databaseenableloadextensionallow" tabindex="-1"><code>database.enableLoadExtension(allow)</code> <a class="header-anchor" href="#databaseenableloadextensionallow" aria-label="Permalink to “database.enableLoadExtension(allow)”">​</a></h3><p><strong>添加于: v23.5.0</strong></p><ul><li><code>allow</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type" target="_blank" rel="noreferrer">&lt;boolean&gt;</a> 是否允许加载扩展。</li></ul><p>启用或禁用 <code>loadExtension</code> SQL 函数和 <code>loadExtension()</code> 方法。当构造时 <code>allowExtension</code> 为 <code>false</code> 时，出于安全原因，您无法启用加载扩展。</p><h3 id="databaseexecsql" tabindex="-1"><code>database.exec(sql)</code> <a class="header-anchor" href="#databaseexecsql" aria-label="Permalink to “database.exec(sql)”">​</a></h3><p><strong>添加于: v22.5.0</strong></p><ul><li><code>sql</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> 要执行的 SQL 字符串。</li></ul><p>此方法允许执行一个或多个 SQL 语句，而不返回任何结果。当执行从文件读取的 SQL 语句时，此方法非常有用。此方法是 <a href="https://www.sqlite.org/c3ref/exec" target="_blank" rel="noreferrer"><code>sqlite3_exec()</code></a> 的一个包装器。</p><h3 id="databasefunctionname-options-function" tabindex="-1"><code>database.function(name[, options], function)</code> <a class="header-anchor" href="#databasefunctionname-options-function" aria-label="Permalink to “database.function(name[, options], function)”">​</a></h3><p><strong>添加于: v23.5.0</strong></p><ul><li><p><code>name</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> 要创建的 SQLite 函数的名称。</p></li><li><p><code>options</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object&gt;</a> 函数的可选配置设置。支持以下属性：</p><ul><li><code>deterministic</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type" target="_blank" rel="noreferrer">&lt;boolean&gt;</a> 如果为 <code>true</code>，则在创建的函数上设置 <a href="https://www.sqlite.org/c3ref/c_deterministic" target="_blank" rel="noreferrer"><code>SQLITE_DETERMINISTIC</code></a> 标志。 <strong>默认值:</strong> <code>false</code>。</li><li><code>directOnly</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type" target="_blank" rel="noreferrer">&lt;boolean&gt;</a> 如果为 <code>true</code>，则在创建的函数上设置 <a href="https://www.sqlite.org/c3ref/c_deterministic" target="_blank" rel="noreferrer"><code>SQLITE_DIRECTONLY</code></a> 标志。 <strong>默认值:</strong> <code>false</code>。</li><li><code>useBigIntArguments</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type" target="_blank" rel="noreferrer">&lt;boolean&gt;</a> 如果为 <code>true</code>，则传递给 <code>function</code> 的整数参数将转换为 <code>BigInt</code>。 如果为 <code>false</code>，则整数参数将作为 JavaScript 数字传递。 <strong>默认值:</strong> <code>false</code>。</li><li><code>varargs</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type" target="_blank" rel="noreferrer">&lt;boolean&gt;</a> 如果为 <code>true</code>，则 <code>function</code> 可以接受可变数量的参数。 如果为 <code>false</code>，则必须使用正好 <code>function.length</code> 个参数调用 <code>function</code>。 <strong>默认值:</strong> <code>false</code>。</li></ul></li><li><p><code>function</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function" target="_blank" rel="noreferrer">&lt;Function&gt;</a> 调用 SQLite 函数时要调用的 JavaScript 函数。</p></li></ul><p>此方法用于创建 SQLite 用户定义函数。此方法是 <a href="https://www.sqlite.org/c3ref/create_function" target="_blank" rel="noreferrer"><code>sqlite3_create_function_v2()</code></a> 的一个包装器。</p><h3 id="databaseopen" tabindex="-1"><code>database.open()</code> <a class="header-anchor" href="#databaseopen" aria-label="Permalink to “database.open()”">​</a></h3><p><strong>添加于: v22.5.0</strong></p><p>打开 <code>DatabaseSync</code> 构造函数的 <code>location</code> 参数中指定的数据库。只有当数据库不是通过构造函数打开时，才应使用此方法。如果数据库已打开，则会抛出异常。</p><h3 id="databasepreparesql" tabindex="-1"><code>database.prepare(sql)</code> <a class="header-anchor" href="#databasepreparesql" aria-label="Permalink to “database.prepare(sql)”">​</a></h3><p><strong>添加于: v22.5.0</strong></p><ul><li><code>sql</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> 要编译为预处理语句的 SQL 字符串。</li><li>返回: <a href="/zh/nodejs/api/sqlite#class-statementsync">&lt;StatementSync&gt;</a> 预处理语句。</li></ul><p>将 SQL 语句编译为<a href="https://www.sqlite.org/c3ref/stmt" target="_blank" rel="noreferrer">预处理语句</a>。此方法是对 <a href="https://www.sqlite.org/c3ref/prepare" target="_blank" rel="noreferrer"><code>sqlite3_prepare_v2()</code></a> 的包装。</p><h3 id="databasecreatesessionoptions" tabindex="-1"><code>database.createSession([options])</code> <a class="header-anchor" href="#databasecreatesessionoptions" aria-label="Permalink to “database.createSession([options])”">​</a></h3><p><strong>添加于: v23.3.0</strong></p><ul><li><p><code>options</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object&gt;</a> 会话的配置选项。</p><ul><li><code>table</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> 要跟踪更改的特定表。 默认情况下，会跟踪对所有表的更改。</li><li><code>db</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> 要跟踪的数据库的名称。 当使用 <a href="https://www.sqlite.org/lang_attach" target="_blank" rel="noreferrer"><code>ATTACH DATABASE</code></a> 添加了多个数据库时，这很有用。 <strong>默认</strong>: <code>&#39;main&#39;</code>。</li></ul></li><li><p>返回: <a href="/zh/nodejs/api/sqlite#class-session">&lt;Session&gt;</a> 会话句柄。</p></li></ul><p>创建会话并将其附加到数据库。此方法是对 <a href="https://www.sqlite.org/session/sqlite3session_create" target="_blank" rel="noreferrer"><code>sqlite3session_create()</code></a> 和 <a href="https://www.sqlite.org/session/sqlite3session_attach" target="_blank" rel="noreferrer"><code>sqlite3session_attach()</code></a> 的包装。</p><h3 id="databaseapplychangesetchangeset-options" tabindex="-1"><code>database.applyChangeset(changeset[, options])</code> <a class="header-anchor" href="#databaseapplychangesetchangeset-options" aria-label="Permalink to “database.applyChangeset(changeset[, options])”">​</a></h3><p><strong>添加于: v23.3.0</strong></p><ul><li><p><code>changeset</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array" target="_blank" rel="noreferrer">&lt;Uint8Array&gt;</a> 二进制变更集或补丁集。</p></li><li><p><code>options</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object&gt;</a> 用于配置如何应用更改的选项。</p><ul><li><code>filter</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function" target="_blank" rel="noreferrer">&lt;Function&gt;</a> 跳过那些当目标表名传递给此函数时返回真值的更改。 默认情况下，会尝试所有更改。</li><li><code>onConflict</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type" target="_blank" rel="noreferrer">&lt;number&gt;</a> 确定如何处理冲突。 <strong>默认</strong>: <code>SQLITE_CHANGESET_ABORT</code>。</li><li><code>SQLITE_CHANGESET_OMIT</code>: 忽略冲突的更改。</li><li><code>SQLITE_CHANGESET_REPLACE</code>: 冲突的更改将替换现有值。</li><li><code>SQLITE_CHANGESET_ABORT</code>: 发生冲突时中止并回滚数据库。</li></ul></li><li><p>返回: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type" target="_blank" rel="noreferrer">&lt;boolean&gt;</a> 变更集是否已成功应用而未被中止。</p></li></ul><p>如果数据库未打开，则会抛出异常。此方法是对 <a href="https://www.sqlite.org/session/sqlite3changeset_apply" target="_blank" rel="noreferrer"><code>sqlite3changeset_apply()</code></a> 的包装。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> sourceDb</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> DatabaseSync</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;:memory:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> targetDb</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> DatabaseSync</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;:memory:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">sourceDb.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">exec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;CREATE TABLE data(key INTEGER PRIMARY KEY, value TEXT)&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">targetDb.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">exec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;CREATE TABLE data(key INTEGER PRIMARY KEY, value TEXT)&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> session</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sourceDb.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createSession</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> insert</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sourceDb.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">prepare</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;INSERT INTO data (key, value) VALUES (?, ?)&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">insert.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">run</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;hello&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">insert.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">run</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;world&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> changeset</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> session.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">changeset</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">targetDb.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">applyChangeset</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(changeset);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 现在，变更集已应用，targetDb 包含与 sourceDb 相同的数据。</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h2 id="class-session" tabindex="-1">类: <code>Session</code> <a class="header-anchor" href="#class-session" aria-label="Permalink to “类: Session”">​</a></h2><p><strong>添加于: v23.3.0</strong></p><h3 id="sessionchangeset" tabindex="-1"><code>session.changeset()</code> <a class="header-anchor" href="#sessionchangeset" aria-label="Permalink to “session.changeset()”">​</a></h3><p><strong>添加于: v23.3.0</strong></p><ul><li>返回: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array" target="_blank" rel="noreferrer">&lt;Uint8Array&gt;</a> 可应用于其他数据库的二进制变更集。</li></ul><p>检索包含自创建变更集以来所有更改的变更集。可以多次调用。如果数据库或会话未打开，则会抛出异常。此方法是 <a href="https://www.sqlite.org/session/sqlite3session_changeset" target="_blank" rel="noreferrer"><code>sqlite3session_changeset()</code></a> 的一个包装器。</p><h3 id="sessionpatchset" tabindex="-1"><code>session.patchset()</code> <a class="header-anchor" href="#sessionpatchset" aria-label="Permalink to “session.patchset()”">​</a></h3><p><strong>添加于: v23.3.0</strong></p><ul><li>返回: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array" target="_blank" rel="noreferrer">&lt;Uint8Array&gt;</a> 可应用于其他数据库的二进制补丁集。</li></ul><p>与上述方法类似，但生成更紧凑的补丁集。 请参阅 SQLite 文档中的<a href="https://www.sqlite.org/sessionintro#changesets_and_patchsets" target="_blank" rel="noreferrer">变更集和补丁集</a>。如果数据库或会话未打开，则会抛出异常。此方法是 <a href="https://www.sqlite.org/session/sqlite3session_patchset" target="_blank" rel="noreferrer"><code>sqlite3session_patchset()</code></a> 的一个包装器。</p><h3 id="sessionclose" tabindex="-1"><code>session.close()</code> <a class="header-anchor" href="#sessionclose" aria-label="Permalink to “session.close()”">​</a></h3><p>关闭会话。如果数据库或会话未打开，则会抛出异常。此方法是 <a href="https://www.sqlite.org/session/sqlite3session_delete" target="_blank" rel="noreferrer"><code>sqlite3session_delete()</code></a> 的一个包装器。</p><h2 id="class-statementsync" tabindex="-1">类: <code>StatementSync</code> <a class="header-anchor" href="#class-statementsync" aria-label="Permalink to “类: StatementSync”">​</a></h2><p><strong>添加于: v22.5.0</strong></p><p>此类代表一个 <a href="https://www.sqlite.org/c3ref/stmt" target="_blank" rel="noreferrer">预处理语句</a>。无法通过其构造函数实例化此类。 而是通过 <code>database.prepare()</code> 方法创建实例。 此类公开的所有 API 都是同步执行的。</p><p>预处理语句是用于创建它的 SQL 的有效二进制表示形式。 预处理语句是可参数化的，并且可以使用不同的绑定值多次调用。 参数还提供针对 <a href="https://en.wikipedia.org/wiki/SQL_injection" target="_blank" rel="noreferrer">SQL 注入</a> 攻击的保护。 因此，在处理用户输入时，预处理语句优先于手工制作的 SQL 字符串。</p><h3 id="statementallnamedparameters-anonymousparameters" tabindex="-1"><code>statement.all([namedParameters][, ...anonymousParameters])</code> <a class="header-anchor" href="#statementallnamedparameters-anonymousparameters" aria-label="Permalink to “statement.all([namedParameters][, ...anonymousParameters])”">​</a></h3><p><strong>新增于: v22.5.0</strong></p><ul><li><code>namedParameters</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object&gt;</a> 一个可选对象，用于绑定命名参数。此对象的键用于配置映射。</li><li><code>...anonymousParameters</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Null_type" target="_blank" rel="noreferrer">&lt;null&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type" target="_blank" rel="noreferrer">&lt;number&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt" target="_blank" rel="noreferrer">&lt;bigint&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> | <a href="/zh/nodejs/api/buffer#class-buffer">&lt;Buffer&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array" target="_blank" rel="noreferrer">&lt;Uint8Array&gt;</a> 零个或多个要绑定到匿名参数的值。</li><li>返回: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array" target="_blank" rel="noreferrer">&lt;Array&gt;</a> 一个对象数组。 每个对象对应于执行预处理语句返回的行。 每个对象的键和值对应于该行的列名和值。</li></ul><p>此方法执行预处理语句并返回所有结果作为对象数组。 如果预处理语句未返回任何结果，则此方法返回一个空数组。 预处理语句<a href="https://www.sqlite.org/c3ref/bind_blob" target="_blank" rel="noreferrer">参数使用绑定</a> <code>namedParameters</code> 和 <code>anonymousParameters</code> 中的值。</p><h3 id="statementexpandedsql" tabindex="-1"><code>statement.expandedSQL</code> <a class="header-anchor" href="#statementexpandedsql" aria-label="Permalink to “statement.expandedSQL”">​</a></h3><p><strong>新增于: v22.5.0</strong></p><ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> 扩展后的源 SQL，包含参数值。</li></ul><p>预处理语句的源 SQL 文本，其中参数占位符被替换为最近一次执行此预处理语句期间使用的值。 此属性是 <a href="https://www.sqlite.org/c3ref/expanded_sql" target="_blank" rel="noreferrer"><code>sqlite3_expanded_sql()</code></a> 的包装器。</p><h3 id="statementgetnamedparameters-anonymousparameters" tabindex="-1"><code>statement.get([namedParameters][, ...anonymousParameters])</code> <a class="header-anchor" href="#statementgetnamedparameters-anonymousparameters" aria-label="Permalink to “statement.get([namedParameters][, ...anonymousParameters])”">​</a></h3><p><strong>添加于: v22.5.0</strong></p><ul><li><code>namedParameters</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object&gt;</a> 一个可选对象，用于绑定具名参数。该对象的键用于配置映射。</li><li><code>...anonymousParameters</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Null_type" target="_blank" rel="noreferrer">&lt;null&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type" target="_blank" rel="noreferrer">&lt;number&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt" target="_blank" rel="noreferrer">&lt;bigint&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> | <a href="/zh/nodejs/api/buffer#class-buffer">&lt;Buffer&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array" target="_blank" rel="noreferrer">&lt;Uint8Array&gt;</a> 零个或多个值，用于绑定到匿名参数。</li><li>返回: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Undefined_type" target="_blank" rel="noreferrer">&lt;undefined&gt;</a> 一个对象，对应于执行预处理语句返回的第一行。对象的键和值对应于行的列名和值。如果数据库未返回任何行，则此方法返回 <code>undefined</code>。</li></ul><p>此方法执行预处理语句并返回第一个结果作为对象。如果预处理语句未返回任何结果，则此方法返回 <code>undefined</code>。预处理语句<a href="https://www.sqlite.org/c3ref/bind_blob" target="_blank" rel="noreferrer">参数使用 <code>namedParameters</code> 和 <code>anonymousParameters</code> 中的值绑定</a>。</p><h3 id="statementiteratenamedparameters-anonymousparameters" tabindex="-1"><code>statement.iterate([namedParameters][, ...anonymousParameters])</code> <a class="header-anchor" href="#statementiteratenamedparameters-anonymousparameters" aria-label="Permalink to “statement.iterate([namedParameters][, ...anonymousParameters])”">​</a></h3><p><strong>添加于: v23.4.0</strong></p><ul><li><code>namedParameters</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object&gt;</a> 一个可选对象，用于绑定具名参数。该对象的键用于配置映射。</li><li><code>...anonymousParameters</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Null_type" target="_blank" rel="noreferrer">&lt;null&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type" target="_blank" rel="noreferrer">&lt;number&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt" target="_blank" rel="noreferrer">&lt;bigint&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> | <a href="/zh/nodejs/api/buffer#class-buffer">&lt;Buffer&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array" target="_blank" rel="noreferrer">&lt;Uint8Array&gt;</a> 零个或多个值，用于绑定到匿名参数。</li><li>返回: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#The_iterator_protocol" target="_blank" rel="noreferrer">&lt;Iterator&gt;</a> 一个可迭代的对象迭代器。每个对象对应于执行预处理语句返回的行。每个对象的键和值对应于行的列名和值。</li></ul><p>此方法执行预处理语句并返回一个对象迭代器。如果预处理语句未返回任何结果，则此方法返回一个空迭代器。预处理语句<a href="https://www.sqlite.org/c3ref/bind_blob" target="_blank" rel="noreferrer">参数使用 <code>namedParameters</code> 和 <code>anonymousParameters</code> 中的值绑定</a>。</p><h3 id="statementrunnamedparameters-anonymousparameters" tabindex="-1"><code>statement.run([namedParameters][, ...anonymousParameters])</code> <a class="header-anchor" href="#statementrunnamedparameters-anonymousparameters" aria-label="Permalink to “statement.run([namedParameters][, ...anonymousParameters])”">​</a></h3><p><strong>新增于: v22.5.0</strong></p><ul><li><code>namedParameters</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object&gt;</a> (可选) 用于绑定命名参数的对象。此对象的键用于配置映射。</li><li><code>...anonymousParameters</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Null_type" target="_blank" rel="noreferrer">&lt;null&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type" target="_blank" rel="noreferrer">&lt;number&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt" target="_blank" rel="noreferrer">&lt;bigint&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> | <a href="/zh/nodejs/api/buffer#class-buffer">&lt;Buffer&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array" target="_blank" rel="noreferrer">&lt;Uint8Array&gt;</a> 零个或多个要绑定到匿名参数的值。</li><li>返回: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object&gt;</a><ul><li><code>changes</code>: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type" target="_blank" rel="noreferrer">&lt;number&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt" target="_blank" rel="noreferrer">&lt;bigint&gt;</a> 最近完成的 <code>INSERT</code>、<code>UPDATE</code> 或 <code>DELETE</code> 语句修改、插入或删除的行数。此字段是数字或 <code>BigInt</code>，具体取决于预处理语句的配置。此属性是 <a href="https://www.sqlite.org/c3ref/changes" target="_blank" rel="noreferrer"><code>sqlite3_changes64()</code></a> 的结果。</li><li><code>lastInsertRowid</code>: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type" target="_blank" rel="noreferrer">&lt;number&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt" target="_blank" rel="noreferrer">&lt;bigint&gt;</a> 最近插入的 rowid。此字段是数字或 <code>BigInt</code>，具体取决于预处理语句的配置。此属性是 <a href="https://www.sqlite.org/c3ref/last_insert_rowid" target="_blank" rel="noreferrer"><code>sqlite3_last_insert_rowid()</code></a> 的结果。</li></ul></li></ul><p>此方法执行预处理语句并返回一个总结结果更改的对象。预处理语句<a href="https://www.sqlite.org/c3ref/bind_blob" target="_blank" rel="noreferrer">参数使用</a> <code>namedParameters</code> 和 <code>anonymousParameters</code> 中的值进行绑定。</p><h3 id="statementsetallowbarenamedparametersenabled" tabindex="-1"><code>statement.setAllowBareNamedParameters(enabled)</code> <a class="header-anchor" href="#statementsetallowbarenamedparametersenabled" aria-label="Permalink to “statement.setAllowBareNamedParameters(enabled)”">​</a></h3><p><strong>新增于: v22.5.0</strong></p><ul><li><code>enabled</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type" target="_blank" rel="noreferrer">&lt;boolean&gt;</a> 启用或禁用对绑定不带前缀字符的命名参数的支持。</li></ul><p>SQLite 参数的名称以一个前缀字符开头。 默认情况下，<code>node:sqlite</code> 要求在绑定参数时必须存在此前缀字符。 但是，除了美元符号字符之外，这些前缀字符在用作对象键时还需要额外的引号。</p><p>为了提高人体工程学，可以使用此方法来允许裸命名参数，这些参数不需要 JavaScript 代码中的前缀字符。 启用裸命名参数时，需要注意以下几个注意事项：</p><ul><li>SQL 中仍然需要前缀字符。</li><li>JavaScript 中仍然允许前缀字符。 事实上，带前缀的名称将具有稍好的绑定性能。</li><li>在同一预处理语句中使用有歧义的命名参数，例如 <code>$k</code> 和 <code>@k</code>，将导致异常，因为它无法确定如何绑定裸名称。</li></ul><h3 id="statementsetreadbigintsenabled" tabindex="-1"><code>statement.setReadBigInts(enabled)</code> <a class="header-anchor" href="#statementsetreadbigintsenabled" aria-label="Permalink to “statement.setReadBigInts(enabled)”">​</a></h3><p><strong>新增于: v22.5.0</strong></p><ul><li><code>enabled</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type" target="_blank" rel="noreferrer">&lt;boolean&gt;</a> 启用或禁用在从数据库读取 <code>INTEGER</code> 字段时使用 <code>BigInt</code>。</li></ul><p>从数据库读取时，默认情况下 SQLite <code>INTEGER</code> 会映射到 JavaScript 数字。 但是，SQLite <code>INTEGER</code> 可以存储大于 JavaScript 数字能够表示的值。 在这种情况下，可以使用此方法使用 JavaScript <code>BigInt</code> 读取 <code>INTEGER</code> 数据。 此方法对数据库写入操作没有影响，在数据库写入操作中始终支持数字和 <code>BigInt</code>。</p><h3 id="statementsourcesql" tabindex="-1"><code>statement.sourceSQL</code> <a class="header-anchor" href="#statementsourcesql" aria-label="Permalink to “statement.sourceSQL”">​</a></h3><p><strong>新增于: v22.5.0</strong></p><ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> 用于创建此预处理语句的源 SQL。</li></ul><p>预处理语句的源 SQL 文本。 此属性是 <a href="https://www.sqlite.org/c3ref/expanded_sql" target="_blank" rel="noreferrer"><code>sqlite3_sql()</code></a> 的包装器。</p><h3 id="type-conversion-between-javascript-and-sqlite" tabindex="-1">JavaScript 与 SQLite 之间的数据类型转换 <a class="header-anchor" href="#type-conversion-between-javascript-and-sqlite" aria-label="Permalink to “JavaScript 与 SQLite 之间的数据类型转换”">​</a></h3><p>当 Node.js 向 SQLite 写入或从 SQLite 读取数据时，需要在 JavaScript 数据类型和 SQLite 的 <a href="https://www.sqlite.org/datatype3" target="_blank" rel="noreferrer">数据类型</a> 之间进行转换。 由于 JavaScript 支持比 SQLite 更多的数据类型，因此仅支持 JavaScript 类型的一个子集。 尝试将不受支持的数据类型写入 SQLite 将导致异常。</p><table tabindex="0"><thead><tr><th>SQLite</th><th>JavaScript</th></tr></thead><tbody><tr><td><code>NULL</code></td><td><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Null_type" target="_blank" rel="noreferrer">&lt;null&gt;</a></td></tr><tr><td><code>INTEGER</code></td><td><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type" target="_blank" rel="noreferrer">&lt;number&gt;</a> or <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt" target="_blank" rel="noreferrer">&lt;bigint&gt;</a></td></tr><tr><td><code>REAL</code></td><td><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type" target="_blank" rel="noreferrer">&lt;number&gt;</a></td></tr><tr><td><code>TEXT</code></td><td><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a></td></tr><tr><td><code>BLOB</code></td><td><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array" target="_blank" rel="noreferrer">&lt;Uint8Array&gt;</a></td></tr></tbody></table><h2 id="sqliteconstants" tabindex="-1"><code>sqlite.constants</code> <a class="header-anchor" href="#sqliteconstants" aria-label="Permalink to “sqlite.constants”">​</a></h2><p><strong>添加于: v23.5.0</strong></p><ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object&gt;</a></li></ul><p>一个包含 SQLite 操作常用常量的对象。</p><h3 id="sqlite-constants" tabindex="-1">SQLite 常量 <a class="header-anchor" href="#sqlite-constants" aria-label="Permalink to “SQLite 常量”">​</a></h3><p>以下常量由 <code>sqlite.constants</code> 对象导出。</p><h4 id="conflict-resolution-constants" tabindex="-1">冲突解决常量 <a class="header-anchor" href="#conflict-resolution-constants" aria-label="Permalink to “冲突解决常量”">​</a></h4><p>以下常量用于 <a href="/zh/nodejs/api/sqlite#databaseapplychangesetchangeset-options"><code>database.applyChangeset()</code></a>。</p><table tabindex="0"><thead><tr><th>常量</th><th>描述</th></tr></thead><tbody><tr><td><code>SQLITE_CHANGESET_OMIT</code></td><td>省略冲突的更改。</td></tr><tr><td><code>SQLITE_CHANGESET_REPLACE</code></td><td>冲突的更改替换现有值。</td></tr><tr><td><code>SQLITE_CHANGESET_ABORT</code></td><td>当更改遇到冲突时中止并回滚数据库。</td></tr></tbody></table>`,113)])}var s=e(a,[[`render`,o]]);export{i as __pageData,s as default};