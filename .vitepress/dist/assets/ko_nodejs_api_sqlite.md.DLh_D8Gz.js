import{__plugin_vue_export_helper_default as e,createElementBlock as t,createStaticVNode as n,openBlock as r}from"./chunks/plugin-vue_export-helper.Bts1mPc7.js";const i=JSON.parse(`{"title":"Node.js SQLite API 문서","description":"Node.js SQLite API 문서는 Node.js 애플리케이션에서 SQLite 데이터베이스와 상호작용하는 방법에 대한 포괄적인 세부 정보를 제공합니다. 데이터베이스 연결 관리, SQL 쿼리 실행, 트랜잭션 처리 및 오류 관리를 다룹니다.","frontmatter":{"title":"Node.js SQLite API 문서","description":"Node.js SQLite API 문서는 Node.js 애플리케이션에서 SQLite 데이터베이스와 상호작용하는 방법에 대한 포괄적인 세부 정보를 제공합니다. 데이터베이스 연결 관리, SQL 쿼리 실행, 트랜잭션 처리 및 오류 관리를 다룹니다.","head":[["meta",{"name":"og:title","content":"Node.js SQLite API 문서 | Node.js - iDoc.dev"}],["meta",{"name":"og:description","content":"Node.js SQLite API 문서는 Node.js 애플리케이션에서 SQLite 데이터베이스와 상호작용하는 방법에 대한 포괄적인 세부 정보를 제공합니다. 데이터베이스 연결 관리, SQL 쿼리 실행, 트랜잭션 처리 및 오류 관리를 다룹니다."}],["meta",{"name":"twitter:title","content":"Node.js SQLite API 문서 | Node.js - iDoc.dev"}],["meta",{"name":"twitter:description","content":"Node.js SQLite API 문서는 Node.js 애플리케이션에서 SQLite 데이터베이스와 상호작용하는 방법에 대한 포괄적인 세부 정보를 제공합니다. 데이터베이스 연결 관리, SQL 쿼리 실행, 트랜잭션 처리 및 오류 관리를 다룹니다."}],["link",{"rel":"canonical","href":"https://idoc.dev/ko/nodejs/api/sqlite"}],["meta",{"property":"og:url","content":"https://idoc.dev/ko/nodejs/api/sqlite"}]]},"headers":[],"relativePath":"ko/nodejs/api/sqlite.md","filePath":"ko/nodejs/api/sqlite.md","lastUpdated":null}`),a={name:`ko/nodejs/api/sqlite.md`};function o(e,i,a,o,s,c){return r(),t(`div`,null,i[0]||=[n(`<h1 id="sqlite" tabindex="-1">SQLite <a class="header-anchor" href="#sqlite" aria-label="Permalink to “SQLite”">​</a></h1><p><strong>Added in: v22.5.0</strong></p><div class="warning custom-block"><p class="custom-block-title">[Stable: 1 - Experimental]</p><p><a href="/ko/nodejs/api/documentation#stability-index">Stable: 1</a> <a href="/ko/nodejs/api/documentation#stability-index">Stability: 1</a>.1 - 활발한 개발 중.</p></div><p><strong>소스 코드:</strong> <a href="https://github.com/nodejs/node/blob/v23.5.0/lib/sqlite.js" target="_blank" rel="noreferrer">lib/sqlite.js</a></p><p><code>node:sqlite</code> 모듈은 SQLite 데이터베이스 작업을 용이하게 합니다. 액세스하려면:</p><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-17" id="tab-18" checked><label data-title="ESM" for="tab-18">ESM</label><input type="radio" name="group-17" id="tab-19"><label data-title="CJS" for="tab-19">CJS</label></div><div class="blocks"><div class="language-js active line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sqlite </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;node:sqlite&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> sqlite</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;node:sqlite&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></div></div><p>이 모듈은 <code>node:</code> 스키마에서만 사용할 수 있습니다.</p><p>다음 예제는 <code>node:sqlite</code> 모듈의 기본적인 사용법을 보여줍니다. 메모리 내 데이터베이스를 열고, 데이터베이스에 데이터를 쓰고, 데이터를 다시 읽습니다.</p><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-27" id="tab-28" checked><label data-title="ESM" for="tab-28">ESM</label><input type="radio" name="group-27" id="tab-29"><label data-title="CJS" for="tab-29">CJS</label></div><div class="blocks"><div class="language-js active line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { DatabaseSync } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;node:sqlite&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> database</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> DatabaseSync</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;:memory:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 문자열에서 SQL 문을 실행합니다.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">database.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">exec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  CREATE TABLE data(</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    key INTEGER PRIMARY KEY,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    value TEXT</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  ) STRICT</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 데이터베이스에 데이터를 삽입하기 위한 준비된 문을 만듭니다.</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> insert</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> database.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">prepare</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;INSERT INTO data (key, value) VALUES (?, ?)&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 바인딩된 값으로 준비된 문을 실행합니다.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">insert.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">run</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;hello&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">insert.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">run</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;world&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 데이터베이스에서 데이터를 읽기 위한 준비된 문을 만듭니다.</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> query</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> database.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">prepare</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;SELECT * FROM data ORDER BY key&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 준비된 문을 실행하고 결과 집합을 기록합니다.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(query.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">all</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">());</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Prints: [ { key: 1, value: &#39;hello&#39; }, { key: 2, value: &#39;world&#39; } ]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;use strict&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">DatabaseSync</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;node:sqlite&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> database</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> DatabaseSync</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;:memory:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 문자열에서 SQL 문을 실행합니다.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">database.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">exec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  CREATE TABLE data(</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    key INTEGER PRIMARY KEY,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    value TEXT</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  ) STRICT</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 데이터베이스에 데이터를 삽입하기 위한 준비된 문을 만듭니다.</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> insert</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> database.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">prepare</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;INSERT INTO data (key, value) VALUES (?, ?)&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 바인딩된 값으로 준비된 문을 실행합니다.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">insert.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">run</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;hello&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">insert.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">run</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;world&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 데이터베이스에서 데이터를 읽기 위한 준비된 문을 만듭니다.</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> query</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> database.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">prepare</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;SELECT * FROM data ORDER BY key&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 준비된 문을 실행하고 결과 집합을 기록합니다.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(query.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">all</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">());</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Prints: [ { key: 1, value: &#39;hello&#39; }, { key: 2, value: &#39;world&#39; } ]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div></div></div><h2 id="class-databasesync" tabindex="-1">클래스: <code>DatabaseSync</code> <a class="header-anchor" href="#class-databasesync" aria-label="Permalink to “클래스: DatabaseSync”">​</a></h2><p><strong>추가된 버전: v22.5.0</strong></p><p>이 클래스는 SQLite 데이터베이스에 대한 단일 <a href="https://www.sqlite.org/c3ref/sqlite3" target="_blank" rel="noreferrer">연결</a>을 나타냅니다. 이 클래스에 의해 노출된 모든 API는 동기적으로 실행됩니다.</p><h3 id="new-databasesynclocation-options" tabindex="-1"><code>new DatabaseSync(location[, options])</code> <a class="header-anchor" href="#new-databasesynclocation-options" aria-label="Permalink to “new DatabaseSync(location[, options])”">​</a></h3><p><strong>추가된 버전: v22.5.0</strong></p><ul><li><code>location</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> 데이터베이스의 위치. SQLite 데이터베이스는 파일에 저장하거나 완전히 <a href="https://www.sqlite.org/inmemorydb" target="_blank" rel="noreferrer">메모리 내</a>에 저장할 수 있습니다. 파일 기반 데이터베이스를 사용하려면 위치는 파일 경로여야 합니다. 메모리 내 데이터베이스를 사용하려면 위치는 특수 이름인 <code>&#39;:memory:&#39;</code>여야 합니다.</li><li><code>options</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object&gt;</a> 데이터베이스 연결을 위한 구성 옵션. 다음 옵션이 지원됩니다. <ul><li><code>open</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type" target="_blank" rel="noreferrer">&lt;boolean&gt;</a> <code>true</code>인 경우 생성자에 의해 데이터베이스가 열립니다. 이 값이 <code>false</code>인 경우 <code>open()</code> 메서드를 통해 데이터베이스를 열어야 합니다. <strong>기본값:</strong> <code>true</code>.</li><li><code>readOnly</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type" target="_blank" rel="noreferrer">&lt;boolean&gt;</a> <code>true</code>인 경우 데이터베이스는 읽기 전용 모드로 열립니다. 데이터베이스가 존재하지 않으면 열기가 실패합니다. <strong>기본값:</strong> <code>false</code>.</li><li><code>enableForeignKeyConstraints</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type" target="_blank" rel="noreferrer">&lt;boolean&gt;</a> <code>true</code>인 경우 외래 키 제약 조건이 활성화됩니다. 이것은 권장되지만 레거시 데이터베이스 스키마와의 호환성을 위해 비활성화할 수 있습니다. 외래 키 제약 조건의 적용은 <a href="https://www.sqlite.org/pragma#pragma_foreign_keys" target="_blank" rel="noreferrer"><code>PRAGMA foreign_keys</code></a>를 사용하여 데이터베이스를 연 후 활성화 및 비활성화할 수 있습니다. <strong>기본값:</strong> <code>true</code>.</li><li><code>enableDoubleQuotedStringLiterals</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type" target="_blank" rel="noreferrer">&lt;boolean&gt;</a> <code>true</code>인 경우 SQLite는 <a href="https://www.sqlite.org/quirks#dblquote" target="_blank" rel="noreferrer">큰따옴표로 묶인 문자열 리터럴</a>을 허용합니다. 이것은 권장되지 않지만 레거시 데이터베이스 스키마와의 호환성을 위해 활성화할 수 있습니다. <strong>기본값:</strong> <code>false</code>.</li><li><code>allowExtension</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type" target="_blank" rel="noreferrer">&lt;boolean&gt;</a> <code>true</code>인 경우 <code>loadExtension</code> SQL 함수와 <code>loadExtension()</code> 메서드가 활성화됩니다. 나중에 <code>enableLoadExtension(false)</code>를 호출하여 이 기능을 비활성화할 수 있습니다. <strong>기본값:</strong> <code>false</code>.</li></ul></li></ul><p>새로운 <code>DatabaseSync</code> 인스턴스를 생성합니다.</p><h3 id="databaseclose" tabindex="-1"><code>database.close()</code> <a class="header-anchor" href="#databaseclose" aria-label="Permalink to “database.close()”">​</a></h3><p><strong>추가된 버전: v22.5.0</strong></p><p>데이터베이스 연결을 닫습니다. 데이터베이스가 열려 있지 않으면 예외가 발생합니다. 이 메서드는 <a href="https://www.sqlite.org/c3ref/close" target="_blank" rel="noreferrer"><code>sqlite3_close_v2()</code></a>를 래핑합니다.</p><h3 id="databaseloadextensionpath" tabindex="-1"><code>database.loadExtension(path)</code> <a class="header-anchor" href="#databaseloadextensionpath" aria-label="Permalink to “database.loadExtension(path)”">​</a></h3><p><strong>추가된 버전: v23.5.0</strong></p><ul><li><code>path</code> <a href="https://developer.mozilla.org/ko/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> 로드할 공유 라이브러리의 경로입니다.</li></ul><p>공유 라이브러리를 데이터베이스 연결에 로드합니다. 이 메서드는 <a href="https://www.sqlite.org/c3ref/load_extension" target="_blank" rel="noreferrer"><code>sqlite3_load_extension()</code></a>를 래핑합니다. <code>DatabaseSync</code> 인스턴스를 생성할 때 <code>allowExtension</code> 옵션을 활성화해야 합니다.</p><h3 id="databaseenableloadextensionallow" tabindex="-1"><code>database.enableLoadExtension(allow)</code> <a class="header-anchor" href="#databaseenableloadextensionallow" aria-label="Permalink to “database.enableLoadExtension(allow)”">​</a></h3><p><strong>추가된 버전: v23.5.0</strong></p><ul><li><code>allow</code> <a href="https://developer.mozilla.org/ko/docs/Web/JavaScript/Data_structures#Boolean_type" target="_blank" rel="noreferrer">&lt;boolean&gt;</a> 확장 로드를 허용할지 여부입니다.</li></ul><p><code>loadExtension</code> SQL 함수와 <code>loadExtension()</code> 메서드를 활성화 또는 비활성화합니다. 생성 시 <code>allowExtension</code>이 <code>false</code>이면 보안상의 이유로 확장 로드를 활성화할 수 없습니다.</p><h3 id="databaseexecsql" tabindex="-1"><code>database.exec(sql)</code> <a class="header-anchor" href="#databaseexecsql" aria-label="Permalink to “database.exec(sql)”">​</a></h3><p><strong>추가된 버전: v22.5.0</strong></p><ul><li><code>sql</code> <a href="https://developer.mozilla.org/ko/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> 실행할 SQL 문자열입니다.</li></ul><p>이 메서드를 사용하면 결과를 반환하지 않고 하나 이상의 SQL 문을 실행할 수 있습니다. 이 메서드는 파일에서 읽은 SQL 문을 실행할 때 유용합니다. 이 메서드는 <a href="https://www.sqlite.org/c3ref/exec" target="_blank" rel="noreferrer"><code>sqlite3_exec()</code></a>를 래핑합니다.</p><h3 id="databasefunctionname-options-function" tabindex="-1"><code>database.function(name[, options], function)</code> <a class="header-anchor" href="#databasefunctionname-options-function" aria-label="Permalink to “database.function(name[, options], function)”">​</a></h3><p><strong>추가된 버전: v23.5.0</strong></p><ul><li><p><code>name</code> <a href="https://developer.mozilla.org/ko/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> 생성할 SQLite 함수의 이름입니다.</p></li><li><p><code>options</code> <a href="https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object&gt;</a> 함수의 선택적 구성 설정입니다. 다음 속성이 지원됩니다.</p><ul><li><code>deterministic</code> <a href="https://developer.mozilla.org/ko/docs/Web/JavaScript/Data_structures#Boolean_type" target="_blank" rel="noreferrer">&lt;boolean&gt;</a> <code>true</code>이면 생성된 함수에 <a href="https://www.sqlite.org/c3ref/c_deterministic" target="_blank" rel="noreferrer"><code>SQLITE_DETERMINISTIC</code></a> 플래그가 설정됩니다. <strong>기본값:</strong> <code>false</code>.</li><li><code>directOnly</code> <a href="https://developer.mozilla.org/ko/docs/Web/JavaScript/Data_structures#Boolean_type" target="_blank" rel="noreferrer">&lt;boolean&gt;</a> <code>true</code>이면 생성된 함수에 <a href="https://www.sqlite.org/c3ref/c_deterministic" target="_blank" rel="noreferrer"><code>SQLITE_DIRECTONLY</code></a> 플래그가 설정됩니다. <strong>기본값:</strong> <code>false</code>.</li><li><code>useBigIntArguments</code> <a href="https://developer.mozilla.org/ko/docs/Web/JavaScript/Data_structures#Boolean_type" target="_blank" rel="noreferrer">&lt;boolean&gt;</a> <code>true</code>이면 <code>function</code>에 대한 정수 인수가 <code>BigInt</code>로 변환됩니다. <code>false</code>이면 정수 인수가 JavaScript 숫자로 전달됩니다. <strong>기본값:</strong> <code>false</code>.</li><li><code>varargs</code> <a href="https://developer.mozilla.org/ko/docs/Web/JavaScript/Data_structures#Boolean_type" target="_blank" rel="noreferrer">&lt;boolean&gt;</a> <code>true</code>이면 <code>function</code>이 가변 개수의 인수를 허용할 수 있습니다. <code>false</code>이면 <code>function</code>을 정확히 <code>function.length</code> 개의 인수로 호출해야 합니다.</li></ul></li><li><p><code>function</code> <a href="https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/Function" target="_blank" rel="noreferrer">&lt;Function&gt;</a> SQLite 함수가 호출될 때 호출할 JavaScript 함수입니다.</p></li></ul><p>이 메서드는 SQLite 사용자 정의 함수를 만드는 데 사용됩니다. 이 메서드는 <a href="https://www.sqlite.org/c3ref/create_function" target="_blank" rel="noreferrer"><code>sqlite3_create_function_v2()</code></a>를 래핑합니다.</p><h3 id="databaseopen" tabindex="-1"><code>database.open()</code> <a class="header-anchor" href="#databaseopen" aria-label="Permalink to “database.open()”">​</a></h3><p><strong>Added in: v22.5.0</strong></p><p><code>DatabaseSync</code> 생성자의 <code>location</code> 인수에 지정된 데이터베이스를 엽니다. 이 메서드는 생성자를 통해 데이터베이스가 열리지 않은 경우에만 사용해야 합니다. 데이터베이스가 이미 열려 있으면 예외가 발생합니다.</p><h3 id="databasepreparesql" tabindex="-1"><code>database.prepare(sql)</code> <a class="header-anchor" href="#databasepreparesql" aria-label="Permalink to “database.prepare(sql)”">​</a></h3><p><strong>Added in: v22.5.0</strong></p><ul><li><code>sql</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> 준비된 명령문으로 컴파일할 SQL 문자열입니다.</li><li>반환: <a href="/ko/nodejs/api/sqlite#class-statementsync">&lt;StatementSync&gt;</a> 준비된 명령문입니다.</li></ul><p>SQL 명령문을 <a href="https://www.sqlite.org/c3ref/stmt" target="_blank" rel="noreferrer">준비된 명령문</a>으로 컴파일합니다. 이 메서드는 <a href="https://www.sqlite.org/c3ref/prepare" target="_blank" rel="noreferrer"><code>sqlite3_prepare_v2()</code></a>를 래핑합니다.</p><h3 id="databasecreatesessionoptions" tabindex="-1"><code>database.createSession([options])</code> <a class="header-anchor" href="#databasecreatesessionoptions" aria-label="Permalink to “database.createSession([options])”">​</a></h3><p><strong>Added in: v23.3.0</strong></p><ul><li><p><code>options</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object&gt;</a> 세션의 구성 옵션입니다.</p><ul><li><code>table</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> 변경 사항을 추적할 특정 테이블입니다. 기본적으로 모든 테이블의 변경 사항이 추적됩니다.</li><li><code>db</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> 추적할 데이터베이스의 이름입니다. 이는 <a href="https://www.sqlite.org/lang_attach" target="_blank" rel="noreferrer"><code>ATTACH DATABASE</code></a>를 사용하여 여러 데이터베이스가 추가된 경우에 유용합니다. <strong>기본값</strong>: <code>&#39;main&#39;</code>.</li></ul></li><li><p>반환: <a href="/ko/nodejs/api/sqlite#class-session">&lt;Session&gt;</a> 세션 핸들입니다.</p></li></ul><p>데이터베이스에 세션을 생성하고 연결합니다. 이 메서드는 <a href="https://www.sqlite.org/session/sqlite3session_create" target="_blank" rel="noreferrer"><code>sqlite3session_create()</code></a> 및 <a href="https://www.sqlite.org/session/sqlite3session_attach" target="_blank" rel="noreferrer"><code>sqlite3session_attach()</code></a>를 래핑합니다.</p><h3 id="databaseapplychangesetchangeset-options" tabindex="-1"><code>database.applyChangeset(changeset[, options])</code> <a class="header-anchor" href="#databaseapplychangesetchangeset-options" aria-label="Permalink to “database.applyChangeset(changeset[, options])”">​</a></h3><p><strong>Added in: v23.3.0</strong></p><ul><li><p><code>changeset</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array" target="_blank" rel="noreferrer">&lt;Uint8Array&gt;</a> 바이너리 변경 세트 또는 패치 세트입니다.</p></li><li><p><code>options</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object&gt;</a> 변경 사항을 적용하는 방법에 대한 구성 옵션입니다.</p><ul><li><code>filter</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function" target="_blank" rel="noreferrer">&lt;Function&gt;</a> 대상 테이블 이름이 이 함수에 제공될 때 참 값을 반환하는 변경 사항을 건너뜁니다. 기본적으로 모든 변경 사항이 시도됩니다.</li><li><code>onConflict</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type" target="_blank" rel="noreferrer">&lt;number&gt;</a> 충돌 처리 방법을 결정합니다. <strong>기본값</strong>: <code>SQLITE_CHANGESET_ABORT</code>.</li><li><code>SQLITE_CHANGESET_OMIT</code>: 충돌하는 변경 사항은 생략됩니다.</li><li><code>SQLITE_CHANGESET_REPLACE</code>: 충돌하는 변경 사항은 기존 값을 대체합니다.</li><li><code>SQLITE_CHANGESET_ABORT</code>: 충돌 시 중단하고 데이터베이스를 롤백합니다.</li></ul></li><li><p>반환: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type" target="_blank" rel="noreferrer">&lt;boolean&gt;</a> 변경 세트가 중단되지 않고 성공적으로 적용되었는지 여부입니다.</p></li></ul><p>데이터베이스가 열려 있지 않으면 예외가 발생합니다. 이 메서드는 <a href="https://www.sqlite.org/session/sqlite3changeset_apply" target="_blank" rel="noreferrer"><code>sqlite3changeset_apply()</code></a>를 래핑합니다.</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> sourceDb</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> DatabaseSync</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;:memory:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> targetDb</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> DatabaseSync</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;:memory:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">sourceDb.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">exec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;CREATE TABLE data(key INTEGER PRIMARY KEY, value TEXT)&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">targetDb.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">exec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;CREATE TABLE data(key INTEGER PRIMARY KEY, value TEXT)&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> session</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sourceDb.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createSession</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> insert</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sourceDb.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">prepare</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;INSERT INTO data (key, value) VALUES (?, ?)&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">insert.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">run</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;hello&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">insert.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">run</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;world&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> changeset</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> session.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">changeset</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">targetDb.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">applyChangeset</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(changeset);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 이제 변경 세트가 적용되었으므로 targetDb는 sourceDb와 동일한 데이터를 포함합니다.</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h2 id="class-session" tabindex="-1">Class: <code>Session</code> <a class="header-anchor" href="#class-session" aria-label="Permalink to “Class: Session”">​</a></h2><p><strong>Added in: v23.3.0</strong></p><h3 id="sessionchangeset" tabindex="-1"><code>session.changeset()</code> <a class="header-anchor" href="#sessionchangeset" aria-label="Permalink to “session.changeset()”">​</a></h3><p><strong>Added in: v23.3.0</strong></p><ul><li>Returns: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array" target="_blank" rel="noreferrer">&lt;Uint8Array&gt;</a> 다른 데이터베이스에 적용할 수 있는 바이너리 변경 세트를 반환합니다.</li></ul><p>변경 세트가 생성된 이후의 모든 변경 사항을 포함하는 변경 세트를 검색합니다. 여러 번 호출할 수 있습니다. 데이터베이스 또는 세션이 열려 있지 않으면 예외가 발생합니다. 이 메서드는 <a href="https://www.sqlite.org/session/sqlite3session_changeset" target="_blank" rel="noreferrer"><code>sqlite3session_changeset()</code></a>을 래핑합니다.</p><h3 id="sessionpatchset" tabindex="-1"><code>session.patchset()</code> <a class="header-anchor" href="#sessionpatchset" aria-label="Permalink to “session.patchset()”">​</a></h3><p><strong>Added in: v23.3.0</strong></p><ul><li>Returns: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array" target="_blank" rel="noreferrer">&lt;Uint8Array&gt;</a> 다른 데이터베이스에 적용할 수 있는 바이너리 패치 세트를 반환합니다.</li></ul><p>위의 메서드와 유사하지만 더 컴팩트한 패치 세트를 생성합니다. SQLite 설명서의 <a href="https://www.sqlite.org/sessionintro#changesets_and_patchsets" target="_blank" rel="noreferrer">변경 세트 및 패치 세트</a>를 참조하십시오. 데이터베이스 또는 세션이 열려 있지 않으면 예외가 발생합니다. 이 메서드는 <a href="https://www.sqlite.org/session/sqlite3session_patchset" target="_blank" rel="noreferrer"><code>sqlite3session_patchset()</code></a>을 래핑합니다.</p><h3 id="sessionclose" tabindex="-1"><code>session.close()</code>. <a class="header-anchor" href="#sessionclose" aria-label="Permalink to “session.close().”">​</a></h3><p>세션을 닫습니다. 데이터베이스 또는 세션이 열려 있지 않으면 예외가 발생합니다. 이 메서드는 <a href="https://www.sqlite.org/session/sqlite3session_delete" target="_blank" rel="noreferrer"><code>sqlite3session_delete()</code></a>를 래핑합니다.</p><h2 id="class-statementsync" tabindex="-1">Class: <code>StatementSync</code> <a class="header-anchor" href="#class-statementsync" aria-label="Permalink to “Class: StatementSync”">​</a></h2><p><strong>Added in: v22.5.0</strong></p><p>이 클래스는 단일 <a href="https://www.sqlite.org/c3ref/stmt" target="_blank" rel="noreferrer">준비된 명령문</a>을 나타냅니다. 이 클래스는 생성자를 통해 인스턴스화할 수 없습니다. 대신 인스턴스는 <code>database.prepare()</code> 메서드를 통해 생성됩니다. 이 클래스에서 노출하는 모든 API는 동기적으로 실행됩니다.</p><p>준비된 명령문은 이를 생성하는 데 사용된 SQL의 효율적인 바이너리 표현입니다. 준비된 명령문은 매개변수화할 수 있으며 바인딩된 다른 값으로 여러 번 호출할 수 있습니다. 매개변수는 <a href="https://en.wikipedia.org/wiki/SQL_injection" target="_blank" rel="noreferrer">SQL 주입</a> 공격으로부터 보호 기능도 제공합니다. 이러한 이유로 사용자 입력을 처리할 때는 수작업으로 만든 SQL 문자열보다 준비된 명령문을 선호합니다.</p><h3 id="statementallnamedparameters-anonymousparameters" tabindex="-1"><code>statement.all([namedParameters][, ...anonymousParameters])</code> <a class="header-anchor" href="#statementallnamedparameters-anonymousparameters" aria-label="Permalink to “statement.all([namedParameters][, ...anonymousParameters])”">​</a></h3><p><strong>Added in: v22.5.0</strong></p><ul><li><code>namedParameters</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object&gt;</a> 명명된 매개변수를 바인딩하는 데 사용되는 선택적 객체입니다. 이 객체의 키는 매핑을 구성하는 데 사용됩니다.</li><li><code>...anonymousParameters</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Null_type" target="_blank" rel="noreferrer">&lt;null&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type" target="_blank" rel="noreferrer">&lt;number&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt" target="_blank" rel="noreferrer">&lt;bigint&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> | <a href="/ko/nodejs/api/buffer#class-buffer">&lt;Buffer&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array" target="_blank" rel="noreferrer">&lt;Uint8Array&gt;</a> 익명 매개변수에 바인딩할 0개 이상의 값입니다.</li><li>반환: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array" target="_blank" rel="noreferrer">&lt;Array&gt;</a> 객체의 배열입니다. 각 객체는 준비된 명령문을 실행하여 반환된 행에 해당합니다. 각 객체의 키와 값은 행의 열 이름과 값에 해당합니다.</li></ul><p>이 메서드는 준비된 명령문을 실행하고 모든 결과를 객체 배열로 반환합니다. 준비된 명령문이 결과를 반환하지 않으면 이 메서드는 빈 배열을 반환합니다. 준비된 명령문 <a href="https://www.sqlite.org/c3ref/bind_blob" target="_blank" rel="noreferrer">매개변수는</a> <code>namedParameters</code> 및 <code>anonymousParameters</code>의 값을 사용하여 바인딩됩니다.</p><h3 id="statementexpandedsql" tabindex="-1"><code>statement.expandedSQL</code> <a class="header-anchor" href="#statementexpandedsql" aria-label="Permalink to “statement.expandedSQL”">​</a></h3><p><strong>Added in: v22.5.0</strong></p><ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> 매개변수 값을 포함하도록 확장된 소스 SQL입니다.</li></ul><p>준비된 명령문의 소스 SQL 텍스트는 매개변수 자리 표시자가 이 준비된 명령문의 가장 최근 실행 중에 사용된 값으로 대체된 것입니다. 이 속성은 <a href="https://www.sqlite.org/c3ref/expanded_sql" target="_blank" rel="noreferrer"><code>sqlite3_expanded_sql()</code></a>의 래퍼입니다.</p><h3 id="statementgetnamedparameters-anonymousparameters" tabindex="-1"><code>statement.get([namedParameters][, ...anonymousParameters])</code> <a class="header-anchor" href="#statementgetnamedparameters-anonymousparameters" aria-label="Permalink to “statement.get([namedParameters][, ...anonymousParameters])”">​</a></h3><p><strong>Added in: v22.5.0</strong></p><ul><li><code>namedParameters</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object&gt;</a> 명명된 매개변수를 바인딩하는 데 사용되는 선택적 객체입니다. 이 객체의 키는 매핑을 구성하는 데 사용됩니다.</li><li><code>...anonymousParameters</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Null_type" target="_blank" rel="noreferrer">&lt;null&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type" target="_blank" rel="noreferrer">&lt;number&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt" target="_blank" rel="noreferrer">&lt;bigint&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> | <a href="/ko/nodejs/api/buffer#class-buffer">&lt;Buffer&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array" target="_blank" rel="noreferrer">&lt;Uint8Array&gt;</a> 익명 매개변수에 바인딩할 0개 이상의 값입니다.</li><li>반환: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Undefined_type" target="_blank" rel="noreferrer">&lt;undefined&gt;</a> 준비된 명령문을 실행하여 반환된 첫 번째 행에 해당하는 객체입니다. 객체의 키와 값은 행의 열 이름 및 값에 해당합니다. 데이터베이스에서 반환된 행이 없으면 이 메서드는 <code>undefined</code>를 반환합니다.</li></ul><p>이 메서드는 준비된 명령문을 실행하고 첫 번째 결과를 객체로 반환합니다. 준비된 명령문이 결과를 반환하지 않으면 이 메서드는 <code>undefined</code>를 반환합니다. 준비된 명령문 <a href="https://www.sqlite.org/c3ref/bind_blob" target="_blank" rel="noreferrer">매개변수는</a> <code>namedParameters</code> 및 <code>anonymousParameters</code>의 값을 사용하여 바인딩됩니다.</p><h3 id="statementiteratenamedparameters-anonymousparameters" tabindex="-1"><code>statement.iterate([namedParameters][, ...anonymousParameters])</code> <a class="header-anchor" href="#statementiteratenamedparameters-anonymousparameters" aria-label="Permalink to “statement.iterate([namedParameters][, ...anonymousParameters])”">​</a></h3><p><strong>Added in: v23.4.0</strong></p><ul><li><code>namedParameters</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object&gt;</a> 명명된 매개변수를 바인딩하는 데 사용되는 선택적 객체입니다. 이 객체의 키는 매핑을 구성하는 데 사용됩니다.</li><li><code>...anonymousParameters</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Null_type" target="_blank" rel="noreferrer">&lt;null&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type" target="_blank" rel="noreferrer">&lt;number&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt" target="_blank" rel="noreferrer">&lt;bigint&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> | <a href="/ko/nodejs/api/buffer#class-buffer">&lt;Buffer&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array" target="_blank" rel="noreferrer">&lt;Uint8Array&gt;</a> 익명 매개변수에 바인딩할 0개 이상의 값입니다.</li><li>반환: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#The_iterator_protocol" target="_blank" rel="noreferrer">&lt;Iterator&gt;</a> 객체의 반복 가능한 반복자입니다. 각 객체는 준비된 명령문을 실행하여 반환된 행에 해당합니다. 각 객체의 키와 값은 행의 열 이름 및 값에 해당합니다.</li></ul><p>이 메서드는 준비된 명령문을 실행하고 객체의 반복자를 반환합니다. 준비된 명령문이 결과를 반환하지 않으면 이 메서드는 빈 반복자를 반환합니다. 준비된 명령문 <a href="https://www.sqlite.org/c3ref/bind_blob" target="_blank" rel="noreferrer">매개변수는</a> <code>namedParameters</code> 및 <code>anonymousParameters</code>의 값을 사용하여 바인딩됩니다.</p><h3 id="statementrunnamedparameters-anonymousparameters" tabindex="-1"><code>statement.run([namedParameters][, ...anonymousParameters])</code> <a class="header-anchor" href="#statementrunnamedparameters-anonymousparameters" aria-label="Permalink to “statement.run([namedParameters][, ...anonymousParameters])”">​</a></h3><p><strong>추가된 버전: v22.5.0</strong></p><ul><li><code>namedParameters</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object&gt;</a> 명명된 매개변수를 바인딩하는 데 사용되는 선택적 객체입니다. 이 객체의 키는 매핑을 구성하는 데 사용됩니다.</li><li><code>...anonymousParameters</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Null_type" target="_blank" rel="noreferrer">&lt;null&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type" target="_blank" rel="noreferrer">&lt;number&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt" target="_blank" rel="noreferrer">&lt;bigint&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> | <a href="/ko/nodejs/api/buffer#class-buffer">&lt;Buffer&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array" target="_blank" rel="noreferrer">&lt;Uint8Array&gt;</a> 익명 매개변수에 바인딩할 하나 이상의 값입니다.</li><li>반환값: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object&gt;</a><ul><li><code>changes</code>: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type" target="_blank" rel="noreferrer">&lt;number&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt" target="_blank" rel="noreferrer">&lt;bigint&gt;</a> 가장 최근에 완료된 <code>INSERT</code>, <code>UPDATE</code> 또는 <code>DELETE</code> 문에 의해 수정, 삽입 또는 삭제된 행의 수입니다. 이 필드는 준비된 문의 구성에 따라 숫자 또는 <code>BigInt</code>입니다. 이 속성은 <a href="https://www.sqlite.org/c3ref/changes" target="_blank" rel="noreferrer"><code>sqlite3_changes64()</code></a>의 결과입니다.</li><li><code>lastInsertRowid</code>: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type" target="_blank" rel="noreferrer">&lt;number&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt" target="_blank" rel="noreferrer">&lt;bigint&gt;</a> 가장 최근에 삽입된 rowid입니다. 이 필드는 준비된 문의 구성에 따라 숫자 또는 <code>BigInt</code>입니다. 이 속성은 <a href="https://www.sqlite.org/c3ref/last_insert_rowid" target="_blank" rel="noreferrer"><code>sqlite3_last_insert_rowid()</code></a>의 결과입니다.</li></ul></li></ul><p>이 메서드는 준비된 문을 실행하고 결과 변경 사항을 요약하는 객체를 반환합니다. 준비된 문 <a href="https://www.sqlite.org/c3ref/bind_blob" target="_blank" rel="noreferrer">매개변수는</a> <code>namedParameters</code> 및 <code>anonymousParameters</code>의 값을 사용하여 바인딩됩니다.</p><h3 id="statementsetallowbarenamedparametersenabled" tabindex="-1"><code>statement.setAllowBareNamedParameters(enabled)</code> <a class="header-anchor" href="#statementsetallowbarenamedparametersenabled" aria-label="Permalink to “statement.setAllowBareNamedParameters(enabled)”">​</a></h3><p><strong>Added in: v22.5.0</strong></p><ul><li><code>enabled</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type" target="_blank" rel="noreferrer">&lt;boolean&gt;</a> 접두사 문자 없이 명명된 매개변수를 바인딩하는 지원을 활성화하거나 비활성화합니다.</li></ul><p>SQLite 매개변수의 이름은 접두사 문자로 시작합니다. 기본적으로 <code>node:sqlite</code>은 매개변수를 바인딩할 때 이 접두사 문자가 있어야 합니다. 그러나 달러 기호 문자를 제외하고 이러한 접두사 문자는 객체 키에 사용할 때 추가 인용 부호가 필요합니다.</p><p>인체 공학을 개선하기 위해 이 메서드를 사용하여 JavaScript 코드에서 접두사 문자가 필요 없는 일반 명명된 매개변수를 허용할 수도 있습니다. 일반 명명된 매개변수를 활성화할 때 주의해야 할 몇 가지 주의 사항이 있습니다.</p><ul><li>접두사 문자는 SQL에서 여전히 필요합니다.</li><li>접두사 문자는 JavaScript에서 여전히 허용됩니다. 실제로 접두사가 붙은 이름은 바인딩 성능이 약간 더 좋습니다.</li><li>동일한 준비된 명령문에서 <code>$k</code> 및 <code>@k</code>와 같이 모호한 명명된 매개변수를 사용하면 일반 이름을 바인딩하는 방법을 결정할 수 없으므로 예외가 발생합니다.</li></ul><h3 id="statementsetreadbigintsenabled" tabindex="-1"><code>statement.setReadBigInts(enabled)</code> <a class="header-anchor" href="#statementsetreadbigintsenabled" aria-label="Permalink to “statement.setReadBigInts(enabled)”">​</a></h3><p><strong>Added in: v22.5.0</strong></p><ul><li><code>enabled</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type" target="_blank" rel="noreferrer">&lt;boolean&gt;</a> 데이터베이스에서 <code>INTEGER</code> 필드를 읽을 때 <code>BigInt</code> 사용을 활성화하거나 비활성화합니다.</li></ul><p>데이터베이스에서 읽을 때 SQLite <code>INTEGER</code>는 기본적으로 JavaScript 숫자에 매핑됩니다. 그러나 SQLite <code>INTEGER</code>는 JavaScript 숫자가 나타낼 수 있는 것보다 더 큰 값을 저장할 수 있습니다. 이 경우 이 메서드를 사용하여 JavaScript <code>BigInt</code>를 사용하여 <code>INTEGER</code> 데이터를 읽을 수 있습니다. 이 메서드는 숫자와 <code>BigInt</code>가 항상 지원되는 데이터베이스 쓰기 작업에는 영향을 미치지 않습니다.</p><h3 id="statementsourcesql" tabindex="-1"><code>statement.sourceSQL</code> <a class="header-anchor" href="#statementsourcesql" aria-label="Permalink to “statement.sourceSQL”">​</a></h3><p><strong>Added in: v22.5.0</strong></p><ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> 이 준비된 명령문을 만드는 데 사용된 소스 SQL입니다.</li></ul><p>준비된 명령문의 소스 SQL 텍스트입니다. 이 속성은 <a href="https://www.sqlite.org/c3ref/expanded_sql" target="_blank" rel="noreferrer"><code>sqlite3_sql()</code></a>에 대한 래퍼입니다.</p><h3 id="type-conversion-between-javascript-and-sqlite" tabindex="-1">JavaScript와 SQLite 간의 타입 변환 <a class="header-anchor" href="#type-conversion-between-javascript-and-sqlite" aria-label="Permalink to “JavaScript와 SQLite 간의 타입 변환”">​</a></h3><p>Node.js가 SQLite에 쓰거나 읽을 때 JavaScript 데이터 타입과 SQLite의 <a href="https://www.sqlite.org/datatype3" target="_blank" rel="noreferrer">데이터 타입</a> 간에 변환이 필요합니다. JavaScript는 SQLite보다 더 많은 데이터 타입을 지원하므로 JavaScript 타입의 하위 집합만 지원됩니다. 지원되지 않는 데이터 타입을 SQLite에 쓰려고 하면 예외가 발생합니다.</p><table tabindex="0"><thead><tr><th>SQLite</th><th>JavaScript</th></tr></thead><tbody><tr><td><code>NULL</code></td><td><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Null_type" target="_blank" rel="noreferrer">&lt;null&gt;</a></td></tr><tr><td><code>INTEGER</code></td><td><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type" target="_blank" rel="noreferrer">&lt;number&gt;</a> 또는 <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt" target="_blank" rel="noreferrer">&lt;bigint&gt;</a></td></tr><tr><td><code>REAL</code></td><td><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type" target="_blank" rel="noreferrer">&lt;number&gt;</a></td></tr><tr><td><code>TEXT</code></td><td><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a></td></tr><tr><td><code>BLOB</code></td><td><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array" target="_blank" rel="noreferrer">&lt;Uint8Array&gt;</a></td></tr></tbody></table><h2 id="sqliteconstants" tabindex="-1"><code>sqlite.constants</code> <a class="header-anchor" href="#sqliteconstants" aria-label="Permalink to “sqlite.constants”">​</a></h2><p><strong>v23.5.0에 추가됨</strong></p><ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object&gt;</a></li></ul><p>SQLite 작업에 일반적으로 사용되는 상수를 포함하는 객체입니다.</p><h3 id="sqlite-constants" tabindex="-1">SQLite 상수 <a class="header-anchor" href="#sqlite-constants" aria-label="Permalink to “SQLite 상수”">​</a></h3><p>다음 상수는 <code>sqlite.constants</code> 객체에 의해 내보내집니다.</p><h4 id="conflict-resolution-constants" tabindex="-1">충돌 해결 상수 <a class="header-anchor" href="#conflict-resolution-constants" aria-label="Permalink to “충돌 해결 상수”">​</a></h4><p>다음 상수는 <a href="/ko/nodejs/api/sqlite#databaseapplychangesetchangeset-options"><code>database.applyChangeset()</code></a>과 함께 사용하기 위한 것입니다.</p><table tabindex="0"><thead><tr><th>상수</th><th>설명</th></tr></thead><tbody><tr><td><code>SQLITE_CHANGESET_OMIT</code></td><td>충돌하는 변경 사항은 생략됩니다.</td></tr><tr><td><code>SQLITE_CHANGESET_REPLACE</code></td><td>충돌하는 변경 사항은 기존 값을 대체합니다.</td></tr><tr><td><code>SQLITE_CHANGESET_ABORT</code></td><td>변경 사항이 충돌과 마주치면 중단하고 데이터베이스를 롤백합니다.</td></tr></tbody></table>`,113)])}var s=e(a,[[`render`,o]]);export{i as __pageData,s as default};