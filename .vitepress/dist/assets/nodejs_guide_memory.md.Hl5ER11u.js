import{__plugin_vue_export_helper_default as e,createElementBlock as t,createStaticVNode as n,openBlock as r}from"./chunks/plugin-vue_export-helper.Bts1mPc7.js";const i=JSON.parse(`{"title":"Debugging Memory Issues in Node.js","description":"Learn how to identify and debug memory-related issues in Node.js applications, including memory leaks and inefficient memory usage.","frontmatter":{"title":"Debugging Memory Issues in Node.js","description":"Learn how to identify and debug memory-related issues in Node.js applications, including memory leaks and inefficient memory usage.","head":[["meta",{"name":"og:title","content":"Debugging Memory Issues in Node.js | Node.js - iDoc.dev"}],["meta",{"name":"og:description","content":"Learn how to identify and debug memory-related issues in Node.js applications, including memory leaks and inefficient memory usage."}],["meta",{"name":"twitter:title","content":"Debugging Memory Issues in Node.js | Node.js - iDoc.dev"}],["meta",{"name":"twitter:description","content":"Learn how to identify and debug memory-related issues in Node.js applications, including memory leaks and inefficient memory usage."}],["link",{"rel":"canonical","href":"https://idoc.dev/nodejs/guide/memory"}],["meta",{"property":"og:url","content":"https://idoc.dev/nodejs/guide/memory"}]]},"headers":[],"relativePath":"nodejs/guide/memory.md","filePath":"en/nodejs/guide/memory.md","lastUpdated":null}`),a={name:`nodejs/guide/memory.md`};function o(e,i,a,o,s,c){return r(),t(`div`,null,i[0]||=[n(`<h1 id="memory" tabindex="-1">Memory <a class="header-anchor" href="#memory" aria-label="Permalink to “Memory”">​</a></h1><p>In this document you can learn about how to debug memory related issues.</p><h2 id="my-process-runs-out-of-memory" tabindex="-1">My process runs out of memory <a class="header-anchor" href="#my-process-runs-out-of-memory" aria-label="Permalink to “My process runs out of memory”">​</a></h2><p>Node.js (<em>JavaScript</em>) is a garbage collected language, so having memory leaks is possible through retainers. As Node.js applications are usually multi-tenant, business critical, and long-running, providing an accessible and efficient way of finding a memory leak is essential.</p><h3 id="symptoms" tabindex="-1">Symptoms <a class="header-anchor" href="#symptoms" aria-label="Permalink to “Symptoms”">​</a></h3><p>The user observes continuously increasing memory usage (<em>can be fast or slow, over days or even weeks</em>) then sees the process crashing and restarting by the process manager. The process is maybe running slower than before and the restarts cause some requests to fail (<em>load balancer responds with 502</em>).</p><h3 id="side-effects" tabindex="-1">Side Effects <a class="header-anchor" href="#side-effects" aria-label="Permalink to “Side Effects”">​</a></h3><ul><li>Process restarts due to the memory exhaustion and requests are dropped on the floor</li><li>Increased GC activity leads to higher CPU usage and slower response time <ul><li>GC blocking the Event Loop causing slowness</li></ul></li><li>Increased memory swapping slows down the process (GC activity)</li><li>May not have enough available memory to get a Heap Snapshot</li></ul><h2 id="my-process-utilizes-memory-inefficiently" tabindex="-1">My process utilizes memory inefficiently <a class="header-anchor" href="#my-process-utilizes-memory-inefficiently" aria-label="Permalink to “My process utilizes memory inefficiently”">​</a></h2><h3 id="symptoms-1" tabindex="-1">Symptoms <a class="header-anchor" href="#symptoms-1" aria-label="Permalink to “Symptoms”">​</a></h3><p>The application uses an unexpected amount of memory and/or we observe elevated garbage collector activity.</p><h3 id="side-effects-1" tabindex="-1">Side Effects <a class="header-anchor" href="#side-effects-1" aria-label="Permalink to “Side Effects”">​</a></h3><ul><li>An elevated number of page faults</li><li>Higher GC activity and CPU usage</li></ul>`,13)])}var s=e(a,[[`render`,o]]);export{i as __pageData,s as default};