import{__plugin_vue_export_helper_default as e,createElementBlock as t,createStaticVNode as n,openBlock as r}from"./chunks/plugin-vue_export-helper.Bts1mPc7.js";const i=JSON.parse(`{"title":"Le moteur JavaScript V8","description":"V8 est le moteur JavaScript qui alimente Google Chrome, exécutant le code JavaScript et fournissant un environnement d'exécution. Il est indépendant du navigateur et a permis l'émergence de Node.js, alimentant le code côté serveur et les applications de bureau.","frontmatter":{"title":"Le moteur JavaScript V8","description":"V8 est le moteur JavaScript qui alimente Google Chrome, exécutant le code JavaScript et fournissant un environnement d'exécution. Il est indépendant du navigateur et a permis l'émergence de Node.js, alimentant le code côté serveur et les applications de bureau.","head":[["meta",{"name":"og:title","content":"Le moteur JavaScript V8 | Node.js - iDoc.dev"}],["meta",{"name":"og:description","content":"V8 est le moteur JavaScript qui alimente Google Chrome, exécutant le code JavaScript et fournissant un environnement d'exécution. Il est indépendant du navigateur et a permis l'émergence de Node.js, alimentant le code côté serveur et les applications de bureau."}],["meta",{"name":"twitter:title","content":"Le moteur JavaScript V8 | Node.js - iDoc.dev"}],["meta",{"name":"twitter:description","content":"V8 est le moteur JavaScript qui alimente Google Chrome, exécutant le code JavaScript et fournissant un environnement d'exécution. Il est indépendant du navigateur et a permis l'émergence de Node.js, alimentant le code côté serveur et les applications de bureau."}],["link",{"rel":"canonical","href":"https://idoc.dev/fr/nodejs/guide/v8-engine"}],["meta",{"property":"og:url","content":"https://idoc.dev/fr/nodejs/guide/v8-engine"}]]},"headers":[],"relativePath":"fr/nodejs/guide/v8-engine.md","filePath":"fr/nodejs/guide/v8-engine.md","lastUpdated":1749464498000}`),a={name:`fr/nodejs/guide/v8-engine.md`};function o(e,i,a,o,s,c){return r(),t(`div`,null,i[0]||=[n(`<h1 id="le-moteur-javascript-v8" tabindex="-1">Le moteur JavaScript V8 <a class="header-anchor" href="#le-moteur-javascript-v8" aria-label="Permalink to “Le moteur JavaScript V8”">​</a></h1><p>V8 est le nom du moteur JavaScript qui alimente Google Chrome. C&#39;est ce qui prend notre JavaScript et l&#39;exécute lorsque nous naviguons avec Chrome.</p><p>V8 est le moteur JavaScript, c&#39;est-à-dire qu&#39;il analyse et exécute le code JavaScript. Le DOM et les autres API de la plate-forme Web (qui constituent tous l&#39;environnement d&#39;exécution) sont fournis par le navigateur.</p><p>Ce qui est intéressant, c&#39;est que le moteur JavaScript est indépendant du navigateur dans lequel il est hébergé. Cette caractéristique essentielle a permis l&#39;essor de Node.js. V8 a été choisi comme moteur pour alimenter Node.js en 2009, et avec l&#39;explosion de la popularité de Node.js, V8 est devenu le moteur qui alimente désormais une quantité incroyable de code côté serveur écrit en JavaScript.</p><p>L&#39;écosystème Node.js est énorme et grâce à V8, il alimente également les applications de bureau, avec des projets comme Electron.</p><h2 id="autres-moteurs-js" tabindex="-1">Autres moteurs JS <a class="header-anchor" href="#autres-moteurs-js" aria-label="Permalink to “Autres moteurs JS”">​</a></h2><p>Les autres navigateurs ont leur propre moteur JavaScript\xA0:</p><ul><li><code>SpiderMonkey</code> (Firefox)</li><li><code>JavaScriptCore</code> (également appelé <code>Nitro</code>) (Safari)</li><li>Edge était à l&#39;origine basé sur <code>Chakra</code>, mais a été plus récemment reconstruit à l&#39;aide de Chromium et du moteur V8.</li></ul><p>et il en existe beaucoup d&#39;autres.</p><p>Tous ces moteurs mettent en œuvre la <a href="https://www.ecma-international.org/publications-and-standards/standards/ecma-262/" target="_blank" rel="noreferrer">norme ECMA ES-262</a>, également appelée ECMAScript, la norme utilisée par JavaScript.</p><h2 id="la-quete-de-la-performance" tabindex="-1">La quête de la performance <a class="header-anchor" href="#la-quete-de-la-performance" aria-label="Permalink to “La quête de la performance”">​</a></h2><p>V8 est écrit en C++ et est continuellement amélioré. Il est portable et fonctionne sur Mac, Windows, Linux et plusieurs autres systèmes.</p><p>Dans cette introduction à V8, nous ignorerons les détails de l&#39;implémentation de V8\xA0: ils peuvent être trouvés sur des sites plus officiels (par exemple, le <a href="https://v8.dev/" target="_blank" rel="noreferrer">site officiel de V8</a>), et ils changent au fil du temps, souvent radicalement.</p><p>V8 est en constante évolution, tout comme les autres moteurs JavaScript, pour accélérer le Web et l&#39;écosystème Node.js.</p><p>Sur le Web, il y a une course à la performance qui dure depuis des années, et nous (en tant qu&#39;utilisateurs et développeurs) bénéficions beaucoup de cette concurrence car nous obtenons des machines plus rapides et plus optimisées année après année.</p><h2 id="compilation" tabindex="-1">Compilation <a class="header-anchor" href="#compilation" aria-label="Permalink to “Compilation”">​</a></h2><p>JavaScript est généralement considéré comme un langage interprété, mais les moteurs JavaScript modernes ne se contentent plus d&#39;interpréter JavaScript, ils le compilent.</p><p>Cela se produit depuis 2009, lorsque le compilateur JavaScript SpiderMonkey a été ajouté à Firefox 3.5, et tout le monde a suivi cette idée.</p><p>JavaScript est compilé en interne par V8 avec une compilation à la volée (JIT) pour accélérer l&#39;exécution.</p><p>Cela peut sembler contre-intuitif, mais depuis l&#39;introduction de Google Maps en 2004, JavaScript est passé d&#39;un langage qui exécutait généralement quelques dizaines de lignes de code à des applications complètes avec des milliers, voire des centaines de milliers de lignes exécutées dans le navigateur.</p><p>Nos applications peuvent désormais fonctionner pendant des heures dans un navigateur, au lieu de se limiter à quelques règles de validation de formulaires ou à des scripts simples.</p><p>Dans ce nouveau monde, compiler JavaScript est tout à fait logique car, même si la préparation de JavaScript peut prendre un peu plus de temps, une fois cela fait, il sera beaucoup plus performant qu&#39;un code purement interprété.</p>`,22)])}var s=e(a,[[`render`,o]]);export{i as __pageData,s as default};