import{__plugin_vue_export_helper_default as e,createElementBlock as t,createStaticVNode as n,openBlock as r}from"./chunks/plugin-vue_export-helper.Bts1mPc7.js";const i=JSON.parse(`{"title":"Running Node.js Scripts from the Command Line","description":"Learn how to run Node.js programs from the command line, including using the node command, shebang lines, executable permissions, passing strings as arguments, and automatically restarting the application.","frontmatter":{"title":"Running Node.js Scripts from the Command Line","description":"Learn how to run Node.js programs from the command line, including using the node command, shebang lines, executable permissions, passing strings as arguments, and automatically restarting the application.","head":[["meta",{"name":"og:title","content":"Running Node.js Scripts from the Command Line | Node.js - iDoc.dev"}],["meta",{"name":"og:description","content":"Learn how to run Node.js programs from the command line, including using the node command, shebang lines, executable permissions, passing strings as arguments, and automatically restarting the application."}],["meta",{"name":"twitter:title","content":"Running Node.js Scripts from the Command Line | Node.js - iDoc.dev"}],["meta",{"name":"twitter:description","content":"Learn how to run Node.js programs from the command line, including using the node command, shebang lines, executable permissions, passing strings as arguments, and automatically restarting the application."}],["link",{"rel":"canonical","href":"https://idoc.dev/nodejs/guide/run-nodejs-scripts-from-the-command-line"}],["meta",{"property":"og:url","content":"https://idoc.dev/nodejs/guide/run-nodejs-scripts-from-the-command-line"}]]},"headers":[],"relativePath":"nodejs/guide/run-nodejs-scripts-from-the-command-line.md","filePath":"en/nodejs/guide/run-nodejs-scripts-from-the-command-line.md","lastUpdated":1749464498000}`),a={name:`nodejs/guide/run-nodejs-scripts-from-the-command-line.md`};function o(e,i,a,o,s,c){return r(),t(`div`,null,i[0]||=[n(`<h1 id="run-node-js-scripts-from-the-command-line" tabindex="-1">Run Node.js scripts from the command line <a class="header-anchor" href="#run-node-js-scripts-from-the-command-line" aria-label="Permalink to “Run Node.js scripts from the command line”">​</a></h1><p>The usual way to run a Node.js program is to run the globally available <code>node</code> command (once you install Node.js) and pass the name of the file you want to execute.</p><p>If your main Node.js application file is <code>app.js</code>, you can call it by typing:</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">node</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> app.js</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Above, you are explicitly telling the shell to run your script with <code>node</code>. You can also embed this information into your JavaScript file with a &quot;shebang&quot; line. The &quot;shebang&quot; is the first line in the file, and tells the OS which interpreter to use for running the script. Below is the first line of JavaScript:</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#!/usr/bin/node</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Above, we are explicitly giving the absolute path of interpreter. Not all operating systems have <code>node</code> in the <code>bin</code> folder, but all should have <code>env</code>. You can tell the OS to run <code>env</code> with <code>node</code> as parameter:</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#!/usr/bin/env node</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// your javascript code</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="to-use-a-shebang-your-file-should-have-executable-permission" tabindex="-1">To use a shebang, your file should have executable permission. <a class="header-anchor" href="#to-use-a-shebang-your-file-should-have-executable-permission" aria-label="Permalink to “To use a shebang, your file should have executable permission.”">​</a></h2><p>You can give <code>app.js</code> the executable permission by running:</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">chmod</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> u+x</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> app.js</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>While running the command, make sure you are in the same directory which contains the <code>app.js</code> file.</p><h2 id="pass-string-as-argument-to-node-instead-of-file-path" tabindex="-1">Pass string as argument to node instead of file path <a class="header-anchor" href="#pass-string-as-argument-to-node-instead-of-file-path" aria-label="Permalink to “Pass string as argument to node instead of file path”">​</a></h2><p>To execute a string as argument you can use <code>-e</code>, <code>--eval &quot;script&quot;</code>. Evaluate the following argument as JavaScript. The modules which are predefined in the REPL can also be used in script. On Windows, using <code>cmd.exe</code> a single quote will not work correctly because it only recognizes double <code>&quot;</code> for quoting. In Powershell or Git bash, both <code>&quot;</code> and <code>&#39;</code> are usable.</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">node</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;console.log(123)&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="restart-the-application-automatically" tabindex="-1">Restart the application automatically <a class="header-anchor" href="#restart-the-application-automatically" aria-label="Permalink to “Restart the application automatically”">​</a></h2><p>As of nodejs V 16, there is a built-in option to automatically restart the application when a file changes. This is useful for development purposes. To use this feature, you need to pass the <code>watch</code> flag to nodejs.</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">node</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --watch</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> app.js</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>So when you change the file, the application will restart automatically. Read the --watch <a href="/nodejs/api/cli#watch">flag documentation</a>.</p>`,19)])}var s=e(a,[[`render`,o]]);export{i as __pageData,s as default};