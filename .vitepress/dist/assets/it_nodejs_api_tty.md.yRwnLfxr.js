import{__plugin_vue_export_helper_default as e,createElementBlock as t,createStaticVNode as n,openBlock as r}from"./chunks/plugin-vue_export-helper.Bts1mPc7.js";const i=JSON.parse(`{"title":"Documentazione TTY di Node.js","description":"Il modulo TTY di Node.js fornisce un'interfaccia per interagire con dispositivi TTY, inclusi metodi per verificare se un flusso è un TTY, ottenere la dimensione della finestra e gestire gli eventi del terminale.","frontmatter":{"title":"Documentazione TTY di Node.js","description":"Il modulo TTY di Node.js fornisce un'interfaccia per interagire con dispositivi TTY, inclusi metodi per verificare se un flusso è un TTY, ottenere la dimensione della finestra e gestire gli eventi del terminale.","head":[["meta",{"name":"og:title","content":"Documentazione TTY di Node.js | Node.js - iDoc.dev"}],["meta",{"name":"og:description","content":"Il modulo TTY di Node.js fornisce un'interfaccia per interagire con dispositivi TTY, inclusi metodi per verificare se un flusso è un TTY, ottenere la dimensione della finestra e gestire gli eventi del terminale."}],["meta",{"name":"twitter:title","content":"Documentazione TTY di Node.js | Node.js - iDoc.dev"}],["meta",{"name":"twitter:description","content":"Il modulo TTY di Node.js fornisce un'interfaccia per interagire con dispositivi TTY, inclusi metodi per verificare se un flusso è un TTY, ottenere la dimensione della finestra e gestire gli eventi del terminale."}],["link",{"rel":"canonical","href":"https://idoc.dev/it/nodejs/api/tty"}],["meta",{"property":"og:url","content":"https://idoc.dev/it/nodejs/api/tty"}]]},"headers":[],"relativePath":"it/nodejs/api/tty.md","filePath":"it/nodejs/api/tty.md","lastUpdated":1749464498000}`),a={name:`it/nodejs/api/tty.md`};function o(e,i,a,o,s,c){return r(),t(`div`,null,i[0]||=[n(`<h1 id="tty" tabindex="-1">TTY <a class="header-anchor" href="#tty" aria-label="Permalink to “TTY”">​</a></h1><div class="tip custom-block"><p class="custom-block-title">[Stabile: 2 - Stabile]</p><p><a href="/it/nodejs/api/documentation#stability-index">Stabile: 2</a> <a href="/it/nodejs/api/documentation#stability-index">Stabilità: 2</a> - Stabile</p></div><p><strong>Codice sorgente:</strong> <a href="https://github.com/nodejs/node/blob/v23.5.0/lib/tty.js" target="_blank" rel="noreferrer">lib/tty.js</a></p><p>Il modulo <code>node:tty</code> fornisce le classi <code>tty.ReadStream</code> e <code>tty.WriteStream</code>. Nella maggior parte dei casi, non sarà necessario o possibile utilizzare direttamente questo modulo. Tuttavia, è possibile accedervi utilizzando:</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> tty</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;node:tty&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Quando Node.js rileva che è in esecuzione con un terminale di testo (&quot;TTY&quot;) collegato, <a href="/it/nodejs/api/process#processstdin"><code>process.stdin</code></a> verrà, per impostazione predefinita, inizializzato come un&#39;istanza di <code>tty.ReadStream</code> e sia <a href="/it/nodejs/api/process#processstdout"><code>process.stdout</code></a> che <a href="/it/nodejs/api/process#processstderr"><code>process.stderr</code></a> saranno, per impostazione predefinita, istanze di <code>tty.WriteStream</code>. Il metodo preferito per determinare se Node.js è in esecuzione all&#39;interno di un contesto TTY è verificare che il valore della proprietà <code>process.stdout.isTTY</code> sia <code>true</code>:</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> node</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Boolean(process.stdout.isTTY)&quot;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> node</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Boolean(process.stdout.isTTY)&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> cat</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>Nella maggior parte dei casi, non ci dovrebbe essere alcun motivo per un&#39;applicazione di creare manualmente istanze delle classi <code>tty.ReadStream</code> e <code>tty.WriteStream</code>.</p><h2 id="class-ttyreadstream" tabindex="-1">Classe: <code>tty.ReadStream</code> <a class="header-anchor" href="#class-ttyreadstream" aria-label="Permalink to “Classe: tty.ReadStream”">​</a></h2><p><strong>Aggiunto in: v0.5.8</strong></p><ul><li>Estende: <a href="/it/nodejs/api/net#class-netsocket">&lt;net.Socket&gt;</a></li></ul><p>Rappresenta il lato leggibile di un TTY. In circostanze normali <a href="/it/nodejs/api/process#processstdin"><code>process.stdin</code></a> sarà l&#39;unica istanza <code>tty.ReadStream</code> in un processo Node.js e non ci dovrebbe essere motivo di creare istanze aggiuntive.</p><h3 id="readstreamisraw" tabindex="-1"><code>readStream.isRaw</code> <a class="header-anchor" href="#readstreamisraw" aria-label="Permalink to “readStream.isRaw”">​</a></h3><p><strong>Aggiunto in: v0.7.7</strong></p><p>Un <code>boolean</code> che è <code>true</code> se il TTY è attualmente configurato per operare come un dispositivo raw.</p><p>Questo flag è sempre <code>false</code> quando un processo inizia, anche se il terminale sta operando in modalità raw. Il suo valore cambierà con le successive chiamate a <code>setRawMode</code>.</p><h3 id="readstreamistty" tabindex="-1"><code>readStream.isTTY</code> <a class="header-anchor" href="#readstreamistty" aria-label="Permalink to “readStream.isTTY”">​</a></h3><p><strong>Aggiunto in: v0.5.8</strong></p><p>Un <code>boolean</code> che è sempre <code>true</code> per le istanze <code>tty.ReadStream</code>.</p><h3 id="readstreamsetrawmodemode" tabindex="-1"><code>readStream.setRawMode(mode)</code> <a class="header-anchor" href="#readstreamsetrawmodemode" aria-label="Permalink to “readStream.setRawMode(mode)”">​</a></h3><p><strong>Aggiunto in: v0.7.7</strong></p><ul><li><code>mode</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type" target="_blank" rel="noreferrer">&lt;boolean&gt;</a> Se <code>true</code>, configura il <code>tty.ReadStream</code> per operare come un dispositivo raw. Se <code>false</code>, configura il <code>tty.ReadStream</code> per operare nella sua modalità predefinita. La proprietà <code>readStream.isRaw</code> sarà impostata alla modalità risultante.</li><li>Restituisce: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this" target="_blank" rel="noreferrer">&lt;this&gt;</a> L&#39;istanza dello stream di lettura.</li></ul><p>Consente la configurazione di <code>tty.ReadStream</code> in modo che operi come un dispositivo raw.</p><p>Quando si è in modalità raw, l&#39;input è sempre disponibile carattere per carattere, senza includere modificatori. Inoltre, tutta l&#39;elaborazione speciale dei caratteri da parte del terminale è disabilitata, inclusa l&#39;eco dei caratteri di input. + non causerà più un <code>SIGINT</code> quando si è in questa modalità.</p><h2 id="class-ttywritestream" tabindex="-1">Classe: <code>tty.WriteStream</code> <a class="header-anchor" href="#class-ttywritestream" aria-label="Permalink to “Classe: tty.WriteStream”">​</a></h2><p><strong>Aggiunto in: v0.5.8</strong></p><ul><li>Estende: <a href="/it/nodejs/api/net#class-netsocket">&lt;net.Socket&gt;</a></li></ul><p>Rappresenta il lato scrivibile di un TTY. In circostanze normali, <a href="/it/nodejs/api/process#processstdout"><code>process.stdout</code></a> e <a href="/it/nodejs/api/process#processstderr"><code>process.stderr</code></a> saranno le uniche istanze <code>tty.WriteStream</code> create per un processo Node.js e non ci dovrebbe essere motivo per creare istanze aggiuntive.</p><h3 id="new-ttyreadstreamfd-options" tabindex="-1"><code>new tty.ReadStream(fd[, options])</code> <a class="header-anchor" href="#new-ttyreadstreamfd-options" aria-label="Permalink to “new tty.ReadStream(fd[, options])”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[Cronologia]</p><table tabindex="0"><thead><tr><th>Versione</th><th>Modifiche</th></tr></thead><tbody><tr><td>v0.9.4</td><td>L&#39;argomento <code>options</code> è supportato.</td></tr><tr><td>v0.5.8</td><td>Aggiunto in: v0.5.8</td></tr></tbody></table></div><ul><li><code>fd</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type" target="_blank" rel="noreferrer">&lt;number&gt;</a> Un descrittore di file associato a un TTY.</li><li><code>options</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object&gt;</a> Opzioni passate al <code>net.Socket</code> padre, vedere <code>options</code> del <a href="/it/nodejs/api/net#new-netsocketoptions"><code>net.Socket</code> constructor</a>.</li><li>Restituisce <a href="/it/nodejs/api/tty#class-ttyreadstream">&lt;tty.ReadStream&gt;</a></li></ul><p>Crea un <code>ReadStream</code> per <code>fd</code> associato a un TTY.</p><h3 id="new-ttywritestreamfd" tabindex="-1"><code>new tty.WriteStream(fd)</code> <a class="header-anchor" href="#new-ttywritestreamfd" aria-label="Permalink to “new tty.WriteStream(fd)”">​</a></h3><p><strong>Aggiunto in: v0.5.8</strong></p><ul><li><code>fd</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type" target="_blank" rel="noreferrer">&lt;number&gt;</a> Un descrittore di file associato a un TTY.</li><li>Restituisce <a href="/it/nodejs/api/tty#class-ttywritestream">&lt;tty.WriteStream&gt;</a></li></ul><p>Crea un <code>WriteStream</code> per <code>fd</code> associato a un TTY.</p><h3 id="event-resize" tabindex="-1">Evento: <code>&#39;resize&#39;</code> <a class="header-anchor" href="#event-resize" aria-label="Permalink to “Evento: &#39;resize&#39;”">​</a></h3><p><strong>Aggiunto in: v0.7.7</strong></p><p>L&#39;evento <code>&#39;resize&#39;</code> viene emesso ogni volta che le proprietà <code>writeStream.columns</code> o <code>writeStream.rows</code> sono state modificate. Nessun argomento viene passato alla funzione di callback del listener quando viene chiamata.</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">process.stdout.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;resize&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;le dimensioni dello schermo sono cambiate!&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">process</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">stdout</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">columns</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}x\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">process</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">stdout</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">rows</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="writestreamclearlinedir-callback" tabindex="-1"><code>writeStream.clearLine(dir[, callback])</code> <a class="header-anchor" href="#writestreamclearlinedir-callback" aria-label="Permalink to “writeStream.clearLine(dir[, callback])”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[Cronologia]</p><table tabindex="0"><thead><tr><th>Versione</th><th>Modifiche</th></tr></thead><tbody><tr><td>v12.7.0</td><td>La funzione di callback e il valore di ritorno di write() dello stream sono esposti.</td></tr><tr><td>v0.7.7</td><td>Aggiunto in: v0.7.7</td></tr></tbody></table></div><ul><li><p><code>dir</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type" target="_blank" rel="noreferrer">&lt;number&gt;</a></p><ul><li><code>-1</code>: a sinistra dal cursore</li><li><code>1</code>: a destra dal cursore</li><li><code>0</code>: l&#39;intera riga</li></ul></li><li><p><code>callback</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function" target="_blank" rel="noreferrer">&lt;Function&gt;</a> Invocata al termine dell&#39;operazione.</p></li><li><p>Restituisce: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type" target="_blank" rel="noreferrer">&lt;boolean&gt;</a> <code>false</code> se lo stream desidera che il codice chiamante attenda che l&#39;evento <code>&#39;drain&#39;</code> venga emesso prima di continuare a scrivere dati aggiuntivi; altrimenti <code>true</code>.</p></li></ul><p><code>writeStream.clearLine()</code> cancella la riga corrente di questo <code>WriteStream</code> in una direzione identificata da <code>dir</code>.</p><h3 id="writestreamclearscreendowncallback" tabindex="-1"><code>writeStream.clearScreenDown([callback])</code> <a class="header-anchor" href="#writestreamclearscreendowncallback" aria-label="Permalink to “writeStream.clearScreenDown([callback])”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[Cronologia]</p><table tabindex="0"><thead><tr><th>Versione</th><th>Modifiche</th></tr></thead><tbody><tr><td>v12.7.0</td><td>La funzione di callback e il valore di ritorno di write() dello stream sono esposti.</td></tr><tr><td>v0.7.7</td><td>Aggiunto in: v0.7.7</td></tr></tbody></table></div><ul><li><code>callback</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function" target="_blank" rel="noreferrer">&lt;Function&gt;</a> Invocata al termine dell&#39;operazione.</li><li>Restituisce: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type" target="_blank" rel="noreferrer">&lt;boolean&gt;</a> <code>false</code> se lo stream desidera che il codice chiamante attenda che l&#39;evento <code>&#39;drain&#39;</code> venga emesso prima di continuare a scrivere dati aggiuntivi; altrimenti <code>true</code>.</li></ul><p><code>writeStream.clearScreenDown()</code> cancella questo <code>WriteStream</code> dal cursore corrente in giù.</p><h3 id="writestreamcolumns" tabindex="-1"><code>writeStream.columns</code> <a class="header-anchor" href="#writestreamcolumns" aria-label="Permalink to “writeStream.columns”">​</a></h3><p><strong>Aggiunto in: v0.7.7</strong></p><p>Un <code>number</code> che specifica il numero di colonne che il TTY ha attualmente. Questa proprietà viene aggiornata ogni volta che viene emesso l&#39;evento <code>&#39;resize&#39;</code>.</p><h3 id="writestreamcursortox-y-callback" tabindex="-1"><code>writeStream.cursorTo(x[, y][, callback])</code> <a class="header-anchor" href="#writestreamcursortox-y-callback" aria-label="Permalink to “writeStream.cursorTo(x[, y][, callback])”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[Cronologia]</p><table tabindex="0"><thead><tr><th>Versione</th><th>Modifiche</th></tr></thead><tbody><tr><td>v12.7.0</td><td>Vengono esposti il callback e il valore di ritorno di write() dello stream.</td></tr><tr><td>v0.7.7</td><td>Aggiunto in: v0.7.7</td></tr></tbody></table></div><ul><li><code>x</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type" target="_blank" rel="noreferrer">&lt;number&gt;</a></li><li><code>y</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type" target="_blank" rel="noreferrer">&lt;number&gt;</a></li><li><code>callback</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function" target="_blank" rel="noreferrer">&lt;Function&gt;</a> Invocata una volta completata l&#39;operazione.</li><li>Restituisce: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type" target="_blank" rel="noreferrer">&lt;boolean&gt;</a> <code>false</code> se lo stream desidera che il codice chiamante attenda l&#39;emissione dell&#39;evento <code>&#39;drain&#39;</code> prima di continuare a scrivere dati aggiuntivi; altrimenti <code>true</code>.</li></ul><p><code>writeStream.cursorTo()</code> sposta il cursore di questo <code>WriteStream</code> nella posizione specificata.</p><h3 id="writestreamgetcolordepthenv" tabindex="-1"><code>writeStream.getColorDepth([env])</code> <a class="header-anchor" href="#writestreamgetcolordepthenv" aria-label="Permalink to “writeStream.getColorDepth([env])”">​</a></h3><p><strong>Aggiunto in: v9.9.0</strong></p><ul><li><code>env</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object&gt;</a> Un oggetto contenente le variabili d&#39;ambiente da controllare. Questo consente di simulare l&#39;utilizzo di un terminale specifico. <strong>Predefinito:</strong> <code>process.env</code>.</li><li>Restituisce: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type" target="_blank" rel="noreferrer">&lt;number&gt;</a></li></ul><p>Restituisce:</p><ul><li><code>1</code> per 2,</li><li><code>4</code> per 16,</li><li><code>8</code> per 256,</li><li><code>24</code> per 16.777.216 colori supportati.</li></ul><p>Usalo per determinare quali colori supporta il terminale. A causa della natura dei colori nei terminali, è possibile avere falsi positivi o falsi negativi. Dipende dalle informazioni sul processo e dalle variabili d&#39;ambiente che potrebbero mentire sul terminale utilizzato. È possibile passare un oggetto <code>env</code> per simulare l&#39;utilizzo di un terminale specifico. Questo può essere utile per verificare come si comportano impostazioni ambientali specifiche.</p><p>Per forzare un supporto specifico del colore, usa una delle seguenti impostazioni ambientali.</p><ul><li>2 colori: <code>FORCE_COLOR = 0</code> (Disabilita i colori)</li><li>16 colori: <code>FORCE_COLOR = 1</code></li><li>256 colori: <code>FORCE_COLOR = 2</code></li><li>16.777.216 colori: <code>FORCE_COLOR = 3</code></li></ul><p>È anche possibile disabilitare il supporto del colore utilizzando le variabili d&#39;ambiente <code>NO_COLOR</code> e <code>NODE_DISABLE_COLORS</code>.</p><h3 id="writestreamgetwindowsize" tabindex="-1"><code>writeStream.getWindowSize()</code> <a class="header-anchor" href="#writestreamgetwindowsize" aria-label="Permalink to “writeStream.getWindowSize()”">​</a></h3><p><strong>Aggiunto in: v0.7.7</strong></p><ul><li>Restituisce: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type" target="_blank" rel="noreferrer">&lt;number[]&gt;</a></li></ul><p><code>writeStream.getWindowSize()</code> restituisce la dimensione del TTY corrispondente a questo <code>WriteStream</code>. L&#39;array è del tipo <code>[numColumns, numRows]</code> dove <code>numColumns</code> e <code>numRows</code> rappresentano il numero di colonne e righe nel TTY corrispondente.</p><h3 id="writestreamhascolorscount-env" tabindex="-1"><code>writeStream.hasColors([count][, env])</code> <a class="header-anchor" href="#writestreamhascolorscount-env" aria-label="Permalink to “writeStream.hasColors([count][, env])”">​</a></h3><p><strong>Aggiunto in: v11.13.0, v10.16.0</strong></p><ul><li><code>count</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type" target="_blank" rel="noreferrer">&lt;integer&gt;</a> Il numero di colori richiesti (minimo 2). <strong>Predefinito:</strong> 16.</li><li><code>env</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object&gt;</a> Un oggetto contenente le variabili d&#39;ambiente da controllare. Ciò consente di simulare l&#39;utilizzo di un terminale specifico. <strong>Predefinito:</strong> <code>process.env</code>.</li><li>Restituisce: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type" target="_blank" rel="noreferrer">&lt;boolean&gt;</a></li></ul><p>Restituisce <code>true</code> se <code>writeStream</code> supporta almeno tanti colori quanti sono forniti in <code>count</code>. Il supporto minimo è 2 (bianco e nero).</p><p>Questo ha gli stessi falsi positivi e negativi descritti in <a href="/it/nodejs/api/tty#writestreamgetcolordepthenv"><code>writeStream.getColorDepth()</code></a>.</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">process.stdout.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">hasColors</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Restituisce true o false a seconda che \`stdout\` supporti almeno 16 colori.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">process.stdout.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">hasColors</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">256</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Restituisce true o false a seconda che \`stdout\` supporti almeno 256 colori.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">process.stdout.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">hasColors</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ TMUX: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;1&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> });</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Restituisce true.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">process.stdout.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">hasColors</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> **</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 24</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, { TMUX: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;1&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> });</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Restituisce false (l&#39;impostazione dell&#39;ambiente finge di supportare 2 ** 8 colori).</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="writestreamistty" tabindex="-1"><code>writeStream.isTTY</code> <a class="header-anchor" href="#writestreamistty" aria-label="Permalink to “writeStream.isTTY”">​</a></h3><p><strong>Aggiunto in: v0.5.8</strong></p><p>Un <code>boolean</code> che è sempre <code>true</code>.</p><h3 id="writestreammovecursordx-dy-callback" tabindex="-1"><code>writeStream.moveCursor(dx, dy[, callback])</code> <a class="header-anchor" href="#writestreammovecursordx-dy-callback" aria-label="Permalink to “writeStream.moveCursor(dx, dy[, callback])”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[Cronologia]</p><table tabindex="0"><thead><tr><th>Versione</th><th>Modifiche</th></tr></thead><tbody><tr><td>v12.7.0</td><td>Sono esposti il callback e il valore di ritorno di write() dello stream.</td></tr><tr><td>v0.7.7</td><td>Aggiunto in: v0.7.7</td></tr></tbody></table></div><ul><li><code>dx</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type" target="_blank" rel="noreferrer">&lt;number&gt;</a></li><li><code>dy</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type" target="_blank" rel="noreferrer">&lt;number&gt;</a></li><li><code>callback</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function" target="_blank" rel="noreferrer">&lt;Function&gt;</a> Richiamato una volta completata l&#39;operazione.</li><li>Restituisce: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type" target="_blank" rel="noreferrer">&lt;boolean&gt;</a> <code>false</code> se lo stream desidera che il codice chiamante attenda l&#39;emissione dell&#39;evento <code>&#39;drain&#39;</code> prima di continuare a scrivere dati aggiuntivi; altrimenti <code>true</code>.</li></ul><p><code>writeStream.moveCursor()</code> sposta il cursore di questo <code>WriteStream</code> <em>relativamente</em> alla sua posizione corrente.</p><h3 id="writestreamrows" tabindex="-1"><code>writeStream.rows</code> <a class="header-anchor" href="#writestreamrows" aria-label="Permalink to “writeStream.rows”">​</a></h3><p><strong>Aggiunto in: v0.7.7</strong></p><p>Un <code>number</code> che specifica il numero di righe che il TTY ha attualmente. Questa proprietà viene aggiornata ogni volta che viene emesso l&#39;evento <code>&#39;resize&#39;</code>.</p><h2 id="ttyisattyfd" tabindex="-1"><code>tty.isatty(fd)</code> <a class="header-anchor" href="#ttyisattyfd" aria-label="Permalink to “tty.isatty(fd)”">​</a></h2><p><strong>Aggiunto in: v0.5.8</strong></p><ul><li><code>fd</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type" target="_blank" rel="noreferrer">&lt;number&gt;</a> Un descrittore di file numerico</li><li>Restituisce: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type" target="_blank" rel="noreferrer">&lt;boolean&gt;</a></li></ul><p>Il metodo <code>tty.isatty()</code> restituisce <code>true</code> se il dato <code>fd</code> è associato a un TTY e <code>false</code> se non lo è, incluso quando <code>fd</code> non è un intero non negativo.</p>`,88)])}var s=e(a,[[`render`,o]]);export{i as __pageData,s as default};