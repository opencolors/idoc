import{__plugin_vue_export_helper_default as e,createElementBlock as t,createStaticVNode as n,openBlock as r}from"./chunks/plugin-vue_export-helper.Bts1mPc7.js";const i=JSON.parse(`{"title":"Ausführen von Node.js-Skripten aus der Kommandozeile","description":"Erfahren Sie, wie Sie Node.js-Programme aus der Kommandozeile ausführen, einschließlich der Verwendung des node-Befehls, Shebang-Zeilen, Ausführungsberechtigungen, Übergeben von Zeichenketten als Argumente und automatisches Neustarten der Anwendung.","frontmatter":{"title":"Ausführen von Node.js-Skripten aus der Kommandozeile","description":"Erfahren Sie, wie Sie Node.js-Programme aus der Kommandozeile ausführen, einschließlich der Verwendung des node-Befehls, Shebang-Zeilen, Ausführungsberechtigungen, Übergeben von Zeichenketten als Argumente und automatisches Neustarten der Anwendung.","head":[["meta",{"name":"og:title","content":"Ausführen von Node.js-Skripten aus der Kommandozeile | Node.js - iDoc.dev"}],["meta",{"name":"og:description","content":"Erfahren Sie, wie Sie Node.js-Programme aus der Kommandozeile ausführen, einschließlich der Verwendung des node-Befehls, Shebang-Zeilen, Ausführungsberechtigungen, Übergeben von Zeichenketten als Argumente und automatisches Neustarten der Anwendung."}],["meta",{"name":"twitter:title","content":"Ausführen von Node.js-Skripten aus der Kommandozeile | Node.js - iDoc.dev"}],["meta",{"name":"twitter:description","content":"Erfahren Sie, wie Sie Node.js-Programme aus der Kommandozeile ausführen, einschließlich der Verwendung des node-Befehls, Shebang-Zeilen, Ausführungsberechtigungen, Übergeben von Zeichenketten als Argumente und automatisches Neustarten der Anwendung."}],["link",{"rel":"canonical","href":"https://idoc.dev/de/nodejs/guide/run-nodejs-scripts-from-the-command-line"}],["meta",{"property":"og:url","content":"https://idoc.dev/de/nodejs/guide/run-nodejs-scripts-from-the-command-line"}]]},"headers":[],"relativePath":"de/nodejs/guide/run-nodejs-scripts-from-the-command-line.md","filePath":"de/nodejs/guide/run-nodejs-scripts-from-the-command-line.md","lastUpdated":null}`),a={name:`de/nodejs/guide/run-nodejs-scripts-from-the-command-line.md`};function o(e,i,a,o,s,c){return r(),t(`div`,null,i[0]||=[n(`<h1 id="node-js-skripte-uber-die-befehlszeile-ausfuhren" tabindex="-1">Node.js-Skripte über die Befehlszeile ausführen <a class="header-anchor" href="#node-js-skripte-uber-die-befehlszeile-ausfuhren" aria-label="Permalink to “Node.js-Skripte über die Befehlszeile ausführen”">​</a></h1><p>Die übliche Methode, ein Node.js-Programm auszuführen, besteht darin, den global verfügbaren Befehl <code>node</code> (sobald Sie Node.js installiert haben) auszuführen und den Namen der auszuführenden Datei zu übergeben.</p><p>Wenn Ihre Hauptanwendungsdatei von Node.js <code>app.js</code> ist, können Sie sie aufrufen, indem Sie Folgendes eingeben:</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">node</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> app.js</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Oben weisen Sie die Shell explizit an, Ihr Skript mit <code>node</code> auszuführen. Sie können diese Information auch mit einer &quot;Shebang&quot;-Zeile in Ihre JavaScript-Datei einbetten. Der &quot;Shebang&quot; ist die erste Zeile in der Datei und teilt dem Betriebssystem mit, welcher Interpreter zum Ausführen des Skripts verwendet werden soll. Unten ist die erste Zeile von JavaScript:</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#!/usr/bin/node</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Oben geben wir explizit den absoluten Pfad des Interpreters an. Nicht alle Betriebssysteme haben <code>node</code> im Ordner <code>bin</code>, aber alle sollten <code>env</code> haben. Sie können das Betriebssystem anweisen, <code>env</code> mit <code>node</code> als Parameter auszuführen:</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#!/usr/bin/env node</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Ihr JavaScript-Code</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="um-einen-shebang-zu-verwenden-muss-ihre-datei-uber-eine-ausfuhrungsberechtigung-verfugen" tabindex="-1">Um einen Shebang zu verwenden, muss Ihre Datei über eine Ausführungsberechtigung verfügen. <a class="header-anchor" href="#um-einen-shebang-zu-verwenden-muss-ihre-datei-uber-eine-ausfuhrungsberechtigung-verfugen" aria-label="Permalink to “Um einen Shebang zu verwenden, muss Ihre Datei über eine Ausführungsberechtigung verfügen.”">​</a></h2><p>Sie können <code>app.js</code> die Ausführungsberechtigung erteilen, indem Sie Folgendes ausführen:</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">chmod</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> u+x</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> app.js</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Stellen Sie beim Ausführen des Befehls sicher, dass Sie sich im selben Verzeichnis befinden, das die Datei <code>app.js</code> enthält.</p><h2 id="zeichenkette-anstelle-des-dateipfads-als-argument-an-node-ubergeben" tabindex="-1">Zeichenkette anstelle des Dateipfads als Argument an Node übergeben <a class="header-anchor" href="#zeichenkette-anstelle-des-dateipfads-als-argument-an-node-ubergeben" aria-label="Permalink to “Zeichenkette anstelle des Dateipfads als Argument an Node übergeben”">​</a></h2><p>Um eine Zeichenkette als Argument auszuführen, können Sie <code>-e</code>, <code>--eval &quot;script&quot;</code> verwenden. Das folgende Argument wird als JavaScript ausgewertet. Die Module, die im REPL vordefiniert sind, können auch im Skript verwendet werden. Unter Windows funktioniert die Verwendung von <code>cmd.exe</code> mit einem einfachen Anführungszeichen nicht korrekt, da es nur doppelte <code>&quot;</code> zum Zitieren erkennt. In Powershell oder Git Bash sind sowohl <code>&quot;</code> als auch <code>&#39;</code> verwendbar.</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">node</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;console.log(123)&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="anwendung-automatisch-neu-starten" tabindex="-1">Anwendung automatisch neu starten <a class="header-anchor" href="#anwendung-automatisch-neu-starten" aria-label="Permalink to “Anwendung automatisch neu starten”">​</a></h2><p>Ab Nodejs V 16 gibt es eine integrierte Option, die Anwendung automatisch neu zu starten, wenn sich eine Datei ändert. Dies ist nützlich für Entwicklungszwecke. Um diese Funktion zu nutzen, müssen Sie das <code>watch</code>-Flag an Nodejs übergeben.</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">node</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --watch</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> app.js</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Wenn Sie also die Datei ändern, wird die Anwendung automatisch neu gestartet. Lesen Sie die --watch <a href="/de/nodejs/api/cli#watch">Flag-Dokumentation</a>.</p>`,19)])}var s=e(a,[[`render`,o]]);export{i as __pageData,s as default};