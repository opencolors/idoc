import{__plugin_vue_export_helper_default as e,createElementBlock as t,createStaticVNode as n,openBlock as r}from"./chunks/plugin-vue_export-helper.Bts1mPc7.js";const i=JSON.parse(`{"title":"Node.js에서 환경 변수 읽기","description":"process.env 속성과 .env 파일을 사용하여 Node.js에서 환경 변수에 액세스하는 방법을 알아보세요.","frontmatter":{"title":"Node.js에서 환경 변수 읽기","description":"process.env 속성과 .env 파일을 사용하여 Node.js에서 환경 변수에 액세스하는 방법을 알아보세요.","head":[["meta",{"name":"og:title","content":"Node.js에서 환경 변수 읽기 | Node.js - iDoc.dev"}],["meta",{"name":"og:description","content":"process.env 속성과 .env 파일을 사용하여 Node.js에서 환경 변수에 액세스하는 방법을 알아보세요."}],["meta",{"name":"twitter:title","content":"Node.js에서 환경 변수 읽기 | Node.js - iDoc.dev"}],["meta",{"name":"twitter:description","content":"process.env 속성과 .env 파일을 사용하여 Node.js에서 환경 변수에 액세스하는 방법을 알아보세요."}],["link",{"rel":"canonical","href":"https://idoc.dev/ko/nodejs/guide/how-to-read-environment-variables-from-nodejs"}],["meta",{"property":"og:url","content":"https://idoc.dev/ko/nodejs/guide/how-to-read-environment-variables-from-nodejs"}]]},"headers":[],"relativePath":"ko/nodejs/guide/how-to-read-environment-variables-from-nodejs.md","filePath":"ko/nodejs/guide/how-to-read-environment-variables-from-nodejs.md","lastUpdated":null}`),a={name:`ko/nodejs/guide/how-to-read-environment-variables-from-nodejs.md`};function o(e,i,a,o,s,c){return r(),t(`div`,null,i[0]||=[n(`<h1 id="node-js에서-환경-변수를-읽는-방법" tabindex="-1">Node.js에서 환경 변수를 읽는 방법 <a class="header-anchor" href="#node-js에서-환경-변수를-읽는-방법" aria-label="Permalink to “Node.js에서 환경 변수를 읽는 방법”">​</a></h1><p>Node.js의 process 코어 모듈은 프로세스가 시작될 때 설정된 모든 환경 변수를 호스팅하는 <code>env</code> 속성을 제공합니다.</p><p>아래 코드는 <code>app.js</code>를 실행하고 <code>USER_ID</code>와 <code>USER_KEY</code>를 설정합니다.</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">USER_ID</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">239482</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> USER_KEY</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">foobar</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> node</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> app.js</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>이렇게 하면 사용자 <code>USER_ID</code>는 239482로, <code>USER_KEY</code>는 foobar로 전달됩니다. 이는 테스트에 적합하지만, 프로덕션 환경에서는 변수를 내보내는 몇 가지 bash 스크립트를 구성해야 할 것입니다.</p><div class="tip custom-block"><p class="custom-block-title">NOTE</p><p><code>process</code>는 <code>&quot;require&quot;</code>가 필요하지 않으며, 자동으로 사용할 수 있습니다.</p></div><p>다음은 위 코드에서 설정한 <code>USER_ID</code> 및 <code>USER_KEY</code> 환경 변수에 액세스하는 예입니다.</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">process.env.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">USER_ID</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &quot;239482</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">process.env.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">USER_KEY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &quot;foobar</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>같은 방식으로 설정한 모든 사용자 지정 환경 변수에 액세스할 수 있습니다. Node.js 20에서는 실험적인 <a href="/ko/nodejs/api/cli#env-file-config">.env 파일 지원</a>이 도입되었습니다.</p><p>이제 <code>--env-file</code> 플래그를 사용하여 Node.js 애플리케이션을 실행할 때 환경 파일을 지정할 수 있습니다. 다음은 <code>.env</code> 파일의 예와 <code>process.env</code>를 사용하여 해당 변수에 액세스하는 방법입니다.</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.env</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> file</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">PORT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">3000</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>js 파일에서</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">process.env.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PORT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 3000</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><code>.env</code> 파일에 설정된 환경 변수를 사용하여 <code>app.js</code> 파일을 실행합니다.</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">node </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">env</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">file</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.env app.js</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>이 명령은 <code>.env</code> 파일에서 모든 환경 변수를 로드하여 <code>process.env</code>에서 애플리케이션에서 사용할 수 있도록 합니다. 또한 여러 개의 --env-file 인수를 전달할 수 있습니다. 후속 파일은 이전 파일에 정의된 기존 변수를 재정의합니다.</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">node</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --env-file=.env</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --env-file=.development.env</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> app.js</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="tip custom-block"><p class="custom-block-title">NOTE</p><p>동일한 변수가 환경과 파일 모두에 정의된 경우 환경의 값이 우선합니다.</p></div>`,18)])}var s=e(a,[[`render`,o]]);export{i as __pageData,s as default};