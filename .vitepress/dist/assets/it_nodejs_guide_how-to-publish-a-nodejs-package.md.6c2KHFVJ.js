import{__plugin_vue_export_helper_default as e,createElementBlock as t,createStaticVNode as n,openBlock as r}from"./chunks/plugin-vue_export-helper.Bts1mPc7.js";const i=JSON.parse(`{"title":"Pubblicazione di un pacchetto Node-API","description":"Scopri come pubblicare una versione Node-API di un pacchetto insieme a una versione non Node-API e come introdurre una dipendenza da una versione Node-API di un pacchetto.","frontmatter":{"title":"Pubblicazione di un pacchetto Node-API","description":"Scopri come pubblicare una versione Node-API di un pacchetto insieme a una versione non Node-API e come introdurre una dipendenza da una versione Node-API di un pacchetto.","head":[["meta",{"name":"og:title","content":"Pubblicazione di un pacchetto Node-API | Node.js - iDoc.dev"}],["meta",{"name":"og:description","content":"Scopri come pubblicare una versione Node-API di un pacchetto insieme a una versione non Node-API e come introdurre una dipendenza da una versione Node-API di un pacchetto."}],["meta",{"name":"twitter:title","content":"Pubblicazione di un pacchetto Node-API | Node.js - iDoc.dev"}],["meta",{"name":"twitter:description","content":"Scopri come pubblicare una versione Node-API di un pacchetto insieme a una versione non Node-API e come introdurre una dipendenza da una versione Node-API di un pacchetto."}],["link",{"rel":"canonical","href":"https://idoc.dev/it/nodejs/guide/how-to-publish-a-nodejs-package"}],["meta",{"property":"og:url","content":"https://idoc.dev/it/nodejs/guide/how-to-publish-a-nodejs-package"}]]},"headers":[],"relativePath":"it/nodejs/guide/how-to-publish-a-nodejs-package.md","filePath":"it/nodejs/guide/how-to-publish-a-nodejs-package.md","lastUpdated":1749464498000}`),a={name:`it/nodejs/guide/how-to-publish-a-nodejs-package.md`};function o(e,i,a,o,s,c){return r(),t(`div`,null,i[0]||=[n(`<h1 id="come-pubblicare-un-pacchetto-node-api" tabindex="-1">Come pubblicare un pacchetto Node-API <a class="header-anchor" href="#come-pubblicare-un-pacchetto-node-api" aria-label="Permalink to “Come pubblicare un pacchetto Node-API”">​</a></h1><h2 id="come-pubblicare-una-versione-node-api-di-un-pacchetto-insieme-a-una-versione-non-node-api" tabindex="-1">Come pubblicare una versione Node-API di un pacchetto insieme a una versione non-Node-API <a class="header-anchor" href="#come-pubblicare-una-versione-node-api-di-un-pacchetto-insieme-a-una-versione-non-node-api" aria-label="Permalink to “Come pubblicare una versione Node-API di un pacchetto insieme a una versione non-Node-API”">​</a></h2><p>I seguenti passaggi sono illustrati utilizzando il pacchetto <code>iotivity-node</code>:</p><ul><li><p>Innanzitutto, pubblica la versione non-Node-API:</p><ul><li>Aggiorna la versione in <code>package.json</code>. Per <code>iotivity-node</code>, la versione diventa 1.2.0-2.</li><li>Rivedi la checklist di rilascio (assicurati che test/demo/documentazione siano OK).</li><li><code>npm publish</code>.</li></ul></li><li><p>Quindi, pubblica la versione Node-API:</p><ul><li>Aggiorna la versione in <code>package.json</code>. Nel caso di <code>iotivity-node</code>, la versione diventa 1.2.0-3. Per il versionamento, consigliamo di seguire lo schema di versione pre-release come descritto da <a href="https://semver.org" target="_blank" rel="noreferrer">semver.org</a> es. 1.2.0-napi.</li><li>Rivedi la checklist di rilascio (assicurati che test/demo/documentazione siano OK).</li><li><code>npm publish --tag n-api</code>.</li></ul></li></ul><p>In questo esempio, l&#39;etichettatura del rilascio con <code>n-api</code> ha assicurato che, sebbene la versione 1.2.0-3 sia successiva alla versione pubblicata non-Node-APl (1.2.0-2), non verrà installata se qualcuno sceglie di installare <code>iotivity-node</code> semplicemente eseguendo <code>npm install iotivity-node</code>. Questo installerà la versione non-Node-APl per impostazione predefinita. L&#39;utente dovrà eseguire <code>npm install iotivity-node@n api</code> per ricevere la versione Node-APlI. Per ulteriori informazioni sull&#39;utilizzo dei tag con npm, consulta &quot;Utilizzo di dist-tag&quot;.</p><h2 id="come-introdurre-una-dipendenza-da-una-versione-node-api-di-un-pacchetto" tabindex="-1">Come introdurre una dipendenza da una versione Node-API di un pacchetto <a class="header-anchor" href="#come-introdurre-una-dipendenza-da-una-versione-node-api-di-un-pacchetto" aria-label="Permalink to “Come introdurre una dipendenza da una versione Node-API di un pacchetto”">​</a></h2><p>Per aggiungere la versione Node-API di <code>iotivity-node</code> come dipendenza, il file <code>package.json</code> sarà simile a questo:</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;dependencies&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;iotivity-node&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;n-api&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>Come spiegato in &quot;Utilizzo di dist-tag&quot;, a differenza delle versioni regolari, le versioni etichettate non possono essere indirizzate da intervalli di versione come <code>&quot;^2.0.0&quot;</code> all&#39;interno di <code>package.json</code>. Il motivo è che il tag si riferisce esattamente a una versione. Quindi, se il manutentore del pacchetto sceglie di taggare una versione successiva del pacchetto utilizzando lo stesso tag, <code>npm update</code> riceverà la versione successiva. Questa dovrebbe essere una versione accettabile diversa dall&#39;ultima pubblicata, la dipendenza <code>package.json</code> dovrà fare riferimento alla versione esatta come la seguente:</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;dependencies&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;iotivity-node&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;1.2.0-3&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>`,10)])}var s=e(a,[[`render`,o]]);export{i as __pageData,s as default};