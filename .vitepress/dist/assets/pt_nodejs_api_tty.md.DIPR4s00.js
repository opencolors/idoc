import{__plugin_vue_export_helper_default as e,createElementBlock as t,createStaticVNode as n,openBlock as r}from"./chunks/plugin-vue_export-helper.Bts1mPc7.js";const i=JSON.parse(`{"title":"Documentação TTY do Node.js","description":"O módulo TTY do Node.js fornece uma interface para interagir com dispositivos TTY, incluindo métodos para verificar se um fluxo é um TTY, obter o tamanho da janela e lidar com eventos do terminal.","frontmatter":{"title":"Documentação TTY do Node.js","description":"O módulo TTY do Node.js fornece uma interface para interagir com dispositivos TTY, incluindo métodos para verificar se um fluxo é um TTY, obter o tamanho da janela e lidar com eventos do terminal.","head":[["meta",{"name":"og:title","content":"Documentação TTY do Node.js | Node.js - iDoc.dev"}],["meta",{"name":"og:description","content":"O módulo TTY do Node.js fornece uma interface para interagir com dispositivos TTY, incluindo métodos para verificar se um fluxo é um TTY, obter o tamanho da janela e lidar com eventos do terminal."}],["meta",{"name":"twitter:title","content":"Documentação TTY do Node.js | Node.js - iDoc.dev"}],["meta",{"name":"twitter:description","content":"O módulo TTY do Node.js fornece uma interface para interagir com dispositivos TTY, incluindo métodos para verificar se um fluxo é um TTY, obter o tamanho da janela e lidar com eventos do terminal."}],["link",{"rel":"canonical","href":"https://idoc.dev/pt/nodejs/api/tty"}],["meta",{"property":"og:url","content":"https://idoc.dev/pt/nodejs/api/tty"}]]},"headers":[],"relativePath":"pt/nodejs/api/tty.md","filePath":"pt/nodejs/api/tty.md","lastUpdated":1749464498000}`),a={name:`pt/nodejs/api/tty.md`};function o(e,i,a,o,s,c){return r(),t(`div`,null,i[0]||=[n(`<h1 id="tty" tabindex="-1">TTY <a class="header-anchor" href="#tty" aria-label="Permalink to “TTY”">​</a></h1><div class="tip custom-block"><p class="custom-block-title">[Estável: 2 - Estável]</p><p><a href="/pt/nodejs/api/documentation#stability-index">Estável: 2</a> <a href="/pt/nodejs/api/documentation#stability-index">Estabilidade: 2</a> - Estável</p></div><p><strong>Código-fonte:</strong> <a href="https://github.com/nodejs/node/blob/v23.5.0/lib/tty.js" target="_blank" rel="noreferrer">lib/tty.js</a></p><p>O módulo <code>node:tty</code> fornece as classes <code>tty.ReadStream</code> e <code>tty.WriteStream</code>. Na maioria dos casos, não será necessário ou possível usar este módulo diretamente. No entanto, ele pode ser acessado usando:</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> tty</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;node:tty&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Quando o Node.js detecta que está sendo executado com um terminal de texto (&quot;TTY&quot;) anexado, <a href="/pt/nodejs/api/process#processstdin"><code>process.stdin</code></a> será, por padrão, inicializado como uma instância de <code>tty.ReadStream</code> e ambos <a href="/pt/nodejs/api/process#processstdout"><code>process.stdout</code></a> e <a href="/pt/nodejs/api/process#processstderr"><code>process.stderr</code></a> serão, por padrão, instâncias de <code>tty.WriteStream</code>. O método preferido para determinar se o Node.js está sendo executado dentro de um contexto TTY é verificar se o valor da propriedade <code>process.stdout.isTTY</code> é <code>true</code>:</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> node</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Boolean(process.stdout.isTTY)&quot;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> node</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Boolean(process.stdout.isTTY)&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> cat</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>Na maioria dos casos, não deve haver pouca ou nenhuma razão para que um aplicativo crie manualmente instâncias das classes <code>tty.ReadStream</code> e <code>tty.WriteStream</code>.</p><h2 id="class-ttyreadstream" tabindex="-1">Classe: <code>tty.ReadStream</code> <a class="header-anchor" href="#class-ttyreadstream" aria-label="Permalink to “Classe: tty.ReadStream”">​</a></h2><p><strong>Adicionado em: v0.5.8</strong></p><ul><li>Estende: <a href="/pt/nodejs/api/net#class-netsocket">&lt;net.Socket&gt;</a></li></ul><p>Representa o lado legível de um TTY. Em circunstâncias normais, <a href="/pt/nodejs/api/process#processstdin"><code>process.stdin</code></a> será a única instância de <code>tty.ReadStream</code> em um processo Node.js e não deve haver razão para criar instâncias adicionais.</p><h3 id="readstreamisraw" tabindex="-1"><code>readStream.isRaw</code> <a class="header-anchor" href="#readstreamisraw" aria-label="Permalink to “readStream.isRaw”">​</a></h3><p><strong>Adicionado em: v0.7.7</strong></p><p>Um <code>boolean</code> que é <code>true</code> se o TTY estiver atualmente configurado para operar como um dispositivo bruto.</p><p>Este sinalizador é sempre <code>false</code> quando um processo é iniciado, mesmo que o terminal esteja operando no modo bruto. Seu valor mudará com chamadas subsequentes para <code>setRawMode</code>.</p><h3 id="readstreamistty" tabindex="-1"><code>readStream.isTTY</code> <a class="header-anchor" href="#readstreamistty" aria-label="Permalink to “readStream.isTTY”">​</a></h3><p><strong>Adicionado em: v0.5.8</strong></p><p>Um <code>boolean</code> que é sempre <code>true</code> para instâncias de <code>tty.ReadStream</code>.</p><h3 id="readstreamsetrawmodemode" tabindex="-1"><code>readStream.setRawMode(mode)</code> <a class="header-anchor" href="#readstreamsetrawmodemode" aria-label="Permalink to “readStream.setRawMode(mode)”">​</a></h3><p><strong>Adicionado em: v0.7.7</strong></p><ul><li><code>mode</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type" target="_blank" rel="noreferrer">&lt;boolean&gt;</a> Se <code>true</code>, configura o <code>tty.ReadStream</code> para operar como um dispositivo bruto. Se <code>false</code>, configura o <code>tty.ReadStream</code> para operar em seu modo padrão. A propriedade <code>readStream.isRaw</code> será definida para o modo resultante.</li><li>Retorna: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this" target="_blank" rel="noreferrer">&lt;this&gt;</a> A instância do stream de leitura.</li></ul><p>Permite a configuração de <code>tty.ReadStream</code> para que ele opere como um dispositivo bruto.</p><p>Quando em modo bruto, a entrada está sempre disponível caractere por caractere, não incluindo modificadores. Além disso, todo o processamento especial de caracteres pelo terminal é desativado, incluindo o eco dos caracteres de entrada. + não causará mais um <code>SIGINT</code> quando estiver neste modo.</p><h2 id="class-ttywritestream" tabindex="-1">Classe: <code>tty.WriteStream</code> <a class="header-anchor" href="#class-ttywritestream" aria-label="Permalink to “Classe: tty.WriteStream”">​</a></h2><p><strong>Adicionado em: v0.5.8</strong></p><ul><li>Estende: <a href="/pt/nodejs/api/net#class-netsocket">&lt;net.Socket&gt;</a></li></ul><p>Representa o lado gravável de um TTY. Em circunstâncias normais, <a href="/pt/nodejs/api/process#processstdout"><code>process.stdout</code></a> e <a href="/pt/nodejs/api/process#processstderr"><code>process.stderr</code></a> serão as únicas instâncias de <code>tty.WriteStream</code> criadas para um processo Node.js e não deve haver razão para criar instâncias adicionais.</p><h3 id="new-ttyreadstreamfd-options" tabindex="-1"><code>new tty.ReadStream(fd[, options])</code> <a class="header-anchor" href="#new-ttyreadstreamfd-options" aria-label="Permalink to “new tty.ReadStream(fd[, options])”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[Histórico]</p><table tabindex="0"><thead><tr><th>Versão</th><th>Mudanças</th></tr></thead><tbody><tr><td>v0.9.4</td><td>O argumento <code>options</code> é suportado.</td></tr><tr><td>v0.5.8</td><td>Adicionado em: v0.5.8</td></tr></tbody></table></div><ul><li><code>fd</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type" target="_blank" rel="noreferrer">&lt;number&gt;</a> Um descritor de arquivo associado a um TTY.</li><li><code>options</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object&gt;</a> Opções passadas para o <code>net.Socket</code> pai, veja <code>options</code> do <a href="/pt/nodejs/api/net#new-netsocketoptions"><code>net.Socket</code> constructor</a>.</li><li>Retorna <a href="/pt/nodejs/api/tty#class-ttyreadstream">&lt;tty.ReadStream&gt;</a></li></ul><p>Cria um <code>ReadStream</code> para <code>fd</code> associado a um TTY.</p><h3 id="new-ttywritestreamfd" tabindex="-1"><code>new tty.WriteStream(fd)</code> <a class="header-anchor" href="#new-ttywritestreamfd" aria-label="Permalink to “new tty.WriteStream(fd)”">​</a></h3><p><strong>Adicionado em: v0.5.8</strong></p><ul><li><code>fd</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type" target="_blank" rel="noreferrer">&lt;number&gt;</a> Um descritor de arquivo associado a um TTY.</li><li>Retorna <a href="/pt/nodejs/api/tty#class-ttywritestream">&lt;tty.WriteStream&gt;</a></li></ul><p>Cria um <code>WriteStream</code> para <code>fd</code> associado a um TTY.</p><h3 id="event-resize" tabindex="-1">Evento: <code>&#39;resize&#39;</code> <a class="header-anchor" href="#event-resize" aria-label="Permalink to “Evento: &#39;resize&#39;”">​</a></h3><p><strong>Adicionado em: v0.7.7</strong></p><p>O evento <code>&#39;resize&#39;</code> é emitido sempre que uma das propriedades <code>writeStream.columns</code> ou <code>writeStream.rows</code> é alterada. Nenhum argumento é passado para o callback do listener quando chamado.</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">process.stdout.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;resize&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;o tamanho da tela foi alterado!&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">process</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">stdout</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">columns</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}x\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">process</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">stdout</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">rows</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="writestreamclearlinedir-callback" tabindex="-1"><code>writeStream.clearLine(dir[, callback])</code> <a class="header-anchor" href="#writestreamclearlinedir-callback" aria-label="Permalink to “writeStream.clearLine(dir[, callback])”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[Histórico]</p><table tabindex="0"><thead><tr><th>Versão</th><th>Alterações</th></tr></thead><tbody><tr><td>v12.7.0</td><td>O callback write() do stream e o valor de retorno são expostos.</td></tr><tr><td>v0.7.7</td><td>Adicionado em: v0.7.7</td></tr></tbody></table></div><ul><li><p><code>dir</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type" target="_blank" rel="noreferrer">&lt;number&gt;</a></p><ul><li><code>-1</code>: à esquerda do cursor</li><li><code>1</code>: à direita do cursor</li><li><code>0</code>: a linha inteira</li></ul></li><li><p><code>callback</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function" target="_blank" rel="noreferrer">&lt;Function&gt;</a> Invocado quando a operação é concluída.</p></li><li><p>Retorna: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type" target="_blank" rel="noreferrer">&lt;boolean&gt;</a> <code>false</code> se o stream deseja que o código de chamada espere que o evento <code>&#39;drain&#39;</code> seja emitido antes de continuar a gravar dados adicionais; caso contrário, <code>true</code>.</p></li></ul><p><code>writeStream.clearLine()</code> limpa a linha atual deste <code>WriteStream</code> em uma direção identificada por <code>dir</code>.</p><h3 id="writestreamclearscreendowncallback" tabindex="-1"><code>writeStream.clearScreenDown([callback])</code> <a class="header-anchor" href="#writestreamclearscreendowncallback" aria-label="Permalink to “writeStream.clearScreenDown([callback])”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[Histórico]</p><table tabindex="0"><thead><tr><th>Versão</th><th>Alterações</th></tr></thead><tbody><tr><td>v12.7.0</td><td>O callback write() do stream e o valor de retorno são expostos.</td></tr><tr><td>v0.7.7</td><td>Adicionado em: v0.7.7</td></tr></tbody></table></div><ul><li><code>callback</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function" target="_blank" rel="noreferrer">&lt;Function&gt;</a> Invocado quando a operação é concluída.</li><li>Retorna: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type" target="_blank" rel="noreferrer">&lt;boolean&gt;</a> <code>false</code> se o stream deseja que o código de chamada espere que o evento <code>&#39;drain&#39;</code> seja emitido antes de continuar a gravar dados adicionais; caso contrário, <code>true</code>.</li></ul><p><code>writeStream.clearScreenDown()</code> limpa este <code>WriteStream</code> do cursor atual para baixo.</p><h3 id="writestreamcolumns" tabindex="-1"><code>writeStream.columns</code> <a class="header-anchor" href="#writestreamcolumns" aria-label="Permalink to “writeStream.columns”">​</a></h3><p><strong>Adicionado em: v0.7.7</strong></p><p>Um <code>number</code> especificando o número de colunas que o TTY possui atualmente. Esta propriedade é atualizada sempre que o evento <code>&#39;resize&#39;</code> é emitido.</p><h3 id="writestreamcursortox-y-callback" tabindex="-1"><code>writeStream.cursorTo(x[, y][, callback])</code> <a class="header-anchor" href="#writestreamcursortox-y-callback" aria-label="Permalink to “writeStream.cursorTo(x[, y][, callback])”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[Histórico]</p><table tabindex="0"><thead><tr><th>Versão</th><th>Mudanças</th></tr></thead><tbody><tr><td>v12.7.0</td><td>O callback e o valor de retorno de write() do stream são expostos.</td></tr><tr><td>v0.7.7</td><td>Adicionado em: v0.7.7</td></tr></tbody></table></div><ul><li><code>x</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type" target="_blank" rel="noreferrer">&lt;number&gt;</a></li><li><code>y</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type" target="_blank" rel="noreferrer">&lt;number&gt;</a></li><li><code>callback</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function" target="_blank" rel="noreferrer">&lt;Function&gt;</a> Invocado quando a operação for concluída.</li><li>Retorna: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type" target="_blank" rel="noreferrer">&lt;boolean&gt;</a> <code>false</code> se o stream deseja que o código de chamada espere que o evento <code>&#39;drain&#39;</code> seja emitido antes de continuar a gravar dados adicionais; caso contrário, <code>true</code>.</li></ul><p><code>writeStream.cursorTo()</code> move o cursor deste <code>WriteStream</code> para a posição especificada.</p><h3 id="writestreamgetcolordepthenv" tabindex="-1"><code>writeStream.getColorDepth([env])</code> <a class="header-anchor" href="#writestreamgetcolordepthenv" aria-label="Permalink to “writeStream.getColorDepth([env])”">​</a></h3><p><strong>Adicionado em: v9.9.0</strong></p><ul><li><code>env</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object&gt;</a> Um objeto contendo as variáveis de ambiente para verificar. Isso permite simular o uso de um terminal específico. <strong>Padrão:</strong> <code>process.env</code>.</li><li>Retorna: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type" target="_blank" rel="noreferrer">&lt;number&gt;</a></li></ul><p>Retorna:</p><ul><li><code>1</code> para 2,</li><li><code>4</code> para 16,</li><li><code>8</code> para 256,</li><li><code>24</code> para 16.777.216 cores suportadas.</li></ul><p>Use isso para determinar quais cores o terminal suporta. Devido à natureza das cores nos terminais, é possível ter falsos positivos ou falsos negativos. Depende das informações do processo e das variáveis de ambiente que podem mentir sobre qual terminal está sendo usado. É possível passar um objeto <code>env</code> para simular o uso de um terminal específico. Isso pode ser útil para verificar como configurações de ambiente específicas se comportam.</p><p>Para impor um suporte de cor específico, use uma das configurações de ambiente abaixo.</p><ul><li>2 cores: <code>FORCE_COLOR = 0</code> (Desativa as cores)</li><li>16 cores: <code>FORCE_COLOR = 1</code></li><li>256 cores: <code>FORCE_COLOR = 2</code></li><li>16.777.216 cores: <code>FORCE_COLOR = 3</code></li></ul><p>A desativação do suporte a cores também é possível usando as variáveis de ambiente <code>NO_COLOR</code> e <code>NODE_DISABLE_COLORS</code>.</p><h3 id="writestreamgetwindowsize" tabindex="-1"><code>writeStream.getWindowSize()</code> <a class="header-anchor" href="#writestreamgetwindowsize" aria-label="Permalink to “writeStream.getWindowSize()”">​</a></h3><p><strong>Adicionado em: v0.7.7</strong></p><ul><li>Retorna: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type" target="_blank" rel="noreferrer">&lt;number[]&gt;</a></li></ul><p><code>writeStream.getWindowSize()</code> retorna o tamanho do TTY correspondente a este <code>WriteStream</code>. O array é do tipo <code>[numColumns, numRows]</code> onde <code>numColumns</code> e <code>numRows</code> representam o número de colunas e linhas no TTY correspondente.</p><h3 id="writestreamhascolorscount-env" tabindex="-1"><code>writeStream.hasColors([count][, env])</code> <a class="header-anchor" href="#writestreamhascolorscount-env" aria-label="Permalink to “writeStream.hasColors([count][, env])”">​</a></h3><p><strong>Adicionado em: v11.13.0, v10.16.0</strong></p><ul><li><code>count</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type" target="_blank" rel="noreferrer">&lt;integer&gt;</a> O número de cores solicitadas (mínimo 2). <strong>Padrão:</strong> 16.</li><li><code>env</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object&gt;</a> Um objeto contendo as variáveis de ambiente para verificar. Isso permite simular o uso de um terminal específico. <strong>Padrão:</strong> <code>process.env</code>.</li><li>Retorna: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type" target="_blank" rel="noreferrer">&lt;boolean&gt;</a></li></ul><p>Retorna <code>true</code> se o <code>writeStream</code> suportar pelo menos tantas cores quanto as fornecidas em <code>count</code>. O suporte mínimo é 2 (preto e branco).</p><p>Isso tem os mesmos falsos positivos e negativos descritos em <a href="/pt/nodejs/api/tty#writestreamgetcolordepthenv"><code>writeStream.getColorDepth()</code></a>.</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">process.stdout.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">hasColors</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Retorna true ou false dependendo se \`stdout\` suporta pelo menos 16 cores.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">process.stdout.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">hasColors</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">256</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Retorna true ou false dependendo se \`stdout\` suporta pelo menos 256 cores.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">process.stdout.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">hasColors</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ TMUX: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;1&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> });</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Retorna true.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">process.stdout.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">hasColors</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> **</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 24</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, { TMUX: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;1&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> });</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Retorna false (a configuração do ambiente finge suportar 2 ** 8 cores).</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="writestreamistty" tabindex="-1"><code>writeStream.isTTY</code> <a class="header-anchor" href="#writestreamistty" aria-label="Permalink to “writeStream.isTTY”">​</a></h3><p><strong>Adicionado em: v0.5.8</strong></p><p>Um <code>boolean</code> que é sempre <code>true</code>.</p><h3 id="writestreammovecursordx-dy-callback" tabindex="-1"><code>writeStream.moveCursor(dx, dy[, callback])</code> <a class="header-anchor" href="#writestreammovecursordx-dy-callback" aria-label="Permalink to “writeStream.moveCursor(dx, dy[, callback])”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[Histórico]</p><table tabindex="0"><thead><tr><th>Versão</th><th>Mudanças</th></tr></thead><tbody><tr><td>v12.7.0</td><td>O retorno de chamada e o valor de retorno write() do stream são expostos.</td></tr><tr><td>v0.7.7</td><td>Adicionado em: v0.7.7</td></tr></tbody></table></div><ul><li><code>dx</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type" target="_blank" rel="noreferrer">&lt;number&gt;</a></li><li><code>dy</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type" target="_blank" rel="noreferrer">&lt;number&gt;</a></li><li><code>callback</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function" target="_blank" rel="noreferrer">&lt;Function&gt;</a> Invocado quando a operação for concluída.</li><li>Retorna: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type" target="_blank" rel="noreferrer">&lt;boolean&gt;</a> <code>false</code> se o stream deseja que o código de chamada espere que o evento <code>&#39;drain&#39;</code> seja emitido antes de continuar a gravar dados adicionais; caso contrário, <code>true</code>.</li></ul><p><code>writeStream.moveCursor()</code> move o cursor deste <code>WriteStream</code> <em>relativo</em> à sua posição atual.</p><h3 id="writestreamrows" tabindex="-1"><code>writeStream.rows</code> <a class="header-anchor" href="#writestreamrows" aria-label="Permalink to “writeStream.rows”">​</a></h3><p><strong>Adicionado em: v0.7.7</strong></p><p>Um <code>number</code> especificando o número de linhas que o TTY tem atualmente. Esta propriedade é atualizada sempre que o evento <code>&#39;resize&#39;</code> é emitido.</p><h2 id="ttyisattyfd" tabindex="-1"><code>tty.isatty(fd)</code> <a class="header-anchor" href="#ttyisattyfd" aria-label="Permalink to “tty.isatty(fd)”">​</a></h2><p><strong>Adicionado em: v0.5.8</strong></p><ul><li><code>fd</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type" target="_blank" rel="noreferrer">&lt;number&gt;</a> Um descritor de arquivo numérico</li><li>Retorna: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type" target="_blank" rel="noreferrer">&lt;boolean&gt;</a></li></ul><p>O método <code>tty.isatty()</code> retorna <code>true</code> se o <code>fd</code> fornecido estiver associado a um TTY e <code>false</code> se não estiver, incluindo sempre que <code>fd</code> não for um inteiro não negativo.</p>`,88)])}var s=e(a,[[`render`,o]]);export{i as __pageData,s as default};