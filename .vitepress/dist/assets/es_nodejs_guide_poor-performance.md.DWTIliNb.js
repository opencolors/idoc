import{__plugin_vue_export_helper_default as e,createElementBlock as t,createStaticVNode as n,openBlock as r}from"./chunks/plugin-vue_export-helper.Bts1mPc7.js";const i=JSON.parse(`{"title":"Optimización del rendimiento de Node.js","description":"Aprenda a analizar un proceso de Node.js para identificar cuellos de botella de rendimiento y optimizar el código para una mejor eficiencia y experiencia del usuario.","frontmatter":{"title":"Optimización del rendimiento de Node.js","description":"Aprenda a analizar un proceso de Node.js para identificar cuellos de botella de rendimiento y optimizar el código para una mejor eficiencia y experiencia del usuario.","head":[["meta",{"name":"og:title","content":"Optimización del rendimiento de Node.js | Node.js - iDoc.dev"}],["meta",{"name":"og:description","content":"Aprenda a analizar un proceso de Node.js para identificar cuellos de botella de rendimiento y optimizar el código para una mejor eficiencia y experiencia del usuario."}],["meta",{"name":"twitter:title","content":"Optimización del rendimiento de Node.js | Node.js - iDoc.dev"}],["meta",{"name":"twitter:description","content":"Aprenda a analizar un proceso de Node.js para identificar cuellos de botella de rendimiento y optimizar el código para una mejor eficiencia y experiencia del usuario."}],["link",{"rel":"canonical","href":"https://idoc.dev/es/nodejs/guide/poor-performance"}],["meta",{"property":"og:url","content":"https://idoc.dev/es/nodejs/guide/poor-performance"}]]},"headers":[],"relativePath":"es/nodejs/guide/poor-performance.md","filePath":"es/nodejs/guide/poor-performance.md","lastUpdated":1749464498000}`),a={name:`es/nodejs/guide/poor-performance.md`};function o(e,i,a,o,s,c){return r(),t(`div`,null,i[0]||=[n(`<h1 id="rendimiento-deficiente" tabindex="-1">Rendimiento Deficiente <a class="header-anchor" href="#rendimiento-deficiente" aria-label="Permalink to “Rendimiento Deficiente”">​</a></h1><p>En este documento puedes aprender sobre cómo perfilar un proceso de Node.js.</p><h2 id="mi-aplicacion-tiene-un-rendimiento-deficiente" tabindex="-1">Mi aplicación tiene un rendimiento deficiente <a class="header-anchor" href="#mi-aplicacion-tiene-un-rendimiento-deficiente" aria-label="Permalink to “Mi aplicación tiene un rendimiento deficiente”">​</a></h2><h3 id="sintomas" tabindex="-1">Síntomas <a class="header-anchor" href="#sintomas" aria-label="Permalink to “Síntomas”">​</a></h3><p>La latencia de mi aplicación es alta y ya he confirmado que el cuello de botella no son mis dependencias, como bases de datos y servicios descendentes. Por lo tanto, sospecho que mi aplicación dedica un tiempo considerable a ejecutar código o procesar información.</p><p>Estás satisfecho con el rendimiento general de tu aplicación, pero te gustaría entender qué parte de nuestra aplicación se puede mejorar para que se ejecute más rápido o de forma más eficiente. Puede ser útil cuando queremos mejorar la experiencia del usuario o ahorrar costes de computación.</p><h3 id="depuracion" tabindex="-1">Depuración <a class="header-anchor" href="#depuracion" aria-label="Permalink to “Depuración”">​</a></h3><p>En este caso de uso, estamos interesados en las partes del código que utilizan más ciclos de CPU que las demás. Cuando hacemos esto localmente, normalmente intentamos optimizar nuestro código. <a href="/es/nodejs/guide/profiling-nodejs-applications">Usar el V8 Sampling Profiler</a> puede ayudarnos a hacerlo.</p>`,8)])}var s=e(a,[[`render`,o]]);export{i as __pageData,s as default};