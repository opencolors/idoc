import{__plugin_vue_export_helper_default as e,createElementBlock as t,createStaticVNode as n,openBlock as r}from"./chunks/plugin-vue_export-helper.Bts1mPc7.js";const i=JSON.parse(`{"title":"ECMAScript 2015 (ES6) وما بعده في Node.js","description":"يدعم Node.js ميزات ECMAScript الحديثة من خلال محرك V8، مع إضافة ميزات وتحسينات جديدة في الوقت المناسب.","frontmatter":{"title":"ECMAScript 2015 (ES6) وما بعده في Node.js","description":"يدعم Node.js ميزات ECMAScript الحديثة من خلال محرك V8، مع إضافة ميزات وتحسينات جديدة في الوقت المناسب.","head":[["meta",{"name":"og:title","content":"ECMAScript 2015 (ES6) وما بعده في Node.js | Node.js - iDoc.dev"}],["meta",{"name":"og:description","content":"يدعم Node.js ميزات ECMAScript الحديثة من خلال محرك V8، مع إضافة ميزات وتحسينات جديدة في الوقت المناسب."}],["meta",{"name":"twitter:title","content":"ECMAScript 2015 (ES6) وما بعده في Node.js | Node.js - iDoc.dev"}],["meta",{"name":"twitter:description","content":"يدعم Node.js ميزات ECMAScript الحديثة من خلال محرك V8، مع إضافة ميزات وتحسينات جديدة في الوقت المناسب."}],["link",{"rel":"canonical","href":"https://idoc.dev/ar/nodejs/guide/ECMAScript-2015(ES6)-and-beyond"}],["meta",{"property":"og:url","content":"https://idoc.dev/ar/nodejs/guide/ECMAScript-2015(ES6)-and-beyond"}]]},"headers":[],"relativePath":"ar/nodejs/guide/ECMAScript-2015(ES6)-and-beyond.md","filePath":"ar/nodejs/guide/ECMAScript-2015(ES6)-and-beyond.md","lastUpdated":1749464498000}`),a={name:`ar/nodejs/guide/ECMAScript-2015(ES6)-and-beyond.md`};function o(e,i,a,o,s,c){return r(),t(`div`,null,i[0]||=[n(`<h1 id="إي-سي-إم-ايه-سكريبت-2015-es6-وما-بعدها" tabindex="-1">إي سي إم ايه سكريبت 2015 (ES6) وما بعدها <a class="header-anchor" href="#إي-سي-إم-ايه-سكريبت-2015-es6-وما-بعدها" aria-label="Permalink to “إي سي إم ايه سكريبت 2015 (ES6) وما بعدها”">​</a></h1><p>تم بناء Node.js على أحدث إصدارات <a href="https://v8.dev/" target="_blank" rel="noreferrer">V8</a>. من خلال مواكبة أحدث إصدارات هذا المحرك، نضمن تقديم ميزات جديدة من <a href="https://tc39.es/ecma262/" target="_blank" rel="noreferrer">مواصفات JavaScript ECMA-262</a> لمطوري Node.js في الوقت المناسب، بالإضافة إلى تحسينات مستمرة في الأداء والاستقرار.</p><p>يتم تقسيم جميع ميزات ECMAScript 2015 (ES6) إلى ثلاث مجموعات للميزات <code>المتاحة</code> و<code>المرحلية</code> و<code>قيد التقدم</code>:</p><ul><li>جميع الميزات <code>المتاحة</code>، التي يعتبرها V8 مستقرة، يتم <code>تشغيلها افتراضيًا على Node.js</code> و<code>لا</code> تتطلب أي نوع من علامات وقت التشغيل.</li><li>تتطلب الميزات <code>المرحلية</code>، وهي ميزات شبه مكتملة لا يعتبرها فريق V8 مستقرة، علامة وقت التشغيل: <code>--harmony</code>.</li><li>يمكن تنشيط الميزات <code>قيد التقدم</code> بشكل فردي عن طريق علامة التوافق الخاصة بها، على الرغم من أن هذا الأمر غير مستحسن بشدة إلا لأغراض الاختبار. ملاحظة: يتم عرض هذه العلامات بواسطة V8 ومن المحتمل أن تتغير دون أي إشعار بالتقادم.</li></ul><h2 id="ما-هي-الميزات-التي-يتم-شحنها-مع-أي-إصدار-من-node-js-افتراضيًا؟" tabindex="-1">ما هي الميزات التي يتم شحنها مع أي إصدار من Node.js افتراضيًا؟ <a class="header-anchor" href="#ما-هي-الميزات-التي-يتم-شحنها-مع-أي-إصدار-من-node-js-افتراضيًا؟" aria-label="Permalink to “ما هي الميزات التي يتم شحنها مع أي إصدار من Node.js افتراضيًا؟”">​</a></h2><p>يوفر موقع الويب <a href="https://node.green" target="_blank" rel="noreferrer">node.green</a> نظرة عامة ممتازة على ميزات ECMAScript المدعومة في إصدارات مختلفة من Node.js، استنادًا إلى جدول توافق kangax.</p><h2 id="ما-هي-الميزات-قيد-التقدم؟" tabindex="-1">ما هي الميزات قيد التقدم؟ <a class="header-anchor" href="#ما-هي-الميزات-قيد-التقدم؟" aria-label="Permalink to “ما هي الميزات قيد التقدم؟”">​</a></h2><p>تتم إضافة ميزات جديدة باستمرار إلى محرك V8. بشكل عام، توقع وصولها إلى إصدار مستقبلي من Node.js، على الرغم من أن التوقيت غير معروف.</p><p>يمكنك سرد جميع الميزات قيد التقدم المتوفرة في كل إصدار من Node.js عن طريق البحث في وسيطة <code>--v8-options</code>. يرجى ملاحظة أن هذه الميزات غير مكتملة وربما معطلة في V8، لذا استخدمها على مسؤوليتك الخاصة:</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">node</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --v8-options</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> grep</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;in progress&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="لديّ-بنية-تحتية-مُعدة-للاستفادة-من-علامة-harmony-هل-يجب-عليّ-إزالتها؟" tabindex="-1">لديّ بنية تحتية مُعدة للاستفادة من علامة --harmony. هل يجب عليّ إزالتها؟ <a class="header-anchor" href="#لديّ-بنية-تحتية-مُعدة-للاستفادة-من-علامة-harmony-هل-يجب-عليّ-إزالتها؟" aria-label="Permalink to “لديّ بنية تحتية مُعدة للاستفادة من علامة --harmony. هل يجب عليّ إزالتها؟”">​</a></h2><p>السلوك الحالي لعلامة <code>--harmony</code> على Node.js هو تمكين الميزات <code>المرحلية</code> فقط. بعد كل شيء، هي الآن مرادف لـ <code>--es_staging</code>. كما ذكرنا أعلاه، هذه هي الميزات المكتملة التي لم تعتبر مستقرة بعد. إذا كنت تريد اللعب بأمان، خاصة في بيئات الإنتاج، ففكر في إزالة علامة وقت التشغيل هذه حتى يتم شحنها افتراضيًا على V8، وبالتالي، على Node.js. إذا أبقيت هذا الخيار مفعلاً، فيجب أن تكون مستعدًا لأن تتسبب ترقيات Node.js الإضافية في تعطيل التعليمات البرمجية الخاصة بك إذا قام V8 بتغيير دلالاته ليتبع المعيار بشكل أوثق.</p><h2 id="كيف-يمكنني-معرفة-إصدار-v8-الذي-يأتي-مع-إصدار-معين-من-node-js؟" tabindex="-1">كيف يمكنني معرفة إصدار V8 الذي يأتي مع إصدار معين من Node.js؟ <a class="header-anchor" href="#كيف-يمكنني-معرفة-إصدار-v8-الذي-يأتي-مع-إصدار-معين-من-node-js؟" aria-label="Permalink to “كيف يمكنني معرفة إصدار V8 الذي يأتي مع إصدار معين من Node.js؟”">​</a></h2><p>يوفر Node.js طريقة بسيطة لسرد جميع التبعيات والإصدارات الخاصة بها التي تأتي مع ثنائي معين من خلال الكائن العام <code>process</code>. في حالة محرك V8، اكتب ما يلي في جهازك الطرفي لاسترداد إصداره:</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">node</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> process.versions.v8</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div>`,15)])}var s=e(a,[[`render`,o]]);export{i as __pageData,s as default};