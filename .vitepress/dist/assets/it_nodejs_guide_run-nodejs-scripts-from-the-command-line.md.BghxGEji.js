import{__plugin_vue_export_helper_default as e,createElementBlock as t,createStaticVNode as n,openBlock as r}from"./chunks/plugin-vue_export-helper.Bts1mPc7.js";const i=JSON.parse(`{"title":"Eseguire script Node.js dalla riga di comando","description":"Scopri come eseguire programmi Node.js dalla riga di comando, inclusa l'utilizzo del comando node, le linee shebang, i permessi di esecuzione, la trasmissione di stringhe come argomenti e il riavvio automatico dell'applicazione.","frontmatter":{"title":"Eseguire script Node.js dalla riga di comando","description":"Scopri come eseguire programmi Node.js dalla riga di comando, inclusa l'utilizzo del comando node, le linee shebang, i permessi di esecuzione, la trasmissione di stringhe come argomenti e il riavvio automatico dell'applicazione.","head":[["meta",{"name":"og:title","content":"Eseguire script Node.js dalla riga di comando | Node.js - iDoc.dev"}],["meta",{"name":"og:description","content":"Scopri come eseguire programmi Node.js dalla riga di comando, inclusa l'utilizzo del comando node, le linee shebang, i permessi di esecuzione, la trasmissione di stringhe come argomenti e il riavvio automatico dell'applicazione."}],["meta",{"name":"twitter:title","content":"Eseguire script Node.js dalla riga di comando | Node.js - iDoc.dev"}],["meta",{"name":"twitter:description","content":"Scopri come eseguire programmi Node.js dalla riga di comando, inclusa l'utilizzo del comando node, le linee shebang, i permessi di esecuzione, la trasmissione di stringhe come argomenti e il riavvio automatico dell'applicazione."}],["link",{"rel":"canonical","href":"https://idoc.dev/it/nodejs/guide/run-nodejs-scripts-from-the-command-line"}],["meta",{"property":"og:url","content":"https://idoc.dev/it/nodejs/guide/run-nodejs-scripts-from-the-command-line"}]]},"headers":[],"relativePath":"it/nodejs/guide/run-nodejs-scripts-from-the-command-line.md","filePath":"it/nodejs/guide/run-nodejs-scripts-from-the-command-line.md","lastUpdated":1749464498000}`),a={name:`it/nodejs/guide/run-nodejs-scripts-from-the-command-line.md`};function o(e,i,a,o,s,c){return r(),t(`div`,null,i[0]||=[n(`<h1 id="esecuzione-di-script-node-js-dalla-riga-di-comando" tabindex="-1">Esecuzione di script Node.js dalla riga di comando <a class="header-anchor" href="#esecuzione-di-script-node-js-dalla-riga-di-comando" aria-label="Permalink to “Esecuzione di script Node.js dalla riga di comando”">​</a></h1><p>Il modo consueto per eseguire un programma Node.js è eseguire il comando <code>node</code> disponibile globalmente (una volta installato Node.js) e passare il nome del file che si desidera eseguire.</p><p>Se il file principale dell&#39;applicazione Node.js è <code>app.js</code>, è possibile chiamarlo digitando:</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">node</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> app.js</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Sopra, si sta dicendo esplicitamente alla shell di eseguire lo script con <code>node</code>. È anche possibile incorporare queste informazioni nel file JavaScript con una riga &quot;shebang&quot;. Lo &quot;shebang&quot; è la prima riga del file e indica al sistema operativo quale interprete utilizzare per l&#39;esecuzione dello script. Di seguito è riportata la prima riga di JavaScript:</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#!/usr/bin/node</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Sopra, stiamo fornendo esplicitamente il percorso assoluto dell&#39;interprete. Non tutti i sistemi operativi hanno <code>node</code> nella cartella <code>bin</code>, ma tutti dovrebbero avere <code>env</code>. Puoi dire al sistema operativo di eseguire <code>env</code> con <code>node</code> come parametro:</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#!/usr/bin/env node</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// your javascript code</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="per-utilizzare-uno-shebang-il-file-deve-avere-il-permesso-di-esecuzione" tabindex="-1">Per utilizzare uno shebang, il file deve avere il permesso di esecuzione. <a class="header-anchor" href="#per-utilizzare-uno-shebang-il-file-deve-avere-il-permesso-di-esecuzione" aria-label="Permalink to “Per utilizzare uno shebang, il file deve avere il permesso di esecuzione.”">​</a></h2><p>È possibile concedere a <code>app.js</code> il permesso di esecuzione eseguendo:</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">chmod</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> u+x</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> app.js</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Durante l&#39;esecuzione del comando, assicurati di trovarti nella stessa directory che contiene il file <code>app.js</code>.</p><h2 id="passa-una-stringa-come-argomento-a-node-invece-del-percorso-del-file" tabindex="-1">Passa una stringa come argomento a node invece del percorso del file <a class="header-anchor" href="#passa-una-stringa-come-argomento-a-node-invece-del-percorso-del-file" aria-label="Permalink to “Passa una stringa come argomento a node invece del percorso del file”">​</a></h2><p>Per eseguire una stringa come argomento, è possibile utilizzare <code>-e</code>, <code>--eval &quot;script&quot;</code>. Valuta il seguente argomento come JavaScript. I moduli predefiniti in REPL possono essere utilizzati anche nello script. Su Windows, utilizzando <code>cmd.exe</code>, un singolo apice non funzionerà correttamente perché riconosce solo le virgolette doppie <code>&quot;</code> per la citazione. In Powershell o Git bash, sia <code>&quot;</code> che <code>&#39;</code> sono utilizzabili.</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">node</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;console.log(123)&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="riavvia-automaticamente-l-applicazione" tabindex="-1">Riavvia automaticamente l&#39;applicazione <a class="header-anchor" href="#riavvia-automaticamente-l-applicazione" aria-label="Permalink to “Riavvia automaticamente l&#39;applicazione”">​</a></h2><p>A partire da nodejs V 16, è presente un&#39;opzione integrata per riavviare automaticamente l&#39;applicazione quando un file cambia. Questo è utile per scopi di sviluppo. Per utilizzare questa funzione, è necessario passare il flag <code>watch</code> a nodejs.</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">node</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --watch</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> app.js</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Quindi, quando si modifica il file, l&#39;applicazione si riavvierà automaticamente. Leggi la documentazione del flag --watch <a href="https://nodejs.org/api/cli.html#--watch" target="_blank" rel="noreferrer">/api/cli#watch</a>.</p>`,19)])}var s=e(a,[[`render`,o]]);export{i as __pageData,s as default};