import{__plugin_vue_export_helper_default as e,createElementBlock as t,createStaticVNode as n,openBlock as r}from"./chunks/plugin-vue_export-helper.Bts1mPc7.js";const i=JSON.parse(`{"title":"Cómo leer variables de entorno en Node.js","description":"Aprenda a acceder a las variables de entorno en Node.js utilizando la propiedad process.env y archivos .env.","frontmatter":{"title":"Cómo leer variables de entorno en Node.js","description":"Aprenda a acceder a las variables de entorno en Node.js utilizando la propiedad process.env y archivos .env.","head":[["meta",{"name":"og:title","content":"Cómo leer variables de entorno en Node.js | Node.js - iDoc.dev"}],["meta",{"name":"og:description","content":"Aprenda a acceder a las variables de entorno en Node.js utilizando la propiedad process.env y archivos .env."}],["meta",{"name":"twitter:title","content":"Cómo leer variables de entorno en Node.js | Node.js - iDoc.dev"}],["meta",{"name":"twitter:description","content":"Aprenda a acceder a las variables de entorno en Node.js utilizando la propiedad process.env y archivos .env."}],["link",{"rel":"canonical","href":"https://idoc.dev/es/nodejs/guide/how-to-read-environment-variables-from-nodejs"}],["meta",{"property":"og:url","content":"https://idoc.dev/es/nodejs/guide/how-to-read-environment-variables-from-nodejs"}]]},"headers":[],"relativePath":"es/nodejs/guide/how-to-read-environment-variables-from-nodejs.md","filePath":"es/nodejs/guide/how-to-read-environment-variables-from-nodejs.md","lastUpdated":null}`),a={name:`es/nodejs/guide/how-to-read-environment-variables-from-nodejs.md`};function o(e,i,a,o,s,c){return r(),t(`div`,null,i[0]||=[n(`<h1 id="como-leer-variables-de-entorno-desde-node-js" tabindex="-1">Cómo leer variables de entorno desde Node.js <a class="header-anchor" href="#como-leer-variables-de-entorno-desde-node-js" aria-label="Permalink to “Cómo leer variables de entorno desde Node.js”">​</a></h1><p>El módulo central <code>process</code> de Node.js proporciona la propiedad <code>env</code> que alberga todas las variables de entorno que se establecieron en el momento en que se inició el proceso.</p><p>El siguiente código ejecuta <code>app.js</code> y establece <code>USER_ID</code> y <code>USER_KEY</code>.</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">USER_ID</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">239482</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> USER_KEY</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">foobar</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> node</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> app.js</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Eso pasará el usuario <code>USER_ID</code> como 239482 y la <code>USER_KEY</code> como foobar. Esto es adecuado para pruebas, sin embargo, para producción, probablemente estará configurando algunos scripts bash para exportar variables.</p><div class="tip custom-block"><p class="custom-block-title">NOTA</p><p><code>process</code> no requiere un <code>&quot;require&quot;</code>, está disponible automáticamente.</p></div><p>Aquí hay un ejemplo que accede a las variables de entorno <code>USER_ID</code> y <code>USER_KEY</code>, que establecimos en el código anterior.</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">process.env.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">USER_ID</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &quot;239482</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">process.env.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">USER_KEY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &quot;foobar</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>De la misma manera, puede acceder a cualquier variable de entorno personalizada que establezca. Node.js 20 introdujo soporte experimental para <a href="/es/nodejs/api/cli#env-file-config">archivos .env</a>.</p><p>Ahora, puede usar la bandera <code>--env-file</code> para especificar un archivo de entorno al ejecutar su aplicación Node.js. Aquí hay un ejemplo de archivo <code>.env</code> y cómo acceder a sus variables usando <code>process.env</code>.</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.env</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> archivo</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">PORT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">3000</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>En su archivo js</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">process.env.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PORT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 3000</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Ejecute el archivo <code>app.js</code> con las variables de entorno establecidas en el archivo <code>.env</code>.</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">node </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">env</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">file</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.env app.js</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Este comando carga todas las variables de entorno del archivo <code>.env</code>, haciéndolas disponibles para la aplicación en <code>process.env</code>. Además, puede pasar múltiples argumentos --env-file. Los archivos posteriores sobrescriben las variables preexistentes definidas en archivos anteriores.</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">node</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --env-file=.env</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --env-file=.development.env</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> app.js</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="tip custom-block"><p class="custom-block-title">NOTA</p><p>si la misma variable se define en el entorno y en el archivo, el valor del entorno tiene prioridad.</p></div>`,18)])}var s=e(a,[[`render`,o]]);export{i as __pageData,s as default};