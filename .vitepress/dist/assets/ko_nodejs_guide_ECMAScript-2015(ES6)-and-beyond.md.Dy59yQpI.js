import{__plugin_vue_export_helper_default as e,createElementBlock as t,createStaticVNode as n,openBlock as r}from"./chunks/plugin-vue_export-helper.Bts1mPc7.js";const i=JSON.parse(`{"title":"Node.js의 ECMAScript 2015(ES6) 및 이후","description":"Node.js는 V8 엔진을 통해 최신 ECMAScript 기능을 지원하며, 새로운 기능 및 개선 사항이 적시에 반영됩니다.","frontmatter":{"title":"Node.js의 ECMAScript 2015(ES6) 및 이후","description":"Node.js는 V8 엔진을 통해 최신 ECMAScript 기능을 지원하며, 새로운 기능 및 개선 사항이 적시에 반영됩니다.","head":[["meta",{"name":"og:title","content":"Node.js의 ECMAScript 2015(ES6) 및 이후 | Node.js - iDoc.dev"}],["meta",{"name":"og:description","content":"Node.js는 V8 엔진을 통해 최신 ECMAScript 기능을 지원하며, 새로운 기능 및 개선 사항이 적시에 반영됩니다."}],["meta",{"name":"twitter:title","content":"Node.js의 ECMAScript 2015(ES6) 및 이후 | Node.js - iDoc.dev"}],["meta",{"name":"twitter:description","content":"Node.js는 V8 엔진을 통해 최신 ECMAScript 기능을 지원하며, 새로운 기능 및 개선 사항이 적시에 반영됩니다."}],["link",{"rel":"canonical","href":"https://idoc.dev/ko/nodejs/guide/ECMAScript-2015(ES6)-and-beyond"}],["meta",{"property":"og:url","content":"https://idoc.dev/ko/nodejs/guide/ECMAScript-2015(ES6)-and-beyond"}]]},"headers":[],"relativePath":"ko/nodejs/guide/ECMAScript-2015(ES6)-and-beyond.md","filePath":"ko/nodejs/guide/ECMAScript-2015(ES6)-and-beyond.md","lastUpdated":1749464498000}`),a={name:`ko/nodejs/guide/ECMAScript-2015(ES6)-and-beyond.md`};function o(e,i,a,o,s,c){return r(),t(`div`,null,i[0]||=[n(`<h1 id="ecmascript-2015-es6-이상" tabindex="-1">ECMAScript 2015 (ES6) 이상 <a class="header-anchor" href="#ecmascript-2015-es6-이상" aria-label="Permalink to “ECMAScript 2015 (ES6) 이상”">​</a></h1><p>Node.js는 최신 버전의 <a href="https://v8.dev/" target="_blank" rel="noreferrer">V8</a>을 기반으로 빌드됩니다. 이 엔진의 최신 릴리스를 최신 상태로 유지함으로써 <a href="https://tc39.es/ecma262/" target="_blank" rel="noreferrer">JavaScript ECMA-262 사양</a>의 새로운 기능이 Node.js 개발자에게 적시에 제공되도록 하고 지속적인 성능 및 안정성 향상을 보장합니다.</p><p>모든 ECMAScript 2015 (ES6) 기능은 <code>shipping</code>, <code>staged</code> 및 <code>in progress</code> 기능의 세 그룹으로 나뉩니다.</p><ul><li>V8에서 안정적이라고 간주하는 모든 <code>shipping</code> 기능은 <code>Node.js에서 기본적으로 활성화</code>되며 런타임 플래그가 필요 <code>없습니다</code>.</li><li><code>Staged</code> 기능은 거의 완료되었지만 V8 팀에서 안정적이라고 간주하지 않는 기능으로 런타임 플래그 <code>--harmony</code>가 필요합니다.</li><li><code>In progress</code> 기능은 해당 harmony 플래그로 개별적으로 활성화할 수 있지만 테스트 목적이 아닌 경우에는 권장하지 않습니다. 참고: 이러한 플래그는 V8에서 노출되며 더 이상 사용되지 않는다는 알림 없이 변경될 수 있습니다.</li></ul><h2 id="어떤-기능이-기본적으로-node-js-버전과-함께-제공되나요" tabindex="-1">어떤 기능이 기본적으로 Node.js 버전과 함께 제공되나요? <a class="header-anchor" href="#어떤-기능이-기본적으로-node-js-버전과-함께-제공되나요" aria-label="Permalink to “어떤 기능이 기본적으로 Node.js 버전과 함께 제공되나요?”">​</a></h2><p>웹사이트 <a href="https://node.green" target="_blank" rel="noreferrer">node.green</a>은 kangax의 compat-table을 기반으로 다양한 버전의 Node.js에서 지원되는 ECMAScript 기능에 대한 훌륭한 개요를 제공합니다.</p><h2 id="어떤-기능이-진행-중인가요" tabindex="-1">어떤 기능이 진행 중인가요? <a class="header-anchor" href="#어떤-기능이-진행-중인가요" aria-label="Permalink to “어떤 기능이 진행 중인가요?”">​</a></h2><p>새로운 기능은 V8 엔진에 지속적으로 추가되고 있습니다. 일반적으로 타이밍은 알 수 없지만 향후 Node.js 릴리스에 포함될 것으로 예상할 수 있습니다.</p><p><code>--v8-options</code> 인수를 통해 각 Node.js 릴리스에서 사용할 수 있는 모든 진행 중인 기능을 나열할 수 있습니다. 이는 V8의 불완전하고 잠재적으로 손상된 기능이므로 자신의 책임하에 사용하십시오.</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">node</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --v8-options</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> grep</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;in progress&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="harmony-플래그를-활용하도록-인프라를-설정했습니다-제거해야-하나요" tabindex="-1"><code>--harmony</code> 플래그를 활용하도록 인프라를 설정했습니다. 제거해야 하나요? <a class="header-anchor" href="#harmony-플래그를-활용하도록-인프라를-설정했습니다-제거해야-하나요" aria-label="Permalink to “--harmony 플래그를 활용하도록 인프라를 설정했습니다. 제거해야 하나요?”">​</a></h2><p>Node.js에서 <code>--harmony</code> 플래그의 현재 동작은 <code>staged</code> 기능만 활성화하는 것입니다. 결국 이제 <code>--es_staging</code>의 동의어입니다. 위에서 언급했듯이 이는 아직 안정적이라고 간주되지 않은 완료된 기능입니다. 특히 프로덕션 환경에서 안전하게 플레이하려면 V8과 결과적으로 Node.js에서 기본적으로 제공될 때까지 이 런타임 플래그를 제거하는 것을 고려하십시오. 이 기능을 활성화 상태로 유지하면 V8이 표준을 더 긴밀하게 준수하도록 의미 체계를 변경하는 경우 추가 Node.js 업그레이드로 인해 코드가 중단될 수 있습니다.</p><h2 id="특정-node-js-버전에-포함된-v8-버전을-어떻게-찾나요" tabindex="-1">특정 Node.js 버전에 포함된 V8 버전을 어떻게 찾나요? <a class="header-anchor" href="#특정-node-js-버전에-포함된-v8-버전을-어떻게-찾나요" aria-label="Permalink to “특정 Node.js 버전에 포함된 V8 버전을 어떻게 찾나요?”">​</a></h2><p>Node.js는 <code>process</code> 전역 객체를 통해 특정 바이너리에 포함된 모든 종속성 및 해당 버전을 나열하는 간단한 방법을 제공합니다. V8 엔진의 경우, 터미널에서 다음을 입력하여 해당 버전을 검색하십시오.</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">node</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> process.versions.v8</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div>`,15)])}var s=e(a,[[`render`,o]]);export{i as __pageData,s as default};