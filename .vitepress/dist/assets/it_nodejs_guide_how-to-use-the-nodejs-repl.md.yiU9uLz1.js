import{__plugin_vue_export_helper_default as e,createElementBlock as t,createStaticVNode as n,openBlock as r}from"./chunks/plugin-vue_export-helper.Bts1mPc7.js";const i=JSON.parse(`{"title":"Come utilizzare il REPL di Node.js","description":"Scopri come utilizzare il REPL di Node.js per testare rapidamente codice JavaScript semplice ed esplorare le sue funzionalità, tra cui modalità multiriga, variabili speciali e comandi punto.","frontmatter":{"title":"Come utilizzare il REPL di Node.js","description":"Scopri come utilizzare il REPL di Node.js per testare rapidamente codice JavaScript semplice ed esplorare le sue funzionalità, tra cui modalità multiriga, variabili speciali e comandi punto.","head":[["meta",{"name":"og:title","content":"Come utilizzare il REPL di Node.js | Node.js - iDoc.dev"}],["meta",{"name":"og:description","content":"Scopri come utilizzare il REPL di Node.js per testare rapidamente codice JavaScript semplice ed esplorare le sue funzionalità, tra cui modalità multiriga, variabili speciali e comandi punto."}],["meta",{"name":"twitter:title","content":"Come utilizzare il REPL di Node.js | Node.js - iDoc.dev"}],["meta",{"name":"twitter:description","content":"Scopri come utilizzare il REPL di Node.js per testare rapidamente codice JavaScript semplice ed esplorare le sue funzionalità, tra cui modalità multiriga, variabili speciali e comandi punto."}],["link",{"rel":"canonical","href":"https://idoc.dev/it/nodejs/guide/how-to-use-the-nodejs-repl"}],["meta",{"property":"og:url","content":"https://idoc.dev/it/nodejs/guide/how-to-use-the-nodejs-repl"}]]},"headers":[],"relativePath":"it/nodejs/guide/how-to-use-the-nodejs-repl.md","filePath":"it/nodejs/guide/how-to-use-the-nodejs-repl.md","lastUpdated":null}`),a={name:`it/nodejs/guide/how-to-use-the-nodejs-repl.md`};function o(e,i,a,o,s,c){return r(),t(`div`,null,i[0]||=[n(`<h1 id="come-usare-il-repl-di-node-js" tabindex="-1">Come usare il REPL di Node.js <a class="header-anchor" href="#come-usare-il-repl-di-node-js" aria-label="Permalink to “Come usare il REPL di Node.js”">​</a></h1><p>Il comando <code>node</code> è quello che usiamo per eseguire i nostri script Node.js:</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">node</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> script.js</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Se eseguiamo il comando <code>node</code> senza nessuno script da eseguire o senza argomenti, avviamo una sessione REPL:</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">node</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="tip custom-block"><p class="custom-block-title">NOTA</p><p>REPL sta per Read Evaluate Print Loop (Leggi, Valuta, Stampa, Ripeti), ed è un ambiente di linguaggio di programmazione (fondamentalmente una finestra di console) che prende una singola espressione come input dell&#39;utente e restituisce il risultato alla console dopo l&#39;esecuzione. La sessione REPL fornisce un modo conveniente per testare rapidamente codice JavaScript semplice.</p></div><p>Se lo provi ora nel tuo terminale, ecco cosa succede:</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> node</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>Il comando rimane in modalità inattiva e aspetta che inseriamo qualcosa.</p><div class="tip custom-block"><p class="custom-block-title custom-block-title-default">TIP</p><p>se non sei sicuro di come aprire il tuo terminale, cerca su Google &quot;Come aprire il terminale su tuo-sistema-operativo&quot;.</p></div><p>Il REPL sta aspettando che inseriamo codice JavaScript, per essere più precisi.</p><p>Inizia in modo semplice e inserisci:</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> console.log(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&#39;test&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">test</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">undefined</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>Il primo valore, <code>test</code>, è l&#39;output che abbiamo detto alla console di stampare, poi otteniamo <code>undefined</code> che è il valore di ritorno dell&#39;esecuzione di <code>console.log()</code>. Node ha letto questa riga di codice, l&#39;ha valutata, ha stampato il risultato e poi è tornato ad aspettare altre righe di codice. Node ripeterà questi tre passaggi per ogni pezzo di codice che eseguiamo nel REPL fino a quando non usciamo dalla sessione. È da lì che il REPL ha preso il suo nome.</p><p>Node stampa automaticamente il risultato di qualsiasi riga di codice JavaScript senza la necessità di istruirlo a farlo. Ad esempio, digita la riga seguente e premi invio:</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 5</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">=5</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>Nota la differenza negli output delle due righe sopra. Il REPL di Node ha stampato <code>undefined</code> dopo aver eseguito <code>console.log()</code>, mentre d&#39;altra parte, ha semplicemente stampato il risultato di <code>5== &#39;5&#39;</code>. Devi tenere presente che la prima è solo una dichiarazione in JavaScript e la seconda è un&#39;espressione.</p><p>In alcuni casi, il codice che vuoi testare potrebbe aver bisogno di più righe. Ad esempio, supponiamo che tu voglia definire una funzione che genera un numero casuale, nella sessione REPL digita la riga seguente e premi invio:</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> generateRandom</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">...</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>Il REPL di Node è abbastanza intelligente da determinare che non hai ancora finito di scrivere il tuo codice ed entrerà in modalità multi-linea per permetterti di digitare più codice. Ora termina la definizione della tua funzione e premi invio:</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> generateRandom</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">...</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">return</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Math</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">random</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="la-variabile-speciale" tabindex="-1">La variabile speciale: <a class="header-anchor" href="#la-variabile-speciale" aria-label="Permalink to “La variabile speciale:”">​</a></h3><p>Se dopo un po&#39; di codice digiti <code>_</code>, questo stamperà il risultato dell&#39;ultima operazione.</p><h3 id="il-tasto-freccia-su" tabindex="-1">Il tasto freccia su: <a class="header-anchor" href="#il-tasto-freccia-su" aria-label="Permalink to “Il tasto freccia su:”">​</a></h3><p>Se premi il tasto freccia su, avrai accesso alla cronologia delle righe di codice precedenti eseguite nella sessione REPL corrente, e anche nelle sessioni precedenti.</p><h2 id="comandi-con-il-punto" tabindex="-1">Comandi con il punto <a class="header-anchor" href="#comandi-con-il-punto" aria-label="Permalink to “Comandi con il punto”">​</a></h2><p>La REPL ha alcuni comandi speciali, tutti inizianti con un punto <code>.</code>. Sono:</p><ul><li><code>.help</code>: mostra l&#39;aiuto dei comandi con il punto.</li><li><code>.editor</code>: abilita la modalità editor, per scrivere facilmente codice JavaScript multilinea. Una volta che sei in questa modalità, digita <code>ctrl-D</code> per eseguire il codice che hai scritto.</li><li><code>.break</code>: quando si inserisce un&#39;espressione multilinea, inserire il comando <code>.break</code> interromperà ulteriori input. Come premere <code>ctrl-C</code>.</li><li><code>.clear</code>: reimposta il contesto della REPL a un oggetto vuoto e cancella qualsiasi espressione multilinea attualmente in fase di inserimento.</li><li><code>.1oad</code>: carica un file JavaScript, relativo alla directory di lavoro corrente.</li><li><code>.save</code>: salva tutto ciò che hai inserito nella sessione REPL in un file (specifica il nome del file).</li><li><code>.exit</code>: esce dalla REPL (come premere <code>ctrl-C</code> due volte).</li></ul><p>La REPL sa quando stai digitando un&#39;istruzione multilinea senza la necessità di invocare <code>.editor</code>. Ad esempio, se inizi a digitare un&#39;iterazione come questa:</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">].</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">foxEach</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">num</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>e premi invio, la REPL andrà a una nuova riga che inizia con 3 punti, indicando che ora puoi continuare a lavorare su quel blocco.</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.. console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (num)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">..}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>Se digiti <code>.break</code> alla fine di una riga, la modalità multilinea si interromperà e l&#39;istruzione non verrà eseguita.</p><h2 id="esegui-la-repl-da-un-file-javascript" tabindex="-1">Esegui la REPL da un file JavaScript <a class="header-anchor" href="#esegui-la-repl-da-un-file-javascript" aria-label="Permalink to “Esegui la REPL da un file JavaScript”">​</a></h2><p>Possiamo importare la REPL in un file JavaScript usando <code>repl</code>.</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> repl</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;node:repl&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Usando la variabile <code>repl</code> possiamo eseguire varie operazioni. Per avviare il prompt dei comandi REPL, digita la seguente riga:</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">repl.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Esegui il file nella riga di comando.</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">node</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> repl.js</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Puoi passare una stringa che mostra quando la REPL si avvia. Il valore predefinito è &#39;&gt;&#39; (con uno spazio finale), ma possiamo definire un prompt personalizzato.</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// un prompt in stile Unix</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> local</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> repl.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;$ &#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>Puoi visualizzare un messaggio quando esci dalla REPL</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">local.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;exit&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;uscita dalla repl&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  process.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">exit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>Puoi leggere di più sul modulo REPL nella <a href="/it/nodejs/api/repl">documentazione repl</a>.</p>`,45)])}var s=e(a,[[`render`,o]]);export{i as __pageData,s as default};