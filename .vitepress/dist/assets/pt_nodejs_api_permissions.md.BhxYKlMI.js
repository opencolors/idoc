import{__plugin_vue_export_helper_default as e,createElementBlock as t,createStaticVNode as n,openBlock as r}from"./chunks/plugin-vue_export-helper.Bts1mPc7.js";const i=JSON.parse(`{"title":"API de Permissões do Node.js","description":"A documentação da API de Permissões do Node.js detalha como gerenciar e controlar permissões para várias operações dentro de aplicações Node.js, garantindo um acesso seguro e controlado aos recursos do sistema.","frontmatter":{"title":"API de Permissões do Node.js","description":"A documentação da API de Permissões do Node.js detalha como gerenciar e controlar permissões para várias operações dentro de aplicações Node.js, garantindo um acesso seguro e controlado aos recursos do sistema.","head":[["meta",{"name":"og:title","content":"API de Permissões do Node.js | Node.js - iDoc.dev"}],["meta",{"name":"og:description","content":"A documentação da API de Permissões do Node.js detalha como gerenciar e controlar permissões para várias operações dentro de aplicações Node.js, garantindo um acesso seguro e controlado aos recursos do sistema."}],["meta",{"name":"twitter:title","content":"API de Permissões do Node.js | Node.js - iDoc.dev"}],["meta",{"name":"twitter:description","content":"A documentação da API de Permissões do Node.js detalha como gerenciar e controlar permissões para várias operações dentro de aplicações Node.js, garantindo um acesso seguro e controlado aos recursos do sistema."}],["link",{"rel":"canonical","href":"https://idoc.dev/pt/nodejs/api/permissions"}],["meta",{"property":"og:url","content":"https://idoc.dev/pt/nodejs/api/permissions"}]]},"headers":[],"relativePath":"pt/nodejs/api/permissions.md","filePath":"pt/nodejs/api/permissions.md","lastUpdated":null}`),a={name:`pt/nodejs/api/permissions.md`};function o(e,i,a,o,s,c){return r(),t(`div`,null,i[0]||=[n(`<h1 id="permissions" tabindex="-1">Permissões <a class="header-anchor" href="#permissions" aria-label="Permalink to “Permissões”">​</a></h1><p>As permissões podem ser usadas para controlar a quais recursos do sistema o processo do Node.js tem acesso ou quais ações o processo pode tomar com esses recursos.</p><ul><li><a href="/pt/nodejs/api/permissions#process-based-permissions">Permissões baseadas em processo</a> controlam o acesso do processo do Node.js aos recursos. O recurso pode ser totalmente permitido ou negado, ou as ações relacionadas a ele podem ser controladas. Por exemplo, as leituras do sistema de arquivos podem ser permitidas enquanto as gravações são negadas. Este recurso não protege contra código malicioso. De acordo com a <a href="https://github.com/nodejs/node/blob/main/SECURITY.md" target="_blank" rel="noreferrer">Política de Segurança</a> do Node.js, o Node.js confia em qualquer código que seja solicitado a executar.</li></ul><p>O modelo de permissão implementa uma abordagem de &quot;cinto de segurança&quot;, que impede que o código confiável altere arquivos ou use recursos cujo acesso não foi explicitamente concedido. Ele não oferece garantias de segurança na presença de código malicioso. Código malicioso pode ignorar o modelo de permissão e executar código arbitrário sem as restrições impostas pelo modelo de permissão.</p><p>Se você encontrar uma possível vulnerabilidade de segurança, consulte nossa <a href="https://github.com/nodejs/node/blob/main/SECURITY.md" target="_blank" rel="noreferrer">Política de Segurança</a>.</p><h2 id="process-based-permissions" tabindex="-1">Permissões baseadas em processo <a class="header-anchor" href="#process-based-permissions" aria-label="Permalink to “Permissões baseadas em processo”">​</a></h2><h3 id="permission-model" tabindex="-1">Modelo de Permissão <a class="header-anchor" href="#permission-model" aria-label="Permalink to “Modelo de Permissão”">​</a></h3><div class="tip custom-block"><p class="custom-block-title">[Estável: 2 - Estável]</p><p><a href="/pt/nodejs/api/documentation#stability-index">Estável: 2</a> <a href="/pt/nodejs/api/documentation#stability-index">Estabilidade: 2</a> - Estável.</p></div><p>O Modelo de Permissão do Node.js é um mecanismo para restringir o acesso a recursos específicos durante a execução. A API existe por trás de uma flag <a href="/pt/nodejs/api/cli#permission"><code>--permission</code></a> que, quando ativada, restringirá o acesso a todas as permissões disponíveis.</p><p>As permissões disponíveis são documentadas pela flag <a href="/pt/nodejs/api/cli#permission"><code>--permission</code></a>.</p><p>Ao iniciar o Node.js com <code>--permission</code>, a capacidade de acessar o sistema de arquivos através do módulo <code>fs</code>, gerar processos, usar <code>node:worker_threads</code>, usar addons nativos, usar WASI e habilitar o inspetor de tempo de execução será restrita.</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> node</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --permission</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> index.js</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Error:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Access</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> this</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> API</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> has</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> been</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> restricted</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    at</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> node:internal/main/run_main_module:23:47</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  code:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;ERR_ACCESS_DENIED&#39;,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  permission:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;FileSystemRead&#39;,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  resource:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;/home/user/index.js&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>Permitir o acesso para gerar um processo e criar threads de trabalho pode ser feito usando <a href="/pt/nodejs/api/cli#allow-child-process"><code>--allow-child-process</code></a> e <a href="/pt/nodejs/api/cli#allow-worker"><code>--allow-worker</code></a> respectivamente.</p><p>Para permitir addons nativos ao usar o modelo de permissão, use a flag <a href="/pt/nodejs/api/cli#allow-addons"><code>--allow-addons</code></a>. Para WASI, use a flag <a href="/pt/nodejs/api/cli#allow-wasi"><code>--allow-wasi</code></a>.</p><h4 id="runtime-api" tabindex="-1">API de Tempo de Execução <a class="header-anchor" href="#runtime-api" aria-label="Permalink to “API de Tempo de Execução”">​</a></h4><p>Ao habilitar o Modelo de Permissão através da flag <a href="/pt/nodejs/api/cli#permission"><code>--permission</code></a>, uma nova propriedade <code>permission</code> é adicionada ao objeto <code>process</code>. Esta propriedade contém uma função:</p><h5 id="permissionhasscope-reference" tabindex="-1"><code>permission.has(scope[, reference])</code> <a class="header-anchor" href="#permissionhasscope-reference" aria-label="Permalink to “permission.has(scope[, reference])”">​</a></h5><p>Chamada de API para verificar permissões em tempo de execução (<a href="/pt/nodejs/api/process#processpermissionhasscope-reference"><code>permission.has()</code></a>)</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">process.permission.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">has</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;fs.write&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">process.permission.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">has</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;fs.write&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/home/rafaelgss/protected-folder&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// true</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">process.permission.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">has</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;fs.read&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">process.permission.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">has</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;fs.read&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/home/rafaelgss/protected-folder&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// false</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h4 id="file-system-permissions" tabindex="-1">Permissões do Sistema de Arquivos <a class="header-anchor" href="#file-system-permissions" aria-label="Permalink to “Permissões do Sistema de Arquivos”">​</a></h4><p>O Modelo de Permissão, por padrão, restringe o acesso ao sistema de arquivos através do módulo <code>node:fs</code>. Ele não garante que os usuários não poderão acessar o sistema de arquivos por outros meios, como através do módulo <code>node:sqlite</code>.</p><p>Para permitir o acesso ao sistema de arquivos, use as flags <a href="/pt/nodejs/api/cli#allow-fs-read"><code>--allow-fs-read</code></a> e <a href="/pt/nodejs/api/cli#allow-fs-write"><code>--allow-fs-write</code></a>:</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> node</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --permission</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --allow-fs-read=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --allow-fs-write=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> index.js</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Hello</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> world!</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>Os argumentos válidos para ambas as flags são:</p><ul><li><code>*</code> - Para permitir todas as operações <code>FileSystemRead</code> ou <code>FileSystemWrite</code>, respectivamente.</li><li>Caminhos delimitados por vírgula (<code>,</code>) para permitir apenas as operações <code>FileSystemRead</code> ou <code>FileSystemWrite</code> correspondentes, respectivamente.</li></ul><p>Exemplo:</p><ul><li><code>--allow-fs-read=*</code> - Permitirá todas as operações <code>FileSystemRead</code>.</li><li><code>--allow-fs-write=*</code> - Permitirá todas as operações <code>FileSystemWrite</code>.</li><li><code>--allow-fs-write=/tmp/</code> - Permitirá o acesso <code>FileSystemWrite</code> à pasta <code>/tmp/</code>.</li><li><code>--allow-fs-read=/tmp/ --allow-fs-read=/home/.gitignore</code> - Permite o acesso <code>FileSystemRead</code> à pasta <code>/tmp/</code> <strong>e</strong> ao caminho <code>/home/.gitignore</code>.</li></ul><p>Curingas também são suportados:</p><ul><li><code>--allow-fs-read=/home/test*</code> permitirá o acesso de leitura a tudo que corresponder ao curinga. ex: <code>/home/test/file1</code> ou <code>/home/test2</code></li></ul><p>Depois de passar um caractere curinga (<code>*</code>), todos os caracteres subsequentes serão ignorados. Por exemplo: <code>/home/*.js</code> funcionará de forma semelhante a <code>/home/*</code>.</p><p>Quando o modelo de permissão é inicializado, ele adicionará automaticamente um curinga (*) se o diretório especificado existir. Por exemplo, se <code>/home/test/files</code> existir, ele será tratado como <code>/home/test/files/*</code>. No entanto, se o diretório não existir, o curinga não será adicionado e o acesso será limitado a <code>/home/test/files</code>. Se você quiser permitir o acesso a uma pasta que ainda não existe, certifique-se de incluir explicitamente o curinga: <code>/my-path/folder-do-not-exist/*</code>.</p><h4 id="permission-model-constraints" tabindex="-1">Restrições do Modelo de Permissões <a class="header-anchor" href="#permission-model-constraints" aria-label="Permalink to “Restrições do Modelo de Permissões”">​</a></h4><p>Existem restrições que você precisa conhecer antes de usar este sistema:</p><ul><li><p>O modelo não é herdado para um processo de nó filho ou thread de trabalho.</p></li><li><p>Ao usar o Modelo de Permissões, os seguintes recursos serão restritos:</p><ul><li>Módulos nativos</li><li>Processo filho</li><li>Threads de trabalho</li><li>Protocolo do Inspetor</li><li>Acesso ao sistema de arquivos</li><li>WASI</li></ul></li><li><p>O Modelo de Permissões é inicializado após a configuração do ambiente Node.js. No entanto, certas flags como <code>--env-file</code> ou <code>--openssl-config</code> são projetadas para ler arquivos antes da inicialização do ambiente. Como resultado, tais flags não estão sujeitas às regras do Modelo de Permissões. O mesmo se aplica às flags V8 que podem ser definidas via runtime através de <code>v8.setFlagsFromString</code>.</p></li><li><p>Os mecanismos OpenSSL não podem ser solicitados em tempo de execução quando o Modelo de Permissões está habilitado, afetando os módulos crypto, https e tls integrados.</p></li><li><p>As Extensões Carregáveis ​​em Tempo de Execução não podem ser carregadas quando o Modelo de Permissões está habilitado, afetando o módulo sqlite.</p></li><li><p>O uso de descritores de arquivos existentes através do módulo <code>node:fs</code> ignora o Modelo de Permissões.</p></li></ul><h4 id="limitations-and-known-issues" tabindex="-1">Limitações e Problemas Conhecidos <a class="header-anchor" href="#limitations-and-known-issues" aria-label="Permalink to “Limitações e Problemas Conhecidos”">​</a></h4><ul><li>Links simbólicos serão seguidos mesmo para locais fora do conjunto de caminhos aos quais o acesso foi concedido. Links simbólicos relativos podem permitir o acesso a arquivos e diretórios arbitrários. Ao iniciar aplicativos com o modelo de permissão habilitado, você deve garantir que nenhum caminho ao qual o acesso foi concedido contenha links simbólicos relativos.</li></ul>`,36)])}var s=e(a,[[`render`,o]]);export{i as __pageData,s as default};