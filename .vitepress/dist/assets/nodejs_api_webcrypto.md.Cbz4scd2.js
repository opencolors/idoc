import{__plugin_vue_export_helper_default as e,createElementBlock as t,createStaticVNode as n,openBlock as r}from"./chunks/plugin-vue_export-helper.Bts1mPc7.js";const i=JSON.parse(`{"title":"Node.js Web Crypto API","description":"The Node.js Web Crypto API provides a set of cryptographic functions for secure communication and data integrity, including key generation, encryption, decryption, signing, and verification.","frontmatter":{"title":"Node.js Web Crypto API","description":"The Node.js Web Crypto API provides a set of cryptographic functions for secure communication and data integrity, including key generation, encryption, decryption, signing, and verification.","head":[["meta",{"name":"og:title","content":"Node.js Web Crypto API | Node.js - iDoc.dev"}],["meta",{"name":"og:description","content":"The Node.js Web Crypto API provides a set of cryptographic functions for secure communication and data integrity, including key generation, encryption, decryption, signing, and verification."}],["meta",{"name":"twitter:title","content":"Node.js Web Crypto API | Node.js - iDoc.dev"}],["meta",{"name":"twitter:description","content":"The Node.js Web Crypto API provides a set of cryptographic functions for secure communication and data integrity, including key generation, encryption, decryption, signing, and verification."}],["link",{"rel":"canonical","href":"https://idoc.dev/nodejs/api/webcrypto"}],["meta",{"property":"og:url","content":"https://idoc.dev/nodejs/api/webcrypto"}]]},"headers":[],"relativePath":"nodejs/api/webcrypto.md","filePath":"en/nodejs/api/webcrypto.md","lastUpdated":1749464498000}`),a={name:`nodejs/api/webcrypto.md`};function o(e,i,a,o,s,c){return r(),t(`div`,null,i[0]||=[n(`<h1 id="web-crypto-api" tabindex="-1">Web Crypto API <a class="header-anchor" href="#web-crypto-api" aria-label="Permalink to “Web Crypto API”">​</a></h1><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v23.5.0</td><td>Algorithms <code>Ed25519</code> and <code>X25519</code> are now stable.</td></tr><tr><td>v19.0.0</td><td>No longer experimental except for the <code>Ed25519</code>, <code>Ed448</code>, <code>X25519</code>, and <code>X448</code> algorithms.</td></tr><tr><td>v20.0.0, v18.17.0</td><td>Arguments are now coerced and validated as per their WebIDL definitions like in other Web Crypto API implementations.</td></tr><tr><td>v18.4.0, v16.17.0</td><td>Removed proprietary <code>&#39;node.keyObject&#39;</code> import/export format.</td></tr><tr><td>v18.4.0, v16.17.0</td><td>Removed proprietary <code>&#39;NODE-DSA&#39;</code>, <code>&#39;NODE-DH&#39;</code>, and <code>&#39;NODE-SCRYPT&#39;</code> algorithms.</td></tr><tr><td>v18.4.0, v16.17.0</td><td>Added <code>&#39;Ed25519&#39;</code>, <code>&#39;Ed448&#39;</code>, <code>&#39;X25519&#39;</code>, and <code>&#39;X448&#39;</code> algorithms.</td></tr><tr><td>v18.4.0, v16.17.0</td><td>Removed proprietary <code>&#39;NODE-ED25519&#39;</code> and <code>&#39;NODE-ED448&#39;</code> algorithms.</td></tr><tr><td>v18.4.0, v16.17.0</td><td>Removed proprietary <code>&#39;NODE-X25519&#39;</code> and <code>&#39;NODE-X448&#39;</code> named curves from the <code>&#39;ECDH&#39;</code> algorithm.</td></tr></tbody></table></div><div class="tip custom-block"><p class="custom-block-title">[Stable: 2 - Stable]</p><p><a href="/nodejs/api/documentation#stability-index">Stable: 2</a> <a href="/nodejs/api/documentation#stability-index">Stability: 2</a> - Stable</p></div><p>Node.js provides an implementation of the standard <a href="https://www.w3.org/TR/WebCryptoAPI/" target="_blank" rel="noreferrer">Web Crypto API</a>.</p><p>Use <code>globalThis.crypto</code> or <code>require(&#39;node:crypto&#39;).webcrypto</code> to access this module.</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">subtle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> globalThis.crypto;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> key</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> subtle.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">generateKey</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;HMAC&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    hash: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;SHA-256&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    length: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">256</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;sign&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;verify&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> enc</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> TextEncoder</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> message</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> enc.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">encode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;I love cupcakes&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> digest</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> subtle.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sign</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;HMAC&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }, key, message);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})();</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h2 id="examples" tabindex="-1">Examples <a class="header-anchor" href="#examples" aria-label="Permalink to “Examples”">​</a></h2><h3 id="generating-keys" tabindex="-1">Generating keys <a class="header-anchor" href="#generating-keys" aria-label="Permalink to “Generating keys”">​</a></h3><p>The <a href="/nodejs/api/webcrypto#class-subtlecrypto">&lt;SubtleCrypto&gt;</a> class can be used to generate symmetric (secret) keys or asymmetric key pairs (public key and private key).</p><h4 id="aes-keys" tabindex="-1">AES keys <a class="header-anchor" href="#aes-keys" aria-label="Permalink to “AES keys”">​</a></h4><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">subtle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> globalThis.crypto;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> generateAesKey</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">length</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 256</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> key</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> subtle.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">generateKey</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;AES-CBC&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    length,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;encrypt&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;decrypt&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> key;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h4 id="ecdsa-key-pairs" tabindex="-1">ECDSA key pairs <a class="header-anchor" href="#ecdsa-key-pairs" aria-label="Permalink to “ECDSA key pairs”">​</a></h4><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">subtle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> globalThis.crypto;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> generateEcKey</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">namedCurve</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;P-521&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    publicKey</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    privateKey</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> subtle.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">generateKey</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;ECDSA&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    namedCurve,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;sign&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;verify&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { publicKey, privateKey };</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h4 id="ed25519/x25519-key-pairs" tabindex="-1">Ed25519/X25519 key pairs <a class="header-anchor" href="#ed25519/x25519-key-pairs" aria-label="Permalink to “Ed25519/X25519 key pairs”">​</a></h4><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">subtle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> globalThis.crypto;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> generateEd25519Key</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> subtle.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">generateKey</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Ed25519&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;sign&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;verify&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> generateX25519Key</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> subtle.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">generateKey</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;X25519&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;deriveKey&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h4 id="hmac-keys" tabindex="-1">HMAC keys <a class="header-anchor" href="#hmac-keys" aria-label="Permalink to “HMAC keys”">​</a></h4><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">subtle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> globalThis.crypto;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> generateHmacKey</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">hash</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;SHA-256&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> key</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> subtle.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">generateKey</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;HMAC&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    hash,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;sign&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;verify&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> key;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h4 id="rsa-key-pairs" tabindex="-1">RSA key pairs <a class="header-anchor" href="#rsa-key-pairs" aria-label="Permalink to “RSA key pairs”">​</a></h4><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">subtle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> globalThis.crypto;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> publicExponent</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Uint8Array</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> generateRsaKey</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">modulusLength</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2048</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">hash</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;SHA-256&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    publicKey</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    privateKey</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> subtle.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">generateKey</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;RSASSA-PKCS1-v1_5&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    modulusLength,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    publicExponent,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    hash,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;sign&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;verify&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { publicKey, privateKey };</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h3 id="encryption-and-decryption" tabindex="-1">Encryption and decryption <a class="header-anchor" href="#encryption-and-decryption" aria-label="Permalink to “Encryption and decryption”">​</a></h3><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> crypto</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> globalThis.crypto;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> aesEncrypt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">plaintext</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ec</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> TextEncoder</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> key</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> generateAesKey</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> iv</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> crypto.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getRandomValues</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Uint8Array</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">16</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">));</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ciphertext</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> crypto.subtle.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">encrypt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;AES-CBC&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    iv,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }, key, ec.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">encode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(plaintext));</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    key,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    iv,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ciphertext,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  };</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> aesDecrypt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">ciphertext</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">key</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">iv</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> dec</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> TextDecoder</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> plaintext</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> crypto.subtle.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">decrypt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;AES-CBC&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    iv,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }, key, ciphertext);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> dec.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">decode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(plaintext);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div><h3 id="exporting-and-importing-keys" tabindex="-1">Exporting and importing keys <a class="header-anchor" href="#exporting-and-importing-keys" aria-label="Permalink to “Exporting and importing keys”">​</a></h3><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">subtle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> globalThis.crypto;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> generateAndExportHmacKey</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">format</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;jwk&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">hash</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;SHA-512&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> key</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> subtle.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">generateKey</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;HMAC&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    hash,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;sign&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;verify&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> subtle.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">exportKey</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(format, key);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> importHmacKey</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">keyData</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">format</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;jwk&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">hash</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;SHA-512&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> key</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> subtle.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">importKey</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(format, keyData, {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;HMAC&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    hash,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;sign&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;verify&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> key;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h3 id="wrapping-and-unwrapping-keys" tabindex="-1">Wrapping and unwrapping keys <a class="header-anchor" href="#wrapping-and-unwrapping-keys" aria-label="Permalink to “Wrapping and unwrapping keys”">​</a></h3><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">subtle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> globalThis.crypto;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> generateAndWrapHmacKey</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">format</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;jwk&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">hash</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;SHA-512&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    key</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    wrappingKey</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Promise</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">all</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    subtle.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">generateKey</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;HMAC&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, hash,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;sign&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;verify&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    subtle.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">generateKey</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;AES-KW&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      length: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">256</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;wrapKey&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;unwrapKey&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ]);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> wrappedKey</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> subtle.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">wrapKey</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(format, key, wrappingKey, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;AES-KW&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { wrappedKey, wrappingKey };</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> unwrapHmacKey</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  wrappedKey</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  wrappingKey</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  format</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;jwk&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  hash</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;SHA-512&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> key</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> subtle.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">unwrapKey</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    format,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    wrappedKey,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    wrappingKey,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &#39;AES-KW&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    { name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;HMAC&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, hash },</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;sign&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;verify&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> key;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br></div></div><h3 id="sign-and-verify" tabindex="-1">Sign and verify <a class="header-anchor" href="#sign-and-verify" aria-label="Permalink to “Sign and verify”">​</a></h3><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">subtle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> globalThis.crypto;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> sign</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">key</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">data</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ec</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> TextEncoder</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> signature</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> subtle.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sign</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;RSASSA-PKCS1-v1_5&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, key, ec.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">encode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(data));</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> signature;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> verify</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">key</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">signature</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">data</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ec</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> TextEncoder</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> verified</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> subtle.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">verify</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      &#39;RSASSA-PKCS1-v1_5&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      key,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      signature,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      ec.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">encode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(data));</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> verified;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h3 id="deriving-bits-and-keys" tabindex="-1">Deriving bits and keys <a class="header-anchor" href="#deriving-bits-and-keys" aria-label="Permalink to “Deriving bits and keys”">​</a></h3><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">subtle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> globalThis.crypto;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> pbkdf2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">pass</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">salt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">iterations</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">length</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 256</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ec</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> TextEncoder</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> key</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> subtle.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">importKey</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &#39;raw&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ec.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">encode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(pass),</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &#39;PBKDF2&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;deriveBits&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> bits</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> subtle.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">deriveBits</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;PBKDF2&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    hash: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;SHA-512&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    salt: ec.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">encode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(salt),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    iterations,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }, key, length);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> bits;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> pbkdf2Key</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">pass</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">salt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">iterations</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">length</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 256</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ec</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> TextEncoder</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> keyMaterial</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> subtle.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">importKey</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &#39;raw&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ec.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">encode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(pass),</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &#39;PBKDF2&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;deriveKey&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> key</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> subtle.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">deriveKey</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;PBKDF2&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    hash: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;SHA-512&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    salt: ec.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">encode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(salt),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    iterations,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }, keyMaterial, {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;AES-GCM&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    length,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;encrypt&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;decrypt&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> key;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br></div></div><h3 id="digest" tabindex="-1">Digest <a class="header-anchor" href="#digest" aria-label="Permalink to “Digest”">​</a></h3><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">subtle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> globalThis.crypto;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> digest</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">data</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">algorithm</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;SHA-512&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ec</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> TextEncoder</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> digest</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> subtle.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">digest</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(algorithm, ec.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">encode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(data));</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> digest;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="algorithm-matrix" tabindex="-1">Algorithm matrix <a class="header-anchor" href="#algorithm-matrix" aria-label="Permalink to “Algorithm matrix”">​</a></h2><p>The table details the algorithms supported by the Node.js Web Crypto API implementation and the APIs supported for each:</p><table tabindex="0"><thead><tr><th>Algorithm</th><th><code>generateKey</code></th><th><code>exportKey</code></th><th><code>importKey</code></th><th><code>encrypt</code></th><th><code>decrypt</code></th><th><code>wrapKey</code></th><th><code>unwrapKey</code></th><th><code>deriveBits</code></th><th><code>deriveKey</code></th><th><code>sign</code></th><th><code>verify</code></th><th><code>digest</code></th></tr></thead><tbody><tr><td><code>&#39;RSASSA-PKCS1-v1_5&#39;</code></td><td>✔</td><td>✔</td><td>✔</td><td></td><td></td><td></td><td></td><td></td><td></td><td>✔</td><td>✔</td><td></td></tr><tr><td><code>&#39;RSA-PSS&#39;</code></td><td>✔</td><td>✔</td><td>✔</td><td></td><td></td><td></td><td></td><td></td><td></td><td>✔</td><td>✔</td><td></td></tr><tr><td><code>&#39;RSA-OAEP&#39;</code></td><td>✔</td><td>✔</td><td>✔</td><td>✔</td><td>✔</td><td>✔</td><td>✔</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td><code>&#39;ECDSA&#39;</code></td><td>✔</td><td>✔</td><td>✔</td><td></td><td></td><td></td><td></td><td></td><td></td><td>✔</td><td>✔</td><td></td></tr><tr><td><code>&#39;Ed25519&#39;</code></td><td>✔</td><td>✔</td><td>✔</td><td></td><td></td><td></td><td></td><td></td><td></td><td>✔</td><td>✔</td><td></td></tr><tr><td><code>&#39;Ed448&#39;</code></td><td>✔</td><td>✔</td><td>✔</td><td></td><td></td><td></td><td></td><td></td><td></td><td>✔</td><td>✔</td><td></td></tr><tr><td><code>&#39;ECDH&#39;</code></td><td>✔</td><td>✔</td><td>✔</td><td></td><td></td><td></td><td></td><td>✔</td><td>✔</td><td></td><td></td><td></td></tr><tr><td><code>&#39;X25519&#39;</code></td><td>✔</td><td>✔</td><td>✔</td><td></td><td></td><td></td><td></td><td>✔</td><td>✔</td><td></td><td></td><td></td></tr><tr><td><code>&#39;X448&#39;</code></td><td>✔</td><td>✔</td><td>✔</td><td></td><td></td><td></td><td></td><td>✔</td><td>✔</td><td></td><td></td><td></td></tr><tr><td><code>&#39;AES-CTR&#39;</code></td><td>✔</td><td>✔</td><td>✔</td><td>✔</td><td>✔</td><td>✔</td><td>✔</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td><code>&#39;AES-CBC&#39;</code></td><td>✔</td><td>✔</td><td>✔</td><td>✔</td><td>✔</td><td>✔</td><td>✔</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td><code>&#39;AES-GCM&#39;</code></td><td>✔</td><td>✔</td><td>✔</td><td>✔</td><td>✔</td><td>✔</td><td>✔</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td><code>&#39;AES-KW&#39;</code></td><td>✔</td><td>✔</td><td>✔</td><td></td><td></td><td>✔</td><td>✔</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td><code>&#39;HMAC&#39;</code></td><td>✔</td><td>✔</td><td>✔</td><td></td><td></td><td></td><td></td><td></td><td></td><td>✔</td><td>✔</td><td></td></tr><tr><td><code>&#39;HKDF&#39;</code></td><td></td><td>✔</td><td>✔</td><td></td><td></td><td></td><td></td><td>✔</td><td>✔</td><td></td><td></td><td></td></tr><tr><td><code>&#39;PBKDF2&#39;</code></td><td></td><td>✔</td><td>✔</td><td></td><td></td><td></td><td></td><td>✔</td><td>✔</td><td></td><td></td><td></td></tr><tr><td><code>&#39;SHA-1&#39;</code></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>✔</td></tr><tr><td><code>&#39;SHA-256&#39;</code></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>✔</td></tr><tr><td><code>&#39;SHA-384&#39;</code></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>✔</td></tr><tr><td><code>&#39;SHA-512&#39;</code></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>✔</td></tr></tbody></table><h2 id="class-crypto" tabindex="-1">Class: <code>Crypto</code> <a class="header-anchor" href="#class-crypto" aria-label="Permalink to “Class: Crypto”">​</a></h2><p><strong>Added in: v15.0.0</strong></p><p><code>globalThis.crypto</code> is an instance of the <code>Crypto</code> class. <code>Crypto</code> is a singleton that provides access to the remainder of the crypto API.</p><h3 id="cryptosubtle" tabindex="-1"><code>crypto.subtle</code> <a class="header-anchor" href="#cryptosubtle" aria-label="Permalink to “crypto.subtle”">​</a></h3><p><strong>Added in: v15.0.0</strong></p><ul><li>Type: <a href="/nodejs/api/webcrypto#class-subtlecrypto">&lt;SubtleCrypto&gt;</a></li></ul><p>Provides access to the <code>SubtleCrypto</code> API.</p><h3 id="cryptogetrandomvaluestypedarray" tabindex="-1"><code>crypto.getRandomValues(typedArray)</code> <a class="header-anchor" href="#cryptogetrandomvaluestypedarray" aria-label="Permalink to “crypto.getRandomValues(typedArray)”">​</a></h3><p><strong>Added in: v15.0.0</strong></p><ul><li><code>typedArray</code> <a href="/nodejs/api/buffer#class-buffer">&lt;Buffer&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray" target="_blank" rel="noreferrer">&lt;TypedArray&gt;</a></li><li>Returns: <a href="/nodejs/api/buffer#class-buffer">&lt;Buffer&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray" target="_blank" rel="noreferrer">&lt;TypedArray&gt;</a></li></ul><p>Generates cryptographically strong random values. The given <code>typedArray</code> is filled with random values, and a reference to <code>typedArray</code> is returned.</p><p>The given <code>typedArray</code> must be an integer-based instance of <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray" target="_blank" rel="noreferrer">&lt;TypedArray&gt;</a>, i.e. <code>Float32Array</code> and <code>Float64Array</code> are not accepted.</p><p>An error will be thrown if the given <code>typedArray</code> is larger than 65,536 bytes.</p><h3 id="cryptorandomuuid" tabindex="-1"><code>crypto.randomUUID()</code> <a class="header-anchor" href="#cryptorandomuuid" aria-label="Permalink to “crypto.randomUUID()”">​</a></h3><p><strong>Added in: v16.7.0</strong></p><ul><li>Returns: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a></li></ul><p>Generates a random <a href="https://www.rfc-editor.org/rfc/rfc4122.txt" target="_blank" rel="noreferrer">RFC 4122</a> version 4 UUID. The UUID is generated using a cryptographic pseudorandom number generator.</p><h2 id="class-cryptokey" tabindex="-1">Class: <code>CryptoKey</code> <a class="header-anchor" href="#class-cryptokey" aria-label="Permalink to “Class: CryptoKey”">​</a></h2><p><strong>Added in: v15.0.0</strong></p><h3 id="cryptokeyalgorithm" tabindex="-1"><code>cryptoKey.algorithm</code> <a class="header-anchor" href="#cryptokeyalgorithm" aria-label="Permalink to “cryptoKey.algorithm”">​</a></h3><p><strong>Added in: v15.0.0</strong></p><ul><li>Type: <a href="/nodejs/api/webcrypto#class-aeskeygenparams">&lt;AesKeyGenParams&gt;</a> | <a href="/nodejs/api/webcrypto#class-rsahashedkeygenparams">&lt;RsaHashedKeyGenParams&gt;</a> | <a href="/nodejs/api/webcrypto#class-eckeygenparams">&lt;EcKeyGenParams&gt;</a> | <a href="/nodejs/api/webcrypto#class-hmackeygenparams">&lt;HmacKeyGenParams&gt;</a></li></ul><p>An object detailing the algorithm for which the key can be used along with additional algorithm-specific parameters.</p><p>Read-only.</p><h3 id="cryptokeyextractable" tabindex="-1"><code>cryptoKey.extractable</code> <a class="header-anchor" href="#cryptokeyextractable" aria-label="Permalink to “cryptoKey.extractable”">​</a></h3><p><strong>Added in: v15.0.0</strong></p><ul><li>Type: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type" target="_blank" rel="noreferrer">&lt;boolean&gt;</a></li></ul><p>When <code>true</code>, the <a href="/nodejs/api/webcrypto#class-cryptokey">&lt;CryptoKey&gt;</a> can be extracted using either <code>subtleCrypto.exportKey()</code> or <code>subtleCrypto.wrapKey()</code>.</p><p>Read-only.</p><h3 id="cryptokeytype" tabindex="-1"><code>cryptoKey.type</code> <a class="header-anchor" href="#cryptokeytype" aria-label="Permalink to “cryptoKey.type”">​</a></h3><p><strong>Added in: v15.0.0</strong></p><ul><li>Type: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> One of <code>&#39;secret&#39;</code>, <code>&#39;private&#39;</code>, or <code>&#39;public&#39;</code>.</li></ul><p>A string identifying whether the key is a symmetric (<code>&#39;secret&#39;</code>) or asymmetric (<code>&#39;private&#39;</code> or <code>&#39;public&#39;</code>) key.</p><h3 id="cryptokeyusages" tabindex="-1"><code>cryptoKey.usages</code> <a class="header-anchor" href="#cryptokeyusages" aria-label="Permalink to “cryptoKey.usages”">​</a></h3><p><strong>Added in: v15.0.0</strong></p><ul><li>Type: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string[]&gt;</a></li></ul><p>An array of strings identifying the operations for which the key may be used.</p><p>The possible usages are:</p><ul><li><code>&#39;encrypt&#39;</code> - The key may be used to encrypt data.</li><li><code>&#39;decrypt&#39;</code> - The key may be used to decrypt data.</li><li><code>&#39;sign&#39;</code> - The key may be used to generate digital signatures.</li><li><code>&#39;verify&#39;</code> - The key may be used to verify digital signatures.</li><li><code>&#39;deriveKey&#39;</code> - The key may be used to derive a new key.</li><li><code>&#39;deriveBits&#39;</code> - The key may be used to derive bits.</li><li><code>&#39;wrapKey&#39;</code> - The key may be used to wrap another key.</li><li><code>&#39;unwrapKey&#39;</code> - The key may be used to unwrap another key.</li></ul><p>Valid key usages depend on the key algorithm (identified by <code>cryptokey.algorithm.name</code>).</p><table tabindex="0"><thead><tr><th>Key Type</th><th><code>&#39;encrypt&#39;</code></th><th><code>&#39;decrypt&#39;</code></th><th><code>&#39;sign&#39;</code></th><th><code>&#39;verify&#39;</code></th><th><code>&#39;deriveKey&#39;</code></th><th><code>&#39;deriveBits&#39;</code></th><th><code>&#39;wrapKey&#39;</code></th><th><code>&#39;unwrapKey&#39;</code></th></tr></thead><tbody><tr><td><code>&#39;AES-CBC&#39;</code></td><td>✔</td><td>✔</td><td></td><td></td><td></td><td></td><td>✔</td><td>✔</td></tr><tr><td><code>&#39;AES-CTR&#39;</code></td><td>✔</td><td>✔</td><td></td><td></td><td></td><td></td><td>✔</td><td>✔</td></tr><tr><td><code>&#39;AES-GCM&#39;</code></td><td>✔</td><td>✔</td><td></td><td></td><td></td><td></td><td>✔</td><td>✔</td></tr><tr><td><code>&#39;AES-KW&#39;</code></td><td></td><td></td><td></td><td></td><td></td><td></td><td>✔</td><td>✔</td></tr><tr><td><code>&#39;ECDH&#39;</code></td><td></td><td></td><td></td><td></td><td>✔</td><td>✔</td><td></td><td></td></tr><tr><td><code>&#39;X25519&#39;</code></td><td></td><td></td><td></td><td></td><td>✔</td><td>✔</td><td></td><td></td></tr><tr><td><code>&#39;X448&#39;</code></td><td></td><td></td><td></td><td></td><td>✔</td><td>✔</td><td></td><td></td></tr><tr><td><code>&#39;ECDSA&#39;</code></td><td></td><td></td><td>✔</td><td>✔</td><td></td><td></td><td></td><td></td></tr><tr><td><code>&#39;Ed25519&#39;</code></td><td></td><td></td><td>✔</td><td>✔</td><td></td><td></td><td></td><td></td></tr><tr><td><code>&#39;Ed448&#39;</code></td><td></td><td></td><td>✔</td><td>✔</td><td></td><td></td><td></td><td></td></tr><tr><td><code>&#39;HDKF&#39;</code></td><td></td><td></td><td></td><td></td><td>✔</td><td>✔</td><td></td><td></td></tr><tr><td><code>&#39;HMAC&#39;</code></td><td></td><td></td><td>✔</td><td>✔</td><td></td><td></td><td></td><td></td></tr><tr><td><code>&#39;PBKDF2&#39;</code></td><td></td><td></td><td></td><td></td><td>✔</td><td>✔</td><td></td><td></td></tr><tr><td><code>&#39;RSA-OAEP&#39;</code></td><td>✔</td><td>✔</td><td></td><td></td><td></td><td></td><td>✔</td><td>✔</td></tr><tr><td><code>&#39;RSA-PSS&#39;</code></td><td></td><td></td><td>✔</td><td>✔</td><td></td><td></td><td></td><td></td></tr><tr><td><code>&#39;RSASSA-PKCS1-v1_5&#39;</code></td><td></td><td></td><td>✔</td><td>✔</td><td></td><td></td><td></td><td></td></tr></tbody></table><h2 id="class-cryptokeypair" tabindex="-1">Class: <code>CryptoKeyPair</code> <a class="header-anchor" href="#class-cryptokeypair" aria-label="Permalink to “Class: CryptoKeyPair”">​</a></h2><p><strong>Added in: v15.0.0</strong></p><p>The <code>CryptoKeyPair</code> is a simple dictionary object with <code>publicKey</code> and <code>privateKey</code> properties, representing an asymmetric key pair.</p><h3 id="cryptokeypairprivatekey" tabindex="-1"><code>cryptoKeyPair.privateKey</code> <a class="header-anchor" href="#cryptokeypairprivatekey" aria-label="Permalink to “cryptoKeyPair.privateKey”">​</a></h3><p><strong>Added in: v15.0.0</strong></p><ul><li>Type: <a href="/nodejs/api/webcrypto#class-cryptokey">&lt;CryptoKey&gt;</a> A <a href="/nodejs/api/webcrypto#class-cryptokey">&lt;CryptoKey&gt;</a> whose <code>type</code> will be <code>&#39;private&#39;</code>.</li></ul><h3 id="cryptokeypairpublickey" tabindex="-1"><code>cryptoKeyPair.publicKey</code> <a class="header-anchor" href="#cryptokeypairpublickey" aria-label="Permalink to “cryptoKeyPair.publicKey”">​</a></h3><p><strong>Added in: v15.0.0</strong></p><ul><li>Type: <a href="/nodejs/api/webcrypto#class-cryptokey">&lt;CryptoKey&gt;</a> A <a href="/nodejs/api/webcrypto#class-cryptokey">&lt;CryptoKey&gt;</a> whose <code>type</code> will be <code>&#39;public&#39;</code>.</li></ul><h2 id="class-subtlecrypto" tabindex="-1">Class: <code>SubtleCrypto</code> <a class="header-anchor" href="#class-subtlecrypto" aria-label="Permalink to “Class: SubtleCrypto”">​</a></h2><p><strong>Added in: v15.0.0</strong></p><h3 id="subtledecryptalgorithm-key-data" tabindex="-1"><code>subtle.decrypt(algorithm, key, data)</code> <a class="header-anchor" href="#subtledecryptalgorithm-key-data" aria-label="Permalink to “subtle.decrypt(algorithm, key, data)”">​</a></h3><p><strong>Added in: v15.0.0</strong></p><ul><li><code>algorithm</code>: <a href="/nodejs/api/webcrypto#class-rsaoaepparams">&lt;RsaOaepParams&gt;</a> | <a href="/nodejs/api/webcrypto#class-aesctrparams">&lt;AesCtrParams&gt;</a> | <a href="/nodejs/api/webcrypto#class-aescbcparams">&lt;AesCbcParams&gt;</a> | <a href="/nodejs/api/webcrypto#class-aesgcmparams">&lt;AesGcmParams&gt;</a></li><li><code>key</code>: <a href="/nodejs/api/webcrypto#class-cryptokey">&lt;CryptoKey&gt;</a></li><li><code>data</code>: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer" target="_blank" rel="noreferrer">&lt;ArrayBuffer&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray" target="_blank" rel="noreferrer">&lt;TypedArray&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView" target="_blank" rel="noreferrer">&lt;DataView&gt;</a> | <a href="/nodejs/api/buffer#class-buffer">&lt;Buffer&gt;</a></li><li>Returns: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise" target="_blank" rel="noreferrer">&lt;Promise&gt;</a> Fulfills with an <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer" target="_blank" rel="noreferrer">&lt;ArrayBuffer&gt;</a></li></ul><p>Using the method and parameters specified in <code>algorithm</code> and the keying material provided by <code>key</code>, <code>subtle.decrypt()</code> attempts to decipher the provided <code>data</code>. If successful, the returned promise will be resolved with an <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer" target="_blank" rel="noreferrer">&lt;ArrayBuffer&gt;</a> containing the plaintext result.</p><p>The algorithms currently supported include:</p><ul><li><code>&#39;RSA-OAEP&#39;</code></li><li><code>&#39;AES-CTR&#39;</code></li><li><code>&#39;AES-CBC&#39;</code></li><li><code>&#39;AES-GCM&#39;</code></li></ul><h3 id="subtlederivebitsalgorithm-basekey-length" tabindex="-1"><code>subtle.deriveBits(algorithm, baseKey[, length])</code> <a class="header-anchor" href="#subtlederivebitsalgorithm-basekey-length" aria-label="Permalink to “subtle.deriveBits(algorithm, baseKey[, length])”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v22.5.0, v20.17.0</td><td>The length parameter is now optional for <code>&#39;ECDH&#39;</code>, <code>&#39;X25519&#39;</code>, and <code>&#39;X448&#39;</code>.</td></tr><tr><td>v18.4.0, v16.17.0</td><td>Added <code>&#39;X25519&#39;</code>, and <code>&#39;X448&#39;</code> algorithms.</td></tr><tr><td>v15.0.0</td><td>Added in: v15.0.0</td></tr></tbody></table></div><ul><li><code>algorithm</code>: <a href="/nodejs/api/webcrypto#class-algorithmidentifier">&lt;AlgorithmIdentifier&gt;</a> | <a href="/nodejs/api/webcrypto#class-ecdhkeyderiveparams">&lt;EcdhKeyDeriveParams&gt;</a> | <a href="/nodejs/api/webcrypto#class-hkdfparams">&lt;HkdfParams&gt;</a> | <a href="/nodejs/api/webcrypto#class-pbkdf2params">&lt;Pbkdf2Params&gt;</a></li><li><code>baseKey</code>: <a href="/nodejs/api/webcrypto#class-cryptokey">&lt;CryptoKey&gt;</a></li><li><code>length</code>: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type" target="_blank" rel="noreferrer">&lt;number&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Null_type" target="_blank" rel="noreferrer">&lt;null&gt;</a> <strong>Default:</strong> <code>null</code></li><li>Returns: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise" target="_blank" rel="noreferrer">&lt;Promise&gt;</a> Fulfills with an <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer" target="_blank" rel="noreferrer">&lt;ArrayBuffer&gt;</a></li></ul><p>Using the method and parameters specified in <code>algorithm</code> and the keying material provided by <code>baseKey</code>, <code>subtle.deriveBits()</code> attempts to generate <code>length</code> bits.</p><p>When <code>length</code> is not provided or <code>null</code> the maximum number of bits for a given algorithm is generated. This is allowed for the <code>&#39;ECDH&#39;</code>, <code>&#39;X25519&#39;</code>, and <code>&#39;X448&#39;</code> algorithms, for other algorithms <code>length</code> is required to be a number.</p><p>If successful, the returned promise will be resolved with an <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer" target="_blank" rel="noreferrer">&lt;ArrayBuffer&gt;</a> containing the generated data.</p><p>The algorithms currently supported include:</p><ul><li><code>&#39;ECDH&#39;</code></li><li><code>&#39;X25519&#39;</code></li><li><code>&#39;X448&#39;</code></li><li><code>&#39;HKDF&#39;</code></li><li><code>&#39;PBKDF2&#39;</code></li></ul><h3 id="subtlederivekeyalgorithm-basekey-derivedkeyalgorithm-extractable-keyusages" tabindex="-1"><code>subtle.deriveKey(algorithm, baseKey, derivedKeyAlgorithm, extractable, keyUsages)</code> <a class="header-anchor" href="#subtlederivekeyalgorithm-basekey-derivedkeyalgorithm-extractable-keyusages" aria-label="Permalink to “subtle.deriveKey(algorithm, baseKey, derivedKeyAlgorithm, extractable, keyUsages)”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v18.4.0, v16.17.0</td><td>Added <code>&#39;X25519&#39;</code>, and <code>&#39;X448&#39;</code> algorithms.</td></tr><tr><td>v15.0.0</td><td>Added in: v15.0.0</td></tr></tbody></table></div><ul><li><code>algorithm</code>: <a href="/nodejs/api/webcrypto#class-algorithmidentifier">&lt;AlgorithmIdentifier&gt;</a> | <a href="/nodejs/api/webcrypto#class-ecdhkeyderiveparams">&lt;EcdhKeyDeriveParams&gt;</a> | <a href="/nodejs/api/webcrypto#class-hkdfparams">&lt;HkdfParams&gt;</a> | <a href="/nodejs/api/webcrypto#class-pbkdf2params">&lt;Pbkdf2Params&gt;</a></li><li><code>baseKey</code>: <a href="/nodejs/api/webcrypto#class-cryptokey">&lt;CryptoKey&gt;</a></li><li><code>derivedKeyAlgorithm</code>: <a href="/nodejs/api/webcrypto#class-hmackeygenparams">&lt;HmacKeyGenParams&gt;</a> | <a href="/nodejs/api/webcrypto#class-aeskeygenparams">&lt;AesKeyGenParams&gt;</a></li><li><code>extractable</code>: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type" target="_blank" rel="noreferrer">&lt;boolean&gt;</a></li><li><code>keyUsages</code>: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string[]&gt;</a> See <a href="/nodejs/api/webcrypto#cryptokeyusages">Key usages</a>.</li><li>Returns: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise" target="_blank" rel="noreferrer">&lt;Promise&gt;</a> Fulfills with a <a href="/nodejs/api/webcrypto#class-cryptokey">&lt;CryptoKey&gt;</a></li></ul><p>Using the method and parameters specified in <code>algorithm</code>, and the keying material provided by <code>baseKey</code>, <code>subtle.deriveKey()</code> attempts to generate a new <a href="/nodejs/api/webcrypto#class-cryptokey">&lt;CryptoKey&gt;</a> based on the method and parameters in <code>derivedKeyAlgorithm</code>.</p><p>Calling <code>subtle.deriveKey()</code> is equivalent to calling <code>subtle.deriveBits()</code> to generate raw keying material, then passing the result into the <code>subtle.importKey()</code> method using the <code>deriveKeyAlgorithm</code>, <code>extractable</code>, and <code>keyUsages</code> parameters as input.</p><p>The algorithms currently supported include:</p><ul><li><code>&#39;ECDH&#39;</code></li><li><code>&#39;X25519&#39;</code></li><li><code>&#39;X448&#39;</code></li><li><code>&#39;HKDF&#39;</code></li><li><code>&#39;PBKDF2&#39;</code></li></ul><h3 id="subtledigestalgorithm-data" tabindex="-1"><code>subtle.digest(algorithm, data)</code> <a class="header-anchor" href="#subtledigestalgorithm-data" aria-label="Permalink to “subtle.digest(algorithm, data)”">​</a></h3><p><strong>Added in: v15.0.0</strong></p><ul><li><code>algorithm</code>: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object&gt;</a></li><li><code>data</code>: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer" target="_blank" rel="noreferrer">&lt;ArrayBuffer&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray" target="_blank" rel="noreferrer">&lt;TypedArray&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView" target="_blank" rel="noreferrer">&lt;DataView&gt;</a> | <a href="/nodejs/api/buffer#class-buffer">&lt;Buffer&gt;</a></li><li>Returns: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise" target="_blank" rel="noreferrer">&lt;Promise&gt;</a> Fulfills with an <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer" target="_blank" rel="noreferrer">&lt;ArrayBuffer&gt;</a></li></ul><p>Using the method identified by <code>algorithm</code>, <code>subtle.digest()</code> attempts to generate a digest of <code>data</code>. If successful, the returned promise is resolved with an <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer" target="_blank" rel="noreferrer">&lt;ArrayBuffer&gt;</a> containing the computed digest.</p><p>If <code>algorithm</code> is provided as a <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a>, it must be one of:</p><ul><li><code>&#39;SHA-1&#39;</code></li><li><code>&#39;SHA-256&#39;</code></li><li><code>&#39;SHA-384&#39;</code></li><li><code>&#39;SHA-512&#39;</code></li></ul><p>If <code>algorithm</code> is provided as an <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object&gt;</a>, it must have a <code>name</code> property whose value is one of the above.</p><h3 id="subtleencryptalgorithm-key-data" tabindex="-1"><code>subtle.encrypt(algorithm, key, data)</code> <a class="header-anchor" href="#subtleencryptalgorithm-key-data" aria-label="Permalink to “subtle.encrypt(algorithm, key, data)”">​</a></h3><p><strong>Added in: v15.0.0</strong></p><ul><li><code>algorithm</code>: <a href="/nodejs/api/webcrypto#class-rsaoaepparams">&lt;RsaOaepParams&gt;</a> | <a href="/nodejs/api/webcrypto#class-aesctrparams">&lt;AesCtrParams&gt;</a> | <a href="/nodejs/api/webcrypto#class-aescbcparams">&lt;AesCbcParams&gt;</a> | <a href="/nodejs/api/webcrypto#class-aesgcmparams">&lt;AesGcmParams&gt;</a></li><li><code>key</code>: <a href="/nodejs/api/webcrypto#class-cryptokey">&lt;CryptoKey&gt;</a></li><li><code>data</code>: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer" target="_blank" rel="noreferrer">&lt;ArrayBuffer&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray" target="_blank" rel="noreferrer">&lt;TypedArray&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView" target="_blank" rel="noreferrer">&lt;DataView&gt;</a> | <a href="/nodejs/api/buffer#class-buffer">&lt;Buffer&gt;</a></li><li>Returns: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise" target="_blank" rel="noreferrer">&lt;Promise&gt;</a> Fulfills with an <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer" target="_blank" rel="noreferrer">&lt;ArrayBuffer&gt;</a></li></ul><p>Using the method and parameters specified by <code>algorithm</code> and the keying material provided by <code>key</code>, <code>subtle.encrypt()</code> attempts to encipher <code>data</code>. If successful, the returned promise is resolved with an <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer" target="_blank" rel="noreferrer">&lt;ArrayBuffer&gt;</a> containing the encrypted result.</p><p>The algorithms currently supported include:</p><ul><li><code>&#39;RSA-OAEP&#39;</code></li><li><code>&#39;AES-CTR&#39;</code></li><li><code>&#39;AES-CBC&#39;</code></li><li><code>&#39;AES-GCM&#39;</code></li></ul><h3 id="subtleexportkeyformat-key" tabindex="-1"><code>subtle.exportKey(format, key)</code> <a class="header-anchor" href="#subtleexportkeyformat-key" aria-label="Permalink to “subtle.exportKey(format, key)”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v18.4.0, v16.17.0</td><td>Added <code>&#39;Ed25519&#39;</code>, <code>&#39;Ed448&#39;</code>, <code>&#39;X25519&#39;</code>, and <code>&#39;X448&#39;</code> algorithms.</td></tr><tr><td>v15.9.0</td><td>Removed <code>&#39;NODE-DSA&#39;</code> JWK export.</td></tr><tr><td>v15.0.0</td><td>Added in: v15.0.0</td></tr></tbody></table></div><ul><li><code>format</code>: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> Must be one of <code>&#39;raw&#39;</code>, <code>&#39;pkcs8&#39;</code>, <code>&#39;spki&#39;</code>, or <code>&#39;jwk&#39;</code>.</li><li><code>key</code>: <a href="/nodejs/api/webcrypto#class-cryptokey">&lt;CryptoKey&gt;</a></li><li>Returns: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise" target="_blank" rel="noreferrer">&lt;Promise&gt;</a> Fulfills with an <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer" target="_blank" rel="noreferrer">&lt;ArrayBuffer&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object&gt;</a>.</li></ul><p>Exports the given key into the specified format, if supported.</p><p>If the <a href="/nodejs/api/webcrypto#class-cryptokey">&lt;CryptoKey&gt;</a> is not extractable, the returned promise will reject.</p><p>When <code>format</code> is either <code>&#39;pkcs8&#39;</code> or <code>&#39;spki&#39;</code> and the export is successful, the returned promise will be resolved with an <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer" target="_blank" rel="noreferrer">&lt;ArrayBuffer&gt;</a> containing the exported key data.</p><p>When <code>format</code> is <code>&#39;jwk&#39;</code> and the export is successful, the returned promise will be resolved with a JavaScript object conforming to the <a href="https://tools.ietf.org/html/rfc7517" target="_blank" rel="noreferrer">JSON Web Key</a> specification.</p><table tabindex="0"><thead><tr><th>Key Type</th><th><code>&#39;spki&#39;</code></th><th><code>&#39;pkcs8&#39;</code></th><th><code>&#39;jwk&#39;</code></th><th><code>&#39;raw&#39;</code></th></tr></thead><tbody><tr><td><code>&#39;AES-CBC&#39;</code></td><td></td><td></td><td>✔</td><td>✔</td></tr><tr><td><code>&#39;AES-CTR&#39;</code></td><td></td><td></td><td>✔</td><td>✔</td></tr><tr><td><code>&#39;AES-GCM&#39;</code></td><td></td><td></td><td>✔</td><td>✔</td></tr><tr><td><code>&#39;AES-KW&#39;</code></td><td></td><td></td><td>✔</td><td>✔</td></tr><tr><td><code>&#39;ECDH&#39;</code></td><td>✔</td><td>✔</td><td>✔</td><td>✔</td></tr><tr><td><code>&#39;ECDSA&#39;</code></td><td>✔</td><td>✔</td><td>✔</td><td>✔</td></tr><tr><td><code>&#39;Ed25519&#39;</code></td><td>✔</td><td>✔</td><td>✔</td><td>✔</td></tr><tr><td><code>&#39;Ed448&#39;</code></td><td>✔</td><td>✔</td><td>✔</td><td>✔</td></tr><tr><td><code>&#39;HDKF&#39;</code></td><td></td><td></td><td></td><td></td></tr><tr><td><code>&#39;HMAC&#39;</code></td><td></td><td></td><td>✔</td><td>✔</td></tr><tr><td><code>&#39;PBKDF2&#39;</code></td><td></td><td></td><td></td><td></td></tr><tr><td><code>&#39;RSA-OAEP&#39;</code></td><td>✔</td><td>✔</td><td>✔</td><td></td></tr><tr><td><code>&#39;RSA-PSS&#39;</code></td><td>✔</td><td>✔</td><td>✔</td><td></td></tr><tr><td><code>&#39;RSASSA-PKCS1-v1_5&#39;</code></td><td>✔</td><td>✔</td><td>✔</td><td></td></tr></tbody></table><h3 id="subtlegeneratekeyalgorithm-extractable-keyusages" tabindex="-1"><code>subtle.generateKey(algorithm, extractable, keyUsages)</code> <a class="header-anchor" href="#subtlegeneratekeyalgorithm-extractable-keyusages" aria-label="Permalink to “subtle.generateKey(algorithm, extractable, keyUsages)”">​</a></h3><p><strong>Added in: v15.0.0</strong></p><ul><li><p><code>algorithm</code>: <a href="/nodejs/api/webcrypto#class-algorithmidentifier">&lt;AlgorithmIdentifier&gt;</a> | <a href="/nodejs/api/webcrypto#class-rsahashedkeygenparams">&lt;RsaHashedKeyGenParams&gt;</a> | <a href="/nodejs/api/webcrypto#class-eckeygenparams">&lt;EcKeyGenParams&gt;</a> | <a href="/nodejs/api/webcrypto#class-hmackeygenparams">&lt;HmacKeyGenParams&gt;</a> | <a href="/nodejs/api/webcrypto#class-aeskeygenparams">&lt;AesKeyGenParams&gt;</a></p></li><li><p><code>extractable</code>: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type" target="_blank" rel="noreferrer">&lt;boolean&gt;</a></p></li><li><p><code>keyUsages</code>: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string[]&gt;</a> See <a href="/nodejs/api/webcrypto#cryptokeyusages">Key usages</a>.</p></li><li><p>Returns: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise" target="_blank" rel="noreferrer">&lt;Promise&gt;</a> Fulfills with a <a href="/nodejs/api/webcrypto#class-cryptokey">&lt;CryptoKey&gt;</a> | <a href="/nodejs/api/webcrypto#class-cryptokeypair">&lt;CryptoKeyPair&gt;</a></p></li></ul><p>Using the method and parameters provided in <code>algorithm</code>, <code>subtle.generateKey()</code> attempts to generate new keying material. Depending the method used, the method may generate either a single <a href="/nodejs/api/webcrypto#class-cryptokey">&lt;CryptoKey&gt;</a> or a <a href="/nodejs/api/webcrypto#class-cryptokeypair">&lt;CryptoKeyPair&gt;</a>.</p><p>The <a href="/nodejs/api/webcrypto#class-cryptokeypair">&lt;CryptoKeyPair&gt;</a> (public and private key) generating algorithms supported include:</p><ul><li><code>&#39;RSASSA-PKCS1-v1_5&#39;</code></li><li><code>&#39;RSA-PSS&#39;</code></li><li><code>&#39;RSA-OAEP&#39;</code></li><li><code>&#39;ECDSA&#39;</code></li><li><code>&#39;Ed25519&#39;</code></li><li><code>&#39;Ed448&#39;</code></li><li><code>&#39;ECDH&#39;</code></li><li><code>&#39;X25519&#39;</code></li><li><code>&#39;X448&#39;</code></li></ul><p>The <a href="/nodejs/api/webcrypto#class-cryptokey">&lt;CryptoKey&gt;</a> (secret key) generating algorithms supported include:</p><ul><li><code>&#39;HMAC&#39;</code></li><li><code>&#39;AES-CTR&#39;</code></li><li><code>&#39;AES-CBC&#39;</code></li><li><code>&#39;AES-GCM&#39;</code></li><li><code>&#39;AES-KW&#39;</code></li></ul><h3 id="subtleimportkeyformat-keydata-algorithm-extractable-keyusages" tabindex="-1"><code>subtle.importKey(format, keyData, algorithm, extractable, keyUsages)</code> <a class="header-anchor" href="#subtleimportkeyformat-keydata-algorithm-extractable-keyusages" aria-label="Permalink to “subtle.importKey(format, keyData, algorithm, extractable, keyUsages)”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v18.4.0, v16.17.0</td><td>Added <code>&#39;Ed25519&#39;</code>, <code>&#39;Ed448&#39;</code>, <code>&#39;X25519&#39;</code>, and <code>&#39;X448&#39;</code> algorithms.</td></tr><tr><td>v15.9.0</td><td>Removed <code>&#39;NODE-DSA&#39;</code> JWK import.</td></tr><tr><td>v15.0.0</td><td>Added in: v15.0.0</td></tr></tbody></table></div><ul><li><p><code>format</code>: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> Must be one of <code>&#39;raw&#39;</code>, <code>&#39;pkcs8&#39;</code>, <code>&#39;spki&#39;</code>, or <code>&#39;jwk&#39;</code>.</p></li><li><p><code>keyData</code>: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer" target="_blank" rel="noreferrer">&lt;ArrayBuffer&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray" target="_blank" rel="noreferrer">&lt;TypedArray&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView" target="_blank" rel="noreferrer">&lt;DataView&gt;</a> | <a href="/nodejs/api/buffer#class-buffer">&lt;Buffer&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object&gt;</a></p></li><li><p><code>algorithm</code>: <a href="/nodejs/api/webcrypto#class-algorithmidentifier">&lt;AlgorithmIdentifier&gt;</a> | <a href="/nodejs/api/webcrypto#class-rsahashedimportparams">&lt;RsaHashedImportParams&gt;</a> | <a href="/nodejs/api/webcrypto#class-eckeyimportparams">&lt;EcKeyImportParams&gt;</a> | <a href="/nodejs/api/webcrypto#class-hmacimportparams">&lt;HmacImportParams&gt;</a></p></li><li><p><code>extractable</code>: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type" target="_blank" rel="noreferrer">&lt;boolean&gt;</a></p></li><li><p><code>keyUsages</code>: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string[]&gt;</a> See <a href="/nodejs/api/webcrypto#cryptokeyusages">Key usages</a>.</p></li><li><p>Returns: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise" target="_blank" rel="noreferrer">&lt;Promise&gt;</a> Fulfills with a <a href="/nodejs/api/webcrypto#class-cryptokey">&lt;CryptoKey&gt;</a></p></li></ul><p>The <code>subtle.importKey()</code> method attempts to interpret the provided <code>keyData</code> as the given <code>format</code> to create a <a href="/nodejs/api/webcrypto#class-cryptokey">&lt;CryptoKey&gt;</a> instance using the provided <code>algorithm</code>, <code>extractable</code>, and <code>keyUsages</code> arguments. If the import is successful, the returned promise will be resolved with the created <a href="/nodejs/api/webcrypto#class-cryptokey">&lt;CryptoKey&gt;</a>.</p><p>If importing a <code>&#39;PBKDF2&#39;</code> key, <code>extractable</code> must be <code>false</code>.</p><p>The algorithms currently supported include:</p><table tabindex="0"><thead><tr><th>Key Type</th><th><code>&#39;spki&#39;</code></th><th><code>&#39;pkcs8&#39;</code></th><th><code>&#39;jwk&#39;</code></th><th><code>&#39;raw&#39;</code></th></tr></thead><tbody><tr><td><code>&#39;AES-CBC&#39;</code></td><td></td><td></td><td>✔</td><td>✔</td></tr><tr><td><code>&#39;AES-CTR&#39;</code></td><td></td><td></td><td>✔</td><td>✔</td></tr><tr><td><code>&#39;AES-GCM&#39;</code></td><td></td><td></td><td>✔</td><td>✔</td></tr><tr><td><code>&#39;AES-KW&#39;</code></td><td></td><td></td><td>✔</td><td>✔</td></tr><tr><td><code>&#39;ECDH&#39;</code></td><td>✔</td><td>✔</td><td>✔</td><td>✔</td></tr><tr><td><code>&#39;X25519&#39;</code></td><td>✔</td><td>✔</td><td>✔</td><td>✔</td></tr><tr><td><code>&#39;X448&#39;</code></td><td>✔</td><td>✔</td><td>✔</td><td>✔</td></tr><tr><td><code>&#39;ECDSA&#39;</code></td><td>✔</td><td>✔</td><td>✔</td><td>✔</td></tr><tr><td><code>&#39;Ed25519&#39;</code></td><td>✔</td><td>✔</td><td>✔</td><td>✔</td></tr><tr><td><code>&#39;Ed448&#39;</code></td><td>✔</td><td>✔</td><td>✔</td><td>✔</td></tr><tr><td><code>&#39;HDKF&#39;</code></td><td></td><td></td><td></td><td>✔</td></tr><tr><td><code>&#39;HMAC&#39;</code></td><td></td><td></td><td>✔</td><td>✔</td></tr><tr><td><code>&#39;PBKDF2&#39;</code></td><td></td><td></td><td></td><td>✔</td></tr><tr><td><code>&#39;RSA-OAEP&#39;</code></td><td>✔</td><td>✔</td><td>✔</td><td></td></tr><tr><td><code>&#39;RSA-PSS&#39;</code></td><td>✔</td><td>✔</td><td>✔</td><td></td></tr><tr><td><code>&#39;RSASSA-PKCS1-v1_5&#39;</code></td><td>✔</td><td>✔</td><td>✔</td><td></td></tr></tbody></table><h3 id="subtlesignalgorithm-key-data" tabindex="-1"><code>subtle.sign(algorithm, key, data)</code> <a class="header-anchor" href="#subtlesignalgorithm-key-data" aria-label="Permalink to “subtle.sign(algorithm, key, data)”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v18.4.0, v16.17.0</td><td>Added <code>&#39;Ed25519&#39;</code>, and <code>&#39;Ed448&#39;</code> algorithms.</td></tr><tr><td>v15.0.0</td><td>Added in: v15.0.0</td></tr></tbody></table></div><ul><li><code>algorithm</code>: <a href="/nodejs/api/webcrypto#class-algorithmidentifier">&lt;AlgorithmIdentifier&gt;</a> | <a href="/nodejs/api/webcrypto#class-rsapssparams">&lt;RsaPssParams&gt;</a> | <a href="/nodejs/api/webcrypto#class-ecdsaparams">&lt;EcdsaParams&gt;</a> | <a href="/nodejs/api/webcrypto#class-ed448params">&lt;Ed448Params&gt;</a></li><li><code>key</code>: <a href="/nodejs/api/webcrypto#class-cryptokey">&lt;CryptoKey&gt;</a></li><li><code>data</code>: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer" target="_blank" rel="noreferrer">&lt;ArrayBuffer&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray" target="_blank" rel="noreferrer">&lt;TypedArray&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView" target="_blank" rel="noreferrer">&lt;DataView&gt;</a> | <a href="/nodejs/api/buffer#class-buffer">&lt;Buffer&gt;</a></li><li>Returns: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise" target="_blank" rel="noreferrer">&lt;Promise&gt;</a> Fulfills with an <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer" target="_blank" rel="noreferrer">&lt;ArrayBuffer&gt;</a></li></ul><p>Using the method and parameters given by <code>algorithm</code> and the keying material provided by <code>key</code>, <code>subtle.sign()</code> attempts to generate a cryptographic signature of <code>data</code>. If successful, the returned promise is resolved with an <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer" target="_blank" rel="noreferrer">&lt;ArrayBuffer&gt;</a> containing the generated signature.</p><p>The algorithms currently supported include:</p><ul><li><code>&#39;RSASSA-PKCS1-v1_5&#39;</code></li><li><code>&#39;RSA-PSS&#39;</code></li><li><code>&#39;ECDSA&#39;</code></li><li><code>&#39;Ed25519&#39;</code></li><li><code>&#39;Ed448&#39;</code></li><li><code>&#39;HMAC&#39;</code></li></ul><h3 id="subtleunwrapkeyformat-wrappedkey-unwrappingkey-unwrapalgo-unwrappedkeyalgo-extractable-keyusages" tabindex="-1"><code>subtle.unwrapKey(format, wrappedKey, unwrappingKey, unwrapAlgo, unwrappedKeyAlgo, extractable, keyUsages)</code> <a class="header-anchor" href="#subtleunwrapkeyformat-wrappedkey-unwrappingkey-unwrapalgo-unwrappedkeyalgo-extractable-keyusages" aria-label="Permalink to “subtle.unwrapKey(format, wrappedKey, unwrappingKey, unwrapAlgo, unwrappedKeyAlgo, extractable, keyUsages)”">​</a></h3><p><strong>Added in: v15.0.0</strong></p><ul><li><p><code>format</code>: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> Must be one of <code>&#39;raw&#39;</code>, <code>&#39;pkcs8&#39;</code>, <code>&#39;spki&#39;</code>, or <code>&#39;jwk&#39;</code>.</p></li><li><p><code>wrappedKey</code>: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer" target="_blank" rel="noreferrer">&lt;ArrayBuffer&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray" target="_blank" rel="noreferrer">&lt;TypedArray&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView" target="_blank" rel="noreferrer">&lt;DataView&gt;</a> | <a href="/nodejs/api/buffer#class-buffer">&lt;Buffer&gt;</a></p></li><li><p><code>unwrappingKey</code>: <a href="/nodejs/api/webcrypto#class-cryptokey">&lt;CryptoKey&gt;</a></p></li><li><p><code>unwrapAlgo</code>: <a href="/nodejs/api/webcrypto#class-algorithmidentifier">&lt;AlgorithmIdentifier&gt;</a> | <a href="/nodejs/api/webcrypto#class-rsaoaepparams">&lt;RsaOaepParams&gt;</a> | <a href="/nodejs/api/webcrypto#class-aesctrparams">&lt;AesCtrParams&gt;</a> | <a href="/nodejs/api/webcrypto#class-aescbcparams">&lt;AesCbcParams&gt;</a> | <a href="/nodejs/api/webcrypto#class-aesgcmparams">&lt;AesGcmParams&gt;</a></p></li><li><p><code>unwrappedKeyAlgo</code>: <a href="/nodejs/api/webcrypto#class-algorithmidentifier">&lt;AlgorithmIdentifier&gt;</a> | <a href="/nodejs/api/webcrypto#class-rsahashedimportparams">&lt;RsaHashedImportParams&gt;</a> | <a href="/nodejs/api/webcrypto#class-eckeyimportparams">&lt;EcKeyImportParams&gt;</a> | <a href="/nodejs/api/webcrypto#class-hmacimportparams">&lt;HmacImportParams&gt;</a></p></li><li><p><code>extractable</code>: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type" target="_blank" rel="noreferrer">&lt;boolean&gt;</a></p></li><li><p><code>keyUsages</code>: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string[]&gt;</a> See <a href="/nodejs/api/webcrypto#cryptokeyusages">Key usages</a>.</p></li><li><p>Returns: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise" target="_blank" rel="noreferrer">&lt;Promise&gt;</a> Fulfills with a <a href="/nodejs/api/webcrypto#class-cryptokey">&lt;CryptoKey&gt;</a></p></li></ul><p>In cryptography, &quot;wrapping a key&quot; refers to exporting and then encrypting the keying material. The <code>subtle.unwrapKey()</code> method attempts to decrypt a wrapped key and create a <a href="/nodejs/api/webcrypto#class-cryptokey">&lt;CryptoKey&gt;</a> instance. It is equivalent to calling <code>subtle.decrypt()</code> first on the encrypted key data (using the <code>wrappedKey</code>, <code>unwrapAlgo</code>, and <code>unwrappingKey</code> arguments as input) then passing the results in to the <code>subtle.importKey()</code> method using the <code>unwrappedKeyAlgo</code>, <code>extractable</code>, and <code>keyUsages</code> arguments as inputs. If successful, the returned promise is resolved with a <a href="/nodejs/api/webcrypto#class-cryptokey">&lt;CryptoKey&gt;</a> object.</p><p>The wrapping algorithms currently supported include:</p><ul><li><code>&#39;RSA-OAEP&#39;</code></li><li><code>&#39;AES-CTR&#39;</code></li><li><code>&#39;AES-CBC&#39;</code></li><li><code>&#39;AES-GCM&#39;</code></li><li><code>&#39;AES-KW&#39;</code></li></ul><p>The unwrapped key algorithms supported include:</p><ul><li><code>&#39;RSASSA-PKCS1-v1_5&#39;</code></li><li><code>&#39;RSA-PSS&#39;</code></li><li><code>&#39;RSA-OAEP&#39;</code></li><li><code>&#39;ECDSA&#39;</code></li><li><code>&#39;Ed25519&#39;</code></li><li><code>&#39;Ed448&#39;</code></li><li><code>&#39;ECDH&#39;</code></li><li><code>&#39;X25519&#39;</code></li><li><code>&#39;X448&#39;</code></li><li><code>&#39;HMAC&#39;</code></li><li><code>&#39;AES-CTR&#39;</code></li><li><code>&#39;AES-CBC&#39;</code></li><li><code>&#39;AES-GCM&#39;</code></li><li><code>&#39;AES-KW&#39;</code></li></ul><h3 id="subtleverifyalgorithm-key-signature-data" tabindex="-1"><code>subtle.verify(algorithm, key, signature, data)</code> <a class="header-anchor" href="#subtleverifyalgorithm-key-signature-data" aria-label="Permalink to “subtle.verify(algorithm, key, signature, data)”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v18.4.0, v16.17.0</td><td>Added <code>&#39;Ed25519&#39;</code>, and <code>&#39;Ed448&#39;</code> algorithms.</td></tr><tr><td>v15.0.0</td><td>Added in: v15.0.0</td></tr></tbody></table></div><ul><li><code>algorithm</code>: <a href="/nodejs/api/webcrypto#class-algorithmidentifier">&lt;AlgorithmIdentifier&gt;</a> | <a href="/nodejs/api/webcrypto#class-rsapssparams">&lt;RsaPssParams&gt;</a> | <a href="/nodejs/api/webcrypto#class-ecdsaparams">&lt;EcdsaParams&gt;</a> | <a href="/nodejs/api/webcrypto#class-ed448params">&lt;Ed448Params&gt;</a></li><li><code>key</code>: <a href="/nodejs/api/webcrypto#class-cryptokey">&lt;CryptoKey&gt;</a></li><li><code>signature</code>: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer" target="_blank" rel="noreferrer">&lt;ArrayBuffer&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray" target="_blank" rel="noreferrer">&lt;TypedArray&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView" target="_blank" rel="noreferrer">&lt;DataView&gt;</a> | <a href="/nodejs/api/buffer#class-buffer">&lt;Buffer&gt;</a></li><li><code>data</code>: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer" target="_blank" rel="noreferrer">&lt;ArrayBuffer&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray" target="_blank" rel="noreferrer">&lt;TypedArray&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView" target="_blank" rel="noreferrer">&lt;DataView&gt;</a> | <a href="/nodejs/api/buffer#class-buffer">&lt;Buffer&gt;</a></li><li>Returns: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise" target="_blank" rel="noreferrer">&lt;Promise&gt;</a> Fulfills with a <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type" target="_blank" rel="noreferrer">&lt;boolean&gt;</a></li></ul><p>Using the method and parameters given in <code>algorithm</code> and the keying material provided by <code>key</code>, <code>subtle.verify()</code> attempts to verify that <code>signature</code> is a valid cryptographic signature of <code>data</code>. The returned promise is resolved with either <code>true</code> or <code>false</code>.</p><p>The algorithms currently supported include:</p><ul><li><code>&#39;RSASSA-PKCS1-v1_5&#39;</code></li><li><code>&#39;RSA-PSS&#39;</code></li><li><code>&#39;ECDSA&#39;</code></li><li><code>&#39;Ed25519&#39;</code></li><li><code>&#39;Ed448&#39;</code></li><li><code>&#39;HMAC&#39;</code></li></ul><h3 id="subtlewrapkeyformat-key-wrappingkey-wrapalgo" tabindex="-1"><code>subtle.wrapKey(format, key, wrappingKey, wrapAlgo)</code> <a class="header-anchor" href="#subtlewrapkeyformat-key-wrappingkey-wrapalgo" aria-label="Permalink to “subtle.wrapKey(format, key, wrappingKey, wrapAlgo)”">​</a></h3><p><strong>Added in: v15.0.0</strong></p><ul><li><code>format</code>: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> Must be one of <code>&#39;raw&#39;</code>, <code>&#39;pkcs8&#39;</code>, <code>&#39;spki&#39;</code>, or <code>&#39;jwk&#39;</code>.</li><li><code>key</code>: <a href="/nodejs/api/webcrypto#class-cryptokey">&lt;CryptoKey&gt;</a></li><li><code>wrappingKey</code>: <a href="/nodejs/api/webcrypto#class-cryptokey">&lt;CryptoKey&gt;</a></li><li><code>wrapAlgo</code>: <a href="/nodejs/api/webcrypto#class-algorithmidentifier">&lt;AlgorithmIdentifier&gt;</a> | <a href="/nodejs/api/webcrypto#class-rsaoaepparams">&lt;RsaOaepParams&gt;</a> | <a href="/nodejs/api/webcrypto#class-aesctrparams">&lt;AesCtrParams&gt;</a> | <a href="/nodejs/api/webcrypto#class-aescbcparams">&lt;AesCbcParams&gt;</a> | <a href="/nodejs/api/webcrypto#class-aesgcmparams">&lt;AesGcmParams&gt;</a></li><li>Returns: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise" target="_blank" rel="noreferrer">&lt;Promise&gt;</a> Fulfills with an <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer" target="_blank" rel="noreferrer">&lt;ArrayBuffer&gt;</a></li></ul><p>In cryptography, &quot;wrapping a key&quot; refers to exporting and then encrypting the keying material. The <code>subtle.wrapKey()</code> method exports the keying material into the format identified by <code>format</code>, then encrypts it using the method and parameters specified by <code>wrapAlgo</code> and the keying material provided by <code>wrappingKey</code>. It is the equivalent to calling <code>subtle.exportKey()</code> using <code>format</code> and <code>key</code> as the arguments, then passing the result to the <code>subtle.encrypt()</code> method using <code>wrappingKey</code> and <code>wrapAlgo</code> as inputs. If successful, the returned promise will be resolved with an <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer" target="_blank" rel="noreferrer">&lt;ArrayBuffer&gt;</a> containing the encrypted key data.</p><p>The wrapping algorithms currently supported include:</p><ul><li><code>&#39;RSA-OAEP&#39;</code></li><li><code>&#39;AES-CTR&#39;</code></li><li><code>&#39;AES-CBC&#39;</code></li><li><code>&#39;AES-GCM&#39;</code></li><li><code>&#39;AES-KW&#39;</code></li></ul><h2 id="algorithm-parameters" tabindex="-1">Algorithm parameters <a class="header-anchor" href="#algorithm-parameters" aria-label="Permalink to “Algorithm parameters”">​</a></h2><p>The algorithm parameter objects define the methods and parameters used by the various <a href="/nodejs/api/webcrypto#class-subtlecrypto">&lt;SubtleCrypto&gt;</a> methods. While described here as &quot;classes&quot;, they are simple JavaScript dictionary objects.</p><h3 id="class-algorithmidentifier" tabindex="-1">Class: <code>AlgorithmIdentifier</code> <a class="header-anchor" href="#class-algorithmidentifier" aria-label="Permalink to “Class: AlgorithmIdentifier”">​</a></h3><p><strong>Added in: v18.4.0, v16.17.0</strong></p><h4 id="algorithmidentifiername" tabindex="-1"><code>algorithmIdentifier.name</code> <a class="header-anchor" href="#algorithmidentifiername" aria-label="Permalink to “algorithmIdentifier.name”">​</a></h4><p><strong>Added in: v18.4.0, v16.17.0</strong></p><ul><li>Type: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a></li></ul><h3 id="class-aescbcparams" tabindex="-1">Class: <code>AesCbcParams</code> <a class="header-anchor" href="#class-aescbcparams" aria-label="Permalink to “Class: AesCbcParams”">​</a></h3><p><strong>Added in: v15.0.0</strong></p><h4 id="aescbcparamsiv" tabindex="-1"><code>aesCbcParams.iv</code> <a class="header-anchor" href="#aescbcparamsiv" aria-label="Permalink to “aesCbcParams.iv”">​</a></h4><p><strong>Added in: v15.0.0</strong></p><ul><li>Type: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer" target="_blank" rel="noreferrer">&lt;ArrayBuffer&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray" target="_blank" rel="noreferrer">&lt;TypedArray&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView" target="_blank" rel="noreferrer">&lt;DataView&gt;</a> | <a href="/nodejs/api/buffer#class-buffer">&lt;Buffer&gt;</a></li></ul><p>Provides the initialization vector. It must be exactly 16-bytes in length and should be unpredictable and cryptographically random.</p><h4 id="aescbcparamsname" tabindex="-1"><code>aesCbcParams.name</code> <a class="header-anchor" href="#aescbcparamsname" aria-label="Permalink to “aesCbcParams.name”">​</a></h4><p><strong>Added in: v15.0.0</strong></p><ul><li>Type: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> Must be <code>&#39;AES-CBC&#39;</code>.</li></ul><h3 id="class-aesctrparams" tabindex="-1">Class: <code>AesCtrParams</code> <a class="header-anchor" href="#class-aesctrparams" aria-label="Permalink to “Class: AesCtrParams”">​</a></h3><p><strong>Added in: v15.0.0</strong></p><h4 id="aesctrparamscounter" tabindex="-1"><code>aesCtrParams.counter</code> <a class="header-anchor" href="#aesctrparamscounter" aria-label="Permalink to “aesCtrParams.counter”">​</a></h4><p><strong>Added in: v15.0.0</strong></p><ul><li>Type: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer" target="_blank" rel="noreferrer">&lt;ArrayBuffer&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray" target="_blank" rel="noreferrer">&lt;TypedArray&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView" target="_blank" rel="noreferrer">&lt;DataView&gt;</a> | <a href="/nodejs/api/buffer#class-buffer">&lt;Buffer&gt;</a></li></ul><p>The initial value of the counter block. This must be exactly 16 bytes long.</p><p>The <code>AES-CTR</code> method uses the rightmost <code>length</code> bits of the block as the counter and the remaining bits as the nonce.</p><h4 id="aesctrparamslength" tabindex="-1"><code>aesCtrParams.length</code> <a class="header-anchor" href="#aesctrparamslength" aria-label="Permalink to “aesCtrParams.length”">​</a></h4><p><strong>Added in: v15.0.0</strong></p><ul><li>Type: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type" target="_blank" rel="noreferrer">&lt;number&gt;</a> The number of bits in the <code>aesCtrParams.counter</code> that are to be used as the counter.</li></ul><h4 id="aesctrparamsname" tabindex="-1"><code>aesCtrParams.name</code> <a class="header-anchor" href="#aesctrparamsname" aria-label="Permalink to “aesCtrParams.name”">​</a></h4><p><strong>Added in: v15.0.0</strong></p><ul><li>Type: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> Must be <code>&#39;AES-CTR&#39;</code>.</li></ul><h3 id="class-aesgcmparams" tabindex="-1">Class: <code>AesGcmParams</code> <a class="header-anchor" href="#class-aesgcmparams" aria-label="Permalink to “Class: AesGcmParams”">​</a></h3><p><strong>Added in: v15.0.0</strong></p><h4 id="aesgcmparamsadditionaldata" tabindex="-1"><code>aesGcmParams.additionalData</code> <a class="header-anchor" href="#aesgcmparamsadditionaldata" aria-label="Permalink to “aesGcmParams.additionalData”">​</a></h4><p><strong>Added in: v15.0.0</strong></p><ul><li>Type: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer" target="_blank" rel="noreferrer">&lt;ArrayBuffer&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray" target="_blank" rel="noreferrer">&lt;TypedArray&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView" target="_blank" rel="noreferrer">&lt;DataView&gt;</a> | <a href="/nodejs/api/buffer#class-buffer">&lt;Buffer&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Undefined_type" target="_blank" rel="noreferrer">&lt;undefined&gt;</a></li></ul><p>With the AES-GCM method, the <code>additionalData</code> is extra input that is not encrypted but is included in the authentication of the data. The use of <code>additionalData</code> is optional.</p><h4 id="aesgcmparamsiv" tabindex="-1"><code>aesGcmParams.iv</code> <a class="header-anchor" href="#aesgcmparamsiv" aria-label="Permalink to “aesGcmParams.iv”">​</a></h4><p><strong>Added in: v15.0.0</strong></p><ul><li>Type: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer" target="_blank" rel="noreferrer">&lt;ArrayBuffer&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray" target="_blank" rel="noreferrer">&lt;TypedArray&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView" target="_blank" rel="noreferrer">&lt;DataView&gt;</a> | <a href="/nodejs/api/buffer#class-buffer">&lt;Buffer&gt;</a></li></ul><p>The initialization vector must be unique for every encryption operation using a given key.</p><p>Ideally, this is a deterministic 12-byte value that is computed in such a way that it is guaranteed to be unique across all invocations that use the same key. Alternatively, the initialization vector may consist of at least 12 cryptographically random bytes. For more information on constructing initialization vectors for AES-GCM, refer to Section 8 of <a href="https://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-38d.pdf" target="_blank" rel="noreferrer">NIST SP 800-38D</a>.</p><h4 id="aesgcmparamsname" tabindex="-1"><code>aesGcmParams.name</code> <a class="header-anchor" href="#aesgcmparamsname" aria-label="Permalink to “aesGcmParams.name”">​</a></h4><p><strong>Added in: v15.0.0</strong></p><ul><li>Type: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> Must be <code>&#39;AES-GCM&#39;</code>.</li></ul><h4 id="aesgcmparamstaglength" tabindex="-1"><code>aesGcmParams.tagLength</code> <a class="header-anchor" href="#aesgcmparamstaglength" aria-label="Permalink to “aesGcmParams.tagLength”">​</a></h4><p><strong>Added in: v15.0.0</strong></p><ul><li>Type: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type" target="_blank" rel="noreferrer">&lt;number&gt;</a> The size in bits of the generated authentication tag. This values must be one of <code>32</code>, <code>64</code>, <code>96</code>, <code>104</code>, <code>112</code>, <code>120</code>, or <code>128</code>. <strong>Default:</strong> <code>128</code>.</li></ul><h3 id="class-aeskeygenparams" tabindex="-1">Class: <code>AesKeyGenParams</code> <a class="header-anchor" href="#class-aeskeygenparams" aria-label="Permalink to “Class: AesKeyGenParams”">​</a></h3><p><strong>Added in: v15.0.0</strong></p><h4 id="aeskeygenparamslength" tabindex="-1"><code>aesKeyGenParams.length</code> <a class="header-anchor" href="#aeskeygenparamslength" aria-label="Permalink to “aesKeyGenParams.length”">​</a></h4><p><strong>Added in: v15.0.0</strong></p><ul><li>Type: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type" target="_blank" rel="noreferrer">&lt;number&gt;</a></li></ul><p>The length of the AES key to be generated. This must be either <code>128</code>, <code>192</code>, or <code>256</code>.</p><h4 id="aeskeygenparamsname" tabindex="-1"><code>aesKeyGenParams.name</code> <a class="header-anchor" href="#aeskeygenparamsname" aria-label="Permalink to “aesKeyGenParams.name”">​</a></h4><p><strong>Added in: v15.0.0</strong></p><ul><li>Type: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> Must be one of <code>&#39;AES-CBC&#39;</code>, <code>&#39;AES-CTR&#39;</code>, <code>&#39;AES-GCM&#39;</code>, or <code>&#39;AES-KW&#39;</code></li></ul><h3 id="class-ecdhkeyderiveparams" tabindex="-1">Class: <code>EcdhKeyDeriveParams</code> <a class="header-anchor" href="#class-ecdhkeyderiveparams" aria-label="Permalink to “Class: EcdhKeyDeriveParams”">​</a></h3><p><strong>Added in: v15.0.0</strong></p><h4 id="ecdhkeyderiveparamsname" tabindex="-1"><code>ecdhKeyDeriveParams.name</code> <a class="header-anchor" href="#ecdhkeyderiveparamsname" aria-label="Permalink to “ecdhKeyDeriveParams.name”">​</a></h4><p><strong>Added in: v15.0.0</strong></p><ul><li>Type: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> Must be <code>&#39;ECDH&#39;</code>, <code>&#39;X25519&#39;</code>, or <code>&#39;X448&#39;</code>.</li></ul><h4 id="ecdhkeyderiveparamspublic" tabindex="-1"><code>ecdhKeyDeriveParams.public</code> <a class="header-anchor" href="#ecdhkeyderiveparamspublic" aria-label="Permalink to “ecdhKeyDeriveParams.public”">​</a></h4><p><strong>Added in: v15.0.0</strong></p><ul><li>Type: <a href="/nodejs/api/webcrypto#class-cryptokey">&lt;CryptoKey&gt;</a></li></ul><p>ECDH key derivation operates by taking as input one parties private key and another parties public key -- using both to generate a common shared secret. The <code>ecdhKeyDeriveParams.public</code> property is set to the other parties public key.</p><h3 id="class-ecdsaparams" tabindex="-1">Class: <code>EcdsaParams</code> <a class="header-anchor" href="#class-ecdsaparams" aria-label="Permalink to “Class: EcdsaParams”">​</a></h3><p><strong>Added in: v15.0.0</strong></p><h4 id="ecdsaparamshash" tabindex="-1"><code>ecdsaParams.hash</code> <a class="header-anchor" href="#ecdsaparamshash" aria-label="Permalink to “ecdsaParams.hash”">​</a></h4><p><strong>Added in: v15.0.0</strong></p><ul><li>Type: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object&gt;</a></li></ul><p>If represented as a <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a>, the value must be one of:</p><ul><li><code>&#39;SHA-1&#39;</code></li><li><code>&#39;SHA-256&#39;</code></li><li><code>&#39;SHA-384&#39;</code></li><li><code>&#39;SHA-512&#39;</code></li></ul><p>If represented as an <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object&gt;</a>, the object must have a <code>name</code> property whose value is one of the above listed values.</p><h4 id="ecdsaparamsname" tabindex="-1"><code>ecdsaParams.name</code> <a class="header-anchor" href="#ecdsaparamsname" aria-label="Permalink to “ecdsaParams.name”">​</a></h4><p><strong>Added in: v15.0.0</strong></p><ul><li>Type: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> Must be <code>&#39;ECDSA&#39;</code>.</li></ul><h3 id="class-eckeygenparams" tabindex="-1">Class: <code>EcKeyGenParams</code> <a class="header-anchor" href="#class-eckeygenparams" aria-label="Permalink to “Class: EcKeyGenParams”">​</a></h3><p><strong>Added in: v15.0.0</strong></p><h4 id="eckeygenparamsname" tabindex="-1"><code>ecKeyGenParams.name</code> <a class="header-anchor" href="#eckeygenparamsname" aria-label="Permalink to “ecKeyGenParams.name”">​</a></h4><p><strong>Added in: v15.0.0</strong></p><ul><li>Type: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> Must be one of <code>&#39;ECDSA&#39;</code> or <code>&#39;ECDH&#39;</code>.</li></ul><h4 id="eckeygenparamsnamedcurve" tabindex="-1"><code>ecKeyGenParams.namedCurve</code> <a class="header-anchor" href="#eckeygenparamsnamedcurve" aria-label="Permalink to “ecKeyGenParams.namedCurve”">​</a></h4><p><strong>Added in: v15.0.0</strong></p><ul><li>Type: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> Must be one of <code>&#39;P-256&#39;</code>, <code>&#39;P-384&#39;</code>, <code>&#39;P-521&#39;</code>.</li></ul><h3 id="class-eckeyimportparams" tabindex="-1">Class: <code>EcKeyImportParams</code> <a class="header-anchor" href="#class-eckeyimportparams" aria-label="Permalink to “Class: EcKeyImportParams”">​</a></h3><p><strong>Added in: v15.0.0</strong></p><h4 id="eckeyimportparamsname" tabindex="-1"><code>ecKeyImportParams.name</code> <a class="header-anchor" href="#eckeyimportparamsname" aria-label="Permalink to “ecKeyImportParams.name”">​</a></h4><p><strong>Added in: v15.0.0</strong></p><ul><li>Type: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> Must be one of <code>&#39;ECDSA&#39;</code> or <code>&#39;ECDH&#39;</code>.</li></ul><h4 id="eckeyimportparamsnamedcurve" tabindex="-1"><code>ecKeyImportParams.namedCurve</code> <a class="header-anchor" href="#eckeyimportparamsnamedcurve" aria-label="Permalink to “ecKeyImportParams.namedCurve”">​</a></h4><p><strong>Added in: v15.0.0</strong></p><ul><li>Type: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> Must be one of <code>&#39;P-256&#39;</code>, <code>&#39;P-384&#39;</code>, <code>&#39;P-521&#39;</code>.</li></ul><h3 id="class-ed448params" tabindex="-1">Class: <code>Ed448Params</code> <a class="header-anchor" href="#class-ed448params" aria-label="Permalink to “Class: Ed448Params”">​</a></h3><p><strong>Added in: v15.0.0</strong></p><h4 id="ed448paramsname" tabindex="-1"><code>ed448Params.name</code> <a class="header-anchor" href="#ed448paramsname" aria-label="Permalink to “ed448Params.name”">​</a></h4><p><strong>Added in: v18.4.0, v16.17.0</strong></p><ul><li>Type: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> Must be <code>&#39;Ed448&#39;</code>.</li></ul><h4 id="ed448paramscontext" tabindex="-1"><code>ed448Params.context</code> <a class="header-anchor" href="#ed448paramscontext" aria-label="Permalink to “ed448Params.context”">​</a></h4><p><strong>Added in: v18.4.0, v16.17.0</strong></p><ul><li>Type: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer" target="_blank" rel="noreferrer">&lt;ArrayBuffer&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray" target="_blank" rel="noreferrer">&lt;TypedArray&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView" target="_blank" rel="noreferrer">&lt;DataView&gt;</a> | <a href="/nodejs/api/buffer#class-buffer">&lt;Buffer&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Undefined_type" target="_blank" rel="noreferrer">&lt;undefined&gt;</a></li></ul><p>The <code>context</code> member represents the optional context data to associate with the message. The Node.js Web Crypto API implementation only supports zero-length context which is equivalent to not providing context at all.</p><h3 id="class-hkdfparams" tabindex="-1">Class: <code>HkdfParams</code> <a class="header-anchor" href="#class-hkdfparams" aria-label="Permalink to “Class: HkdfParams”">​</a></h3><p><strong>Added in: v15.0.0</strong></p><h4 id="hkdfparamshash" tabindex="-1"><code>hkdfParams.hash</code> <a class="header-anchor" href="#hkdfparamshash" aria-label="Permalink to “hkdfParams.hash”">​</a></h4><p><strong>Added in: v15.0.0</strong></p><ul><li>Type: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object&gt;</a></li></ul><p>If represented as a <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a>, the value must be one of:</p><ul><li><code>&#39;SHA-1&#39;</code></li><li><code>&#39;SHA-256&#39;</code></li><li><code>&#39;SHA-384&#39;</code></li><li><code>&#39;SHA-512&#39;</code></li></ul><p>If represented as an <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object&gt;</a>, the object must have a <code>name</code> property whose value is one of the above listed values.</p><h4 id="hkdfparamsinfo" tabindex="-1"><code>hkdfParams.info</code> <a class="header-anchor" href="#hkdfparamsinfo" aria-label="Permalink to “hkdfParams.info”">​</a></h4><p><strong>Added in: v15.0.0</strong></p><ul><li>Type: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer" target="_blank" rel="noreferrer">&lt;ArrayBuffer&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray" target="_blank" rel="noreferrer">&lt;TypedArray&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView" target="_blank" rel="noreferrer">&lt;DataView&gt;</a> | <a href="/nodejs/api/buffer#class-buffer">&lt;Buffer&gt;</a></li></ul><p>Provides application-specific contextual input to the HKDF algorithm. This can be zero-length but must be provided.</p><h4 id="hkdfparamsname" tabindex="-1"><code>hkdfParams.name</code> <a class="header-anchor" href="#hkdfparamsname" aria-label="Permalink to “hkdfParams.name”">​</a></h4><p><strong>Added in: v15.0.0</strong></p><ul><li>Type: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> Must be <code>&#39;HKDF&#39;</code>.</li></ul><h4 id="hkdfparamssalt" tabindex="-1"><code>hkdfParams.salt</code> <a class="header-anchor" href="#hkdfparamssalt" aria-label="Permalink to “hkdfParams.salt”">​</a></h4><p><strong>Added in: v15.0.0</strong></p><ul><li>Type: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer" target="_blank" rel="noreferrer">&lt;ArrayBuffer&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray" target="_blank" rel="noreferrer">&lt;TypedArray&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView" target="_blank" rel="noreferrer">&lt;DataView&gt;</a> | <a href="/nodejs/api/buffer#class-buffer">&lt;Buffer&gt;</a></li></ul><p>The salt value significantly improves the strength of the HKDF algorithm. It should be random or pseudorandom and should be the same length as the output of the digest function (for instance, if using <code>&#39;SHA-256&#39;</code> as the digest, the salt should be 256-bits of random data).</p><h3 id="class-hmacimportparams" tabindex="-1">Class: <code>HmacImportParams</code> <a class="header-anchor" href="#class-hmacimportparams" aria-label="Permalink to “Class: HmacImportParams”">​</a></h3><p><strong>Added in: v15.0.0</strong></p><h4 id="hmacimportparamshash" tabindex="-1"><code>hmacImportParams.hash</code> <a class="header-anchor" href="#hmacimportparamshash" aria-label="Permalink to “hmacImportParams.hash”">​</a></h4><p><strong>Added in: v15.0.0</strong></p><ul><li>Type: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object&gt;</a></li></ul><p>If represented as a <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a>, the value must be one of:</p><ul><li><code>&#39;SHA-1&#39;</code></li><li><code>&#39;SHA-256&#39;</code></li><li><code>&#39;SHA-384&#39;</code></li><li><code>&#39;SHA-512&#39;</code></li></ul><p>If represented as an <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object&gt;</a>, the object must have a <code>name</code> property whose value is one of the above listed values.</p><h4 id="hmacimportparamslength" tabindex="-1"><code>hmacImportParams.length</code> <a class="header-anchor" href="#hmacimportparamslength" aria-label="Permalink to “hmacImportParams.length”">​</a></h4><p><strong>Added in: v15.0.0</strong></p><ul><li>Type: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type" target="_blank" rel="noreferrer">&lt;number&gt;</a></li></ul><p>The optional number of bits in the HMAC key. This is optional and should be omitted for most cases.</p><h4 id="hmacimportparamsname" tabindex="-1"><code>hmacImportParams.name</code> <a class="header-anchor" href="#hmacimportparamsname" aria-label="Permalink to “hmacImportParams.name”">​</a></h4><p><strong>Added in: v15.0.0</strong></p><ul><li>Type: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> Must be <code>&#39;HMAC&#39;</code>.</li></ul><h3 id="class-hmackeygenparams" tabindex="-1">Class: <code>HmacKeyGenParams</code> <a class="header-anchor" href="#class-hmackeygenparams" aria-label="Permalink to “Class: HmacKeyGenParams”">​</a></h3><p><strong>Added in: v15.0.0</strong></p><h4 id="hmackeygenparamshash" tabindex="-1"><code>hmacKeyGenParams.hash</code> <a class="header-anchor" href="#hmackeygenparamshash" aria-label="Permalink to “hmacKeyGenParams.hash”">​</a></h4><p><strong>Added in: v15.0.0</strong></p><ul><li>Type: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object&gt;</a></li></ul><p>If represented as a <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a>, the value must be one of:</p><ul><li><code>&#39;SHA-1&#39;</code></li><li><code>&#39;SHA-256&#39;</code></li><li><code>&#39;SHA-384&#39;</code></li><li><code>&#39;SHA-512&#39;</code></li></ul><p>If represented as an <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object&gt;</a>, the object must have a <code>name</code> property whose value is one of the above listed values.</p><h4 id="hmackeygenparamslength" tabindex="-1"><code>hmacKeyGenParams.length</code> <a class="header-anchor" href="#hmackeygenparamslength" aria-label="Permalink to “hmacKeyGenParams.length”">​</a></h4><p><strong>Added in: v15.0.0</strong></p><ul><li>Type: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type" target="_blank" rel="noreferrer">&lt;number&gt;</a></li></ul><p>The number of bits to generate for the HMAC key. If omitted, the length will be determined by the hash algorithm used. This is optional and should be omitted for most cases.</p><h4 id="hmackeygenparamsname" tabindex="-1"><code>hmacKeyGenParams.name</code> <a class="header-anchor" href="#hmackeygenparamsname" aria-label="Permalink to “hmacKeyGenParams.name”">​</a></h4><p><strong>Added in: v15.0.0</strong></p><ul><li>Type: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> Must be <code>&#39;HMAC&#39;</code>.</li></ul><h3 id="class-pbkdf2params" tabindex="-1">Class: <code>Pbkdf2Params</code> <a class="header-anchor" href="#class-pbkdf2params" aria-label="Permalink to “Class: Pbkdf2Params”">​</a></h3><p><strong>Added in: v15.0.0</strong></p><h4 id="pbkdb2paramshash" tabindex="-1"><code>pbkdb2Params.hash</code> <a class="header-anchor" href="#pbkdb2paramshash" aria-label="Permalink to “pbkdb2Params.hash”">​</a></h4><p><strong>Added in: v15.0.0</strong></p><ul><li>Type: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object&gt;</a></li></ul><p>If represented as a <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a>, the value must be one of:</p><ul><li><code>&#39;SHA-1&#39;</code></li><li><code>&#39;SHA-256&#39;</code></li><li><code>&#39;SHA-384&#39;</code></li><li><code>&#39;SHA-512&#39;</code></li></ul><p>If represented as an <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object&gt;</a>, the object must have a <code>name</code> property whose value is one of the above listed values.</p><h4 id="pbkdf2paramsiterations" tabindex="-1"><code>pbkdf2Params.iterations</code> <a class="header-anchor" href="#pbkdf2paramsiterations" aria-label="Permalink to “pbkdf2Params.iterations”">​</a></h4><p><strong>Added in: v15.0.0</strong></p><ul><li>Type: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type" target="_blank" rel="noreferrer">&lt;number&gt;</a></li></ul><p>The number of iterations the PBKDF2 algorithm should make when deriving bits.</p><h4 id="pbkdf2paramsname" tabindex="-1"><code>pbkdf2Params.name</code> <a class="header-anchor" href="#pbkdf2paramsname" aria-label="Permalink to “pbkdf2Params.name”">​</a></h4><p><strong>Added in: v15.0.0</strong></p><ul><li>Type: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> Must be <code>&#39;PBKDF2&#39;</code>.</li></ul><h4 id="pbkdf2paramssalt" tabindex="-1"><code>pbkdf2Params.salt</code> <a class="header-anchor" href="#pbkdf2paramssalt" aria-label="Permalink to “pbkdf2Params.salt”">​</a></h4><p><strong>Added in: v15.0.0</strong></p><ul><li>Type: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer" target="_blank" rel="noreferrer">&lt;ArrayBuffer&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray" target="_blank" rel="noreferrer">&lt;TypedArray&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView" target="_blank" rel="noreferrer">&lt;DataView&gt;</a> | <a href="/nodejs/api/buffer#class-buffer">&lt;Buffer&gt;</a></li></ul><p>Should be at least 16 random or pseudorandom bytes.</p><h3 id="class-rsahashedimportparams" tabindex="-1">Class: <code>RsaHashedImportParams</code> <a class="header-anchor" href="#class-rsahashedimportparams" aria-label="Permalink to “Class: RsaHashedImportParams”">​</a></h3><p><strong>Added in: v15.0.0</strong></p><h4 id="rsahashedimportparamshash" tabindex="-1"><code>rsaHashedImportParams.hash</code> <a class="header-anchor" href="#rsahashedimportparamshash" aria-label="Permalink to “rsaHashedImportParams.hash”">​</a></h4><p><strong>Added in: v15.0.0</strong></p><ul><li>Type: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object&gt;</a></li></ul><p>If represented as a <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a>, the value must be one of:</p><ul><li><code>&#39;SHA-1&#39;</code></li><li><code>&#39;SHA-256&#39;</code></li><li><code>&#39;SHA-384&#39;</code></li><li><code>&#39;SHA-512&#39;</code></li></ul><p>If represented as an <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object&gt;</a>, the object must have a <code>name</code> property whose value is one of the above listed values.</p><h4 id="rsahashedimportparamsname" tabindex="-1"><code>rsaHashedImportParams.name</code> <a class="header-anchor" href="#rsahashedimportparamsname" aria-label="Permalink to “rsaHashedImportParams.name”">​</a></h4><p><strong>Added in: v15.0.0</strong></p><ul><li>Type: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> Must be one of <code>&#39;RSASSA-PKCS1-v1_5&#39;</code>, <code>&#39;RSA-PSS&#39;</code>, or <code>&#39;RSA-OAEP&#39;</code>.</li></ul><h3 id="class-rsahashedkeygenparams" tabindex="-1">Class: <code>RsaHashedKeyGenParams</code> <a class="header-anchor" href="#class-rsahashedkeygenparams" aria-label="Permalink to “Class: RsaHashedKeyGenParams”">​</a></h3><p><strong>Added in: v15.0.0</strong></p><h4 id="rsahashedkeygenparamshash" tabindex="-1"><code>rsaHashedKeyGenParams.hash</code> <a class="header-anchor" href="#rsahashedkeygenparamshash" aria-label="Permalink to “rsaHashedKeyGenParams.hash”">​</a></h4><p><strong>Added in: v15.0.0</strong></p><ul><li>Type: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object&gt;</a></li></ul><p>If represented as a <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a>, the value must be one of:</p><ul><li><code>&#39;SHA-1&#39;</code></li><li><code>&#39;SHA-256&#39;</code></li><li><code>&#39;SHA-384&#39;</code></li><li><code>&#39;SHA-512&#39;</code></li></ul><p>If represented as an <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object&gt;</a>, the object must have a <code>name</code> property whose value is one of the above listed values.</p><h4 id="rsahashedkeygenparamsmoduluslength" tabindex="-1"><code>rsaHashedKeyGenParams.modulusLength</code> <a class="header-anchor" href="#rsahashedkeygenparamsmoduluslength" aria-label="Permalink to “rsaHashedKeyGenParams.modulusLength”">​</a></h4><p><strong>Added in: v15.0.0</strong></p><ul><li>Type: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type" target="_blank" rel="noreferrer">&lt;number&gt;</a></li></ul><p>The length in bits of the RSA modulus. As a best practice, this should be at least <code>2048</code>.</p><h4 id="rsahashedkeygenparamsname" tabindex="-1"><code>rsaHashedKeyGenParams.name</code> <a class="header-anchor" href="#rsahashedkeygenparamsname" aria-label="Permalink to “rsaHashedKeyGenParams.name”">​</a></h4><p><strong>Added in: v15.0.0</strong></p><ul><li>Type: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> Must be one of <code>&#39;RSASSA-PKCS1-v1_5&#39;</code>, <code>&#39;RSA-PSS&#39;</code>, or <code>&#39;RSA-OAEP&#39;</code>.</li></ul><h4 id="rsahashedkeygenparamspublicexponent" tabindex="-1"><code>rsaHashedKeyGenParams.publicExponent</code> <a class="header-anchor" href="#rsahashedkeygenparamspublicexponent" aria-label="Permalink to “rsaHashedKeyGenParams.publicExponent”">​</a></h4><p><strong>Added in: v15.0.0</strong></p><ul><li>Type: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array" target="_blank" rel="noreferrer">&lt;Uint8Array&gt;</a></li></ul><p>The RSA public exponent. This must be a <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array" target="_blank" rel="noreferrer">&lt;Uint8Array&gt;</a> containing a big-endian, unsigned integer that must fit within 32-bits. The <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array" target="_blank" rel="noreferrer">&lt;Uint8Array&gt;</a> may contain an arbitrary number of leading zero-bits. The value must be a prime number. Unless there is reason to use a different value, use <code>new Uint8Array([1, 0, 1])</code> (65537) as the public exponent.</p><h3 id="class-rsaoaepparams" tabindex="-1">Class: <code>RsaOaepParams</code> <a class="header-anchor" href="#class-rsaoaepparams" aria-label="Permalink to “Class: RsaOaepParams”">​</a></h3><p><strong>Added in: v15.0.0</strong></p><h4 id="rsaoaepparamslabel" tabindex="-1"><code>rsaOaepParams.label</code> <a class="header-anchor" href="#rsaoaepparamslabel" aria-label="Permalink to “rsaOaepParams.label”">​</a></h4><p><strong>Added in: v15.0.0</strong></p><ul><li>Type: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer" target="_blank" rel="noreferrer">&lt;ArrayBuffer&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray" target="_blank" rel="noreferrer">&lt;TypedArray&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView" target="_blank" rel="noreferrer">&lt;DataView&gt;</a> | <a href="/nodejs/api/buffer#class-buffer">&lt;Buffer&gt;</a></li></ul><p>An additional collection of bytes that will not be encrypted, but will be bound to the generated ciphertext.</p><p>The <code>rsaOaepParams.label</code> parameter is optional.</p><h4 id="rsaoaepparamsname" tabindex="-1"><code>rsaOaepParams.name</code> <a class="header-anchor" href="#rsaoaepparamsname" aria-label="Permalink to “rsaOaepParams.name”">​</a></h4><p><strong>Added in: v15.0.0</strong></p><ul><li>Type: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> must be <code>&#39;RSA-OAEP&#39;</code>.</li></ul><h3 id="class-rsapssparams" tabindex="-1">Class: <code>RsaPssParams</code> <a class="header-anchor" href="#class-rsapssparams" aria-label="Permalink to “Class: RsaPssParams”">​</a></h3><p><strong>Added in: v15.0.0</strong></p><h4 id="rsapssparamsname" tabindex="-1"><code>rsaPssParams.name</code> <a class="header-anchor" href="#rsapssparamsname" aria-label="Permalink to “rsaPssParams.name”">​</a></h4><p><strong>Added in: v15.0.0</strong></p><ul><li>Type: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> Must be <code>&#39;RSA-PSS&#39;</code>.</li></ul><h4 id="rsapssparamssaltlength" tabindex="-1"><code>rsaPssParams.saltLength</code> <a class="header-anchor" href="#rsapssparamssaltlength" aria-label="Permalink to “rsaPssParams.saltLength”">​</a></h4><p><strong>Added in: v15.0.0</strong></p><ul><li>Type: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type" target="_blank" rel="noreferrer">&lt;number&gt;</a></li></ul><p>The length (in bytes) of the random salt to use.</p><h2 id="footnotes" tabindex="-1">Footnotes <a class="header-anchor" href="#footnotes" aria-label="Permalink to “Footnotes”">​</a></h2>`,387)])}var s=e(a,[[`render`,o]]);export{i as __pageData,s as default};