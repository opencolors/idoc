import{__plugin_vue_export_helper_default as e,createElementBlock as t,createStaticVNode as n,openBlock as r}from"./chunks/plugin-vue_export-helper.Bts1mPc7.js";const i=JSON.parse(`{"title":"Node.js Deprecations","description":"This page documents deprecated features in Node.js, providing guidance on how to update code to avoid using outdated APIs and practices.","frontmatter":{"title":"Node.js Deprecations","description":"This page documents deprecated features in Node.js, providing guidance on how to update code to avoid using outdated APIs and practices.","head":[["meta",{"name":"og:title","content":"Node.js Deprecations | Node.js - iDoc.dev"}],["meta",{"name":"og:description","content":"This page documents deprecated features in Node.js, providing guidance on how to update code to avoid using outdated APIs and practices."}],["meta",{"name":"twitter:title","content":"Node.js Deprecations | Node.js - iDoc.dev"}],["meta",{"name":"twitter:description","content":"This page documents deprecated features in Node.js, providing guidance on how to update code to avoid using outdated APIs and practices."}],["link",{"rel":"canonical","href":"https://idoc.dev/nodejs/api/deprecations"}],["meta",{"property":"og:url","content":"https://idoc.dev/nodejs/api/deprecations"}]]},"headers":[],"relativePath":"nodejs/api/deprecations.md","filePath":"en/nodejs/api/deprecations.md","lastUpdated":null}`),a={name:`nodejs/api/deprecations.md`};function o(e,i,a,o,s,c){return r(),t(`div`,null,i[0]||=[n(`<h1 id="deprecated-apis" tabindex="-1">Deprecated APIs <a class="header-anchor" href="#deprecated-apis" aria-label="Permalink to “Deprecated APIs”">​</a></h1><p>Node.js APIs might be deprecated for any of the following reasons:</p><ul><li>Use of the API is unsafe.</li><li>An improved alternative API is available.</li><li>Breaking changes to the API are expected in a future major release.</li></ul><p>Node.js uses four kinds of deprecations:</p><ul><li>Documentation-only</li><li>Application (non-<code>node_modules</code> code only)</li><li>Runtime (all code)</li><li>End-of-Life</li></ul><p>A Documentation-only deprecation is one that is expressed only within the Node.js API docs. These generate no side-effects while running Node.js. Some Documentation-only deprecations trigger a runtime warning when launched with <a href="/nodejs/api/cli#pending-deprecation"><code>--pending-deprecation</code></a> flag (or its alternative, <code>NODE_PENDING_DEPRECATION=1</code> environment variable), similarly to Runtime deprecations below. Documentation-only deprecations that support that flag are explicitly labeled as such in the <a href="/nodejs/api/deprecations#list-of-deprecated-apis">list of Deprecated APIs</a>.</p><p>An Application deprecation for only non-<code>node_modules</code> code will, by default, generate a process warning that will be printed to <code>stderr</code> the first time the deprecated API is used in code that&#39;s not loaded from <code>node_modules</code>. When the <a href="/nodejs/api/cli#throw-deprecation"><code>--throw-deprecation</code></a> command-line flag is used, a Runtime deprecation will cause an error to be thrown. When <a href="/nodejs/api/cli#pending-deprecation"><code>--pending-deprecation</code></a> is used, warnings will also be emitted for code loaded from <code>node_modules</code>.</p><p>A runtime deprecation for all code is similar to the runtime deprecation for non-<code>node_modules</code> code, except that it also emits a warning for code loaded from <code>node_modules</code>.</p><p>An End-of-Life deprecation is used when functionality is or will soon be removed from Node.js.</p><h2 id="revoking-deprecations" tabindex="-1">Revoking deprecations <a class="header-anchor" href="#revoking-deprecations" aria-label="Permalink to “Revoking deprecations”">​</a></h2><p>Occasionally, the deprecation of an API might be reversed. In such situations, this document will be updated with information relevant to the decision. However, the deprecation identifier will not be modified.</p><h2 id="list-of-deprecated-apis" tabindex="-1">List of deprecated APIs <a class="header-anchor" href="#list-of-deprecated-apis" aria-label="Permalink to “List of deprecated APIs”">​</a></h2><h3 id="dep0001-httpoutgoingmessageprototypeflush" tabindex="-1">DEP0001: <code>http.OutgoingMessage.prototype.flush</code> <a class="header-anchor" href="#dep0001-httpoutgoingmessageprototypeflush" aria-label="Permalink to “DEP0001: http.OutgoingMessage.prototype.flush”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v14.0.0</td><td>End-of-Life.</td></tr><tr><td>v6.12.0, v4.8.6</td><td>A deprecation code has been assigned.</td></tr><tr><td>v1.6.0</td><td>Runtime deprecation.</td></tr></tbody></table></div><p>Type: End-of-Life</p><p><code>OutgoingMessage.prototype.flush()</code> has been removed. Use <code>OutgoingMessage.prototype.flushHeaders()</code> instead.</p><h3 id="dep0002-require_linklist" tabindex="-1">DEP0002: <code>require(&#39;_linklist&#39;)</code> <a class="header-anchor" href="#dep0002-require_linklist" aria-label="Permalink to “DEP0002: require(&#39;_linklist&#39;)”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v8.0.0</td><td>End-of-Life.</td></tr><tr><td>v6.12.0</td><td>A deprecation code has been assigned.</td></tr><tr><td>v5.0.0</td><td>Runtime deprecation.</td></tr></tbody></table></div><p>Type: End-of-Life</p><p>The <code>_linklist</code> module is deprecated. Please use a userland alternative.</p><h3 id="dep0003-_writablestatebuffer" tabindex="-1">DEP0003: <code>_writableState.buffer</code> <a class="header-anchor" href="#dep0003-_writablestatebuffer" aria-label="Permalink to “DEP0003: _writableState.buffer”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v14.0.0</td><td>End-of-Life.</td></tr><tr><td>v6.12.0, v4.8.6</td><td>A deprecation code has been assigned.</td></tr><tr><td>v0.11.15</td><td>Runtime deprecation.</td></tr></tbody></table></div><p>Type: End-of-Life</p><p>The <code>_writableState.buffer</code> has been removed. Use <code>_writableState.getBuffer()</code> instead.</p><h3 id="dep0004-cryptostreamprototypereadystate" tabindex="-1">DEP0004: <code>CryptoStream.prototype.readyState</code> <a class="header-anchor" href="#dep0004-cryptostreamprototypereadystate" aria-label="Permalink to “DEP0004: CryptoStream.prototype.readyState”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v10.0.0</td><td>End-of-Life.</td></tr><tr><td>v6.12.0, v4.8.6</td><td>A deprecation code has been assigned.</td></tr><tr><td>v0.4.0</td><td>Documentation-only deprecation.</td></tr></tbody></table></div><p>Type: End-of-Life</p><p>The <code>CryptoStream.prototype.readyState</code> property was removed.</p><h3 id="dep0005-buffer-constructor" tabindex="-1">DEP0005: <code>Buffer()</code> constructor <a class="header-anchor" href="#dep0005-buffer-constructor" aria-label="Permalink to “DEP0005: Buffer() constructor”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v10.0.0</td><td>Runtime deprecation.</td></tr><tr><td>v6.12.0</td><td>A deprecation code has been assigned.</td></tr><tr><td>v6.0.0</td><td>Documentation-only deprecation.</td></tr></tbody></table></div><p>Type: Application (non-<code>node_modules</code> code only)</p><p>The <code>Buffer()</code> function and <code>new Buffer()</code> constructor are deprecated due to API usability issues that can lead to accidental security issues.</p><p>As an alternative, use one of the following methods of constructing <code>Buffer</code> objects:</p><ul><li><a href="/nodejs/api/buffer#static-method-bufferallocsize-fill-encoding"><code>Buffer.alloc(size[, fill[, encoding]])</code></a>: Create a <code>Buffer</code> with <em>initialized</em> memory.</li><li><a href="/nodejs/api/buffer#static-method-bufferallocunsafesize"><code>Buffer.allocUnsafe(size)</code></a>: Create a <code>Buffer</code> with <em>uninitialized</em> memory.</li><li><a href="/nodejs/api/buffer#static-method-bufferallocunsafeslowsize"><code>Buffer.allocUnsafeSlow(size)</code></a>: Create a <code>Buffer</code> with <em>uninitialized</em> memory.</li><li><a href="/nodejs/api/buffer#static-method-bufferfromarray"><code>Buffer.from(array)</code></a>: Create a <code>Buffer</code> with a copy of <code>array</code></li><li><a href="/nodejs/api/buffer#static-method-bufferfromarraybuffer-byteoffset-length"><code>Buffer.from(arrayBuffer[, byteOffset[, length]])</code></a> - Create a <code>Buffer</code> that wraps the given <code>arrayBuffer</code>.</li><li><a href="/nodejs/api/buffer#static-method-bufferfrombuffer"><code>Buffer.from(buffer)</code></a>: Create a <code>Buffer</code> that copies <code>buffer</code>.</li><li><a href="/nodejs/api/buffer#static-method-bufferfromstring-encoding"><code>Buffer.from(string[, encoding])</code></a>: Create a <code>Buffer</code> that copies <code>string</code>.</li></ul><p>Without <code>--pending-deprecation</code>, runtime warnings occur only for code not in <code>node_modules</code>. This means there will not be deprecation warnings for <code>Buffer()</code> usage in dependencies. With <code>--pending-deprecation</code>, a runtime warning results no matter where the <code>Buffer()</code> usage occurs.</p><h3 id="dep0006-child_process-optionscustomfds" tabindex="-1">DEP0006: <code>child_process</code> <code>options.customFds</code> <a class="header-anchor" href="#dep0006-child_process-optionscustomfds" aria-label="Permalink to “DEP0006: child_process options.customFds”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v12.0.0</td><td>End-of-Life.</td></tr><tr><td>v6.12.0, v4.8.6</td><td>A deprecation code has been assigned.</td></tr><tr><td>v0.11.14</td><td>Runtime deprecation.</td></tr><tr><td>v0.5.10</td><td>Documentation-only deprecation.</td></tr></tbody></table></div><p>Type: End-of-Life</p><p>Within the <a href="/nodejs/api/child_process"><code>child_process</code></a> module&#39;s <code>spawn()</code>, <code>fork()</code>, and <code>exec()</code> methods, the <code>options.customFds</code> option is deprecated. The <code>options.stdio</code> option should be used instead.</p><h3 id="dep0007-replace-cluster-workersuicide-with-workerexitedafterdisconnect" tabindex="-1">DEP0007: Replace <code>cluster</code> <code>worker.suicide</code> with <code>worker.exitedAfterDisconnect</code> <a class="header-anchor" href="#dep0007-replace-cluster-workersuicide-with-workerexitedafterdisconnect" aria-label="Permalink to “DEP0007: Replace cluster worker.suicide with worker.exitedAfterDisconnect”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v9.0.0</td><td>End-of-Life.</td></tr><tr><td>v7.0.0</td><td>Runtime deprecation.</td></tr><tr><td>v6.12.0</td><td>A deprecation code has been assigned.</td></tr><tr><td>v6.0.0</td><td>Documentation-only deprecation.</td></tr></tbody></table></div><p>Type: End-of-Life</p><p>In an earlier version of the Node.js <code>cluster</code>, a boolean property with the name <code>suicide</code> was added to the <code>Worker</code> object. The intent of this property was to provide an indication of how and why the <code>Worker</code> instance exited. In Node.js 6.0.0, the old property was deprecated and replaced with a new <a href="/nodejs/api/cluster#workerexitedafterdisconnect"><code>worker.exitedAfterDisconnect</code></a> property. The old property name did not precisely describe the actual semantics and was unnecessarily emotion-laden.</p><h3 id="dep0008-requirenodeconstants" tabindex="-1">DEP0008: <code>require(&#39;node:constants&#39;)</code> <a class="header-anchor" href="#dep0008-requirenodeconstants" aria-label="Permalink to “DEP0008: require(&#39;node:constants&#39;)”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v6.12.0</td><td>A deprecation code has been assigned.</td></tr><tr><td>v6.3.0</td><td>Documentation-only deprecation.</td></tr></tbody></table></div><p>Type: Documentation-only</p><p>The <code>node:constants</code> module is deprecated. When requiring access to constants relevant to specific Node.js builtin modules, developers should instead refer to the <code>constants</code> property exposed by the relevant module. For instance, <code>require(&#39;node:fs&#39;).constants</code> and <code>require(&#39;node:os&#39;).constants</code>.</p><h3 id="dep0009-cryptopbkdf2-without-digest" tabindex="-1">DEP0009: <code>crypto.pbkdf2</code> without digest <a class="header-anchor" href="#dep0009-cryptopbkdf2-without-digest" aria-label="Permalink to “DEP0009: crypto.pbkdf2 without digest”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v14.0.0</td><td>End-of-Life (for <code>digest === null</code>).</td></tr><tr><td>v11.0.0</td><td>Runtime deprecation (for <code>digest === null</code>).</td></tr><tr><td>v8.0.0</td><td>End-of-Life (for <code>digest === undefined</code>).</td></tr><tr><td>v6.12.0</td><td>A deprecation code has been assigned.</td></tr><tr><td>v6.0.0</td><td>Runtime deprecation (for <code>digest === undefined</code>).</td></tr></tbody></table></div><p>Type: End-of-Life</p><p>Use of the <a href="/nodejs/api/crypto#cryptopbkdf2password-salt-iterations-keylen-digest-callback"><code>crypto.pbkdf2()</code></a> API without specifying a digest was deprecated in Node.js 6.0 because the method defaulted to using the non-recommended <code>&#39;SHA1&#39;</code> digest. Previously, a deprecation warning was printed. Starting in Node.js 8.0.0, calling <code>crypto.pbkdf2()</code> or <code>crypto.pbkdf2Sync()</code> with <code>digest</code> set to <code>undefined</code> will throw a <code>TypeError</code>.</p><p>Beginning in Node.js v11.0.0, calling these functions with <code>digest</code> set to <code>null</code> would print a deprecation warning to align with the behavior when <code>digest</code> is <code>undefined</code>.</p><p>Now, however, passing either <code>undefined</code> or <code>null</code> will throw a <code>TypeError</code>.</p><h3 id="dep0010-cryptocreatecredentials" tabindex="-1">DEP0010: <code>crypto.createCredentials</code> <a class="header-anchor" href="#dep0010-cryptocreatecredentials" aria-label="Permalink to “DEP0010: crypto.createCredentials”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v11.0.0</td><td>End-of-Life.</td></tr><tr><td>v6.12.0, v4.8.6</td><td>A deprecation code has been assigned.</td></tr><tr><td>v0.11.13</td><td>Runtime deprecation.</td></tr></tbody></table></div><p>Type: End-of-Life</p><p>The <code>crypto.createCredentials()</code> API was removed. Please use <a href="/nodejs/api/tls#tlscreatesecurecontextoptions"><code>tls.createSecureContext()</code></a> instead.</p><h3 id="dep0011-cryptocredentials" tabindex="-1">DEP0011: <code>crypto.Credentials</code> <a class="header-anchor" href="#dep0011-cryptocredentials" aria-label="Permalink to “DEP0011: crypto.Credentials”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v11.0.0</td><td>End-of-Life.</td></tr><tr><td>v6.12.0, v4.8.6</td><td>A deprecation code has been assigned.</td></tr><tr><td>v0.11.13</td><td>Runtime deprecation.</td></tr></tbody></table></div><p>Type: End-of-Life</p><p>The <code>crypto.Credentials</code> class was removed. Please use <a href="/nodejs/api/tls#tlscreatesecurecontextoptions"><code>tls.SecureContext</code></a> instead.</p><h3 id="dep0012-domaindispose" tabindex="-1">DEP0012: <code>Domain.dispose</code> <a class="header-anchor" href="#dep0012-domaindispose" aria-label="Permalink to “DEP0012: Domain.dispose”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v9.0.0</td><td>End-of-Life.</td></tr><tr><td>v6.12.0, v4.8.6</td><td>A deprecation code has been assigned.</td></tr><tr><td>v0.11.7</td><td>Runtime deprecation.</td></tr></tbody></table></div><p>Type: End-of-Life</p><p><code>Domain.dispose()</code> has been removed. Recover from failed I/O actions explicitly via error event handlers set on the domain instead.</p><h3 id="dep0013-fs-asynchronous-function-without-callback" tabindex="-1">DEP0013: <code>fs</code> asynchronous function without callback <a class="header-anchor" href="#dep0013-fs-asynchronous-function-without-callback" aria-label="Permalink to “DEP0013: fs asynchronous function without callback”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v10.0.0</td><td>End-of-Life.</td></tr><tr><td>v7.0.0</td><td>Runtime deprecation.</td></tr></tbody></table></div><p>Type: End-of-Life</p><p>Calling an asynchronous function without a callback throws a <code>TypeError</code> in Node.js 10.0.0 onwards. See <a href="https://github.com/nodejs/node/pull/12562" target="_blank" rel="noreferrer">https://github.com/nodejs/node/pull/12562</a>.</p><h3 id="dep0014-fsread-legacy-string-interface" tabindex="-1">DEP0014: <code>fs.read</code> legacy String interface <a class="header-anchor" href="#dep0014-fsread-legacy-string-interface" aria-label="Permalink to “DEP0014: fs.read legacy String interface”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v8.0.0</td><td>End-of-Life.</td></tr><tr><td>v6.0.0</td><td>Runtime deprecation.</td></tr><tr><td>v6.12.0, v4.8.6</td><td>A deprecation code has been assigned.</td></tr><tr><td>v0.1.96</td><td>Documentation-only deprecation.</td></tr></tbody></table></div><p>Type: End-of-Life</p><p>The <a href="/nodejs/api/fs#fsreadfd-buffer-offset-length-position-callback"><code>fs.read()</code></a> legacy <code>String</code> interface is deprecated. Use the <code>Buffer</code> API as mentioned in the documentation instead.</p><h3 id="dep0015-fsreadsync-legacy-string-interface" tabindex="-1">DEP0015: <code>fs.readSync</code> legacy String interface <a class="header-anchor" href="#dep0015-fsreadsync-legacy-string-interface" aria-label="Permalink to “DEP0015: fs.readSync legacy String interface”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v8.0.0</td><td>End-of-Life.</td></tr><tr><td>v6.0.0</td><td>Runtime deprecation.</td></tr><tr><td>v6.12.0, v4.8.6</td><td>A deprecation code has been assigned.</td></tr><tr><td>v0.1.96</td><td>Documentation-only deprecation.</td></tr></tbody></table></div><p>Type: End-of-Life</p><p>The <a href="/nodejs/api/fs#fsreadsyncfd-buffer-offset-length-position"><code>fs.readSync()</code></a> legacy <code>String</code> interface is deprecated. Use the <code>Buffer</code> API as mentioned in the documentation instead.</p><h3 id="dep0016-global/root" tabindex="-1">DEP0016: <code>GLOBAL</code>/<code>root</code> <a class="header-anchor" href="#dep0016-global/root" aria-label="Permalink to “DEP0016: GLOBAL/root”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v14.0.0</td><td>End-of-Life.</td></tr><tr><td>v6.12.0</td><td>A deprecation code has been assigned.</td></tr><tr><td>v6.0.0</td><td>Runtime deprecation.</td></tr></tbody></table></div><p>Type: End-of-Life</p><p>The <code>GLOBAL</code> and <code>root</code> aliases for the <code>global</code> property were deprecated in Node.js 6.0.0 and have since been removed.</p><h3 id="dep0017-intlv8breakiterator" tabindex="-1">DEP0017: <code>Intl.v8BreakIterator</code> <a class="header-anchor" href="#dep0017-intlv8breakiterator" aria-label="Permalink to “DEP0017: Intl.v8BreakIterator”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v9.0.0</td><td>End-of-Life.</td></tr><tr><td>v7.0.0</td><td>Runtime deprecation.</td></tr></tbody></table></div><p>Type: End-of-Life</p><p><code>Intl.v8BreakIterator</code> was a non-standard extension and has been removed. See <a href="https://github.com/tc39/proposal-intl-segmenter" target="_blank" rel="noreferrer"><code>Intl.Segmenter</code></a>.</p><h3 id="dep0018-unhandled-promise-rejections" tabindex="-1">DEP0018: Unhandled promise rejections <a class="header-anchor" href="#dep0018-unhandled-promise-rejections" aria-label="Permalink to “DEP0018: Unhandled promise rejections”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v15.0.0</td><td>End-of-Life.</td></tr><tr><td>v7.0.0</td><td>Runtime deprecation.</td></tr></tbody></table></div><p>Type: End-of-Life</p><p>Unhandled promise rejections are deprecated. By default, promise rejections that are not handled terminate the Node.js process with a non-zero exit code. To change the way Node.js treats unhandled rejections, use the <a href="/nodejs/api/cli#unhandled-rejectionsmode"><code>--unhandled-rejections</code></a> command-line option.</p><h3 id="dep0019-require-resolved-outside-directory" tabindex="-1">DEP0019: <code>require(&#39;.&#39;)</code> resolved outside directory <a class="header-anchor" href="#dep0019-require-resolved-outside-directory" aria-label="Permalink to “DEP0019: require(&#39;.&#39;) resolved outside directory”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v12.0.0</td><td>Removed functionality.</td></tr><tr><td>v6.12.0, v4.8.6</td><td>A deprecation code has been assigned.</td></tr><tr><td>v1.8.1</td><td>Runtime deprecation.</td></tr></tbody></table></div><p>Type: End-of-Life</p><p>In certain cases, <code>require(&#39;.&#39;)</code> could resolve outside the package directory. This behavior has been removed.</p><h3 id="dep0020-serverconnections" tabindex="-1">DEP0020: <code>Server.connections</code> <a class="header-anchor" href="#dep0020-serverconnections" aria-label="Permalink to “DEP0020: Server.connections”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v15.0.0</td><td>Server.connections has been removed.</td></tr><tr><td>v6.12.0, v4.8.6</td><td>A deprecation code has been assigned.</td></tr><tr><td>v0.9.7</td><td>Runtime deprecation.</td></tr></tbody></table></div><p>Type: End-of-Life</p><p>The <code>Server.connections</code> property was deprecated in Node.js v0.9.7 and has been removed. Please use the <a href="/nodejs/api/net#servergetconnectionscallback"><code>Server.getConnections()</code></a> method instead.</p><h3 id="dep0021-serverlistenfd" tabindex="-1">DEP0021: <code>Server.listenFD</code> <a class="header-anchor" href="#dep0021-serverlistenfd" aria-label="Permalink to “DEP0021: Server.listenFD”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v12.0.0</td><td>End-of-Life.</td></tr><tr><td>v6.12.0, v4.8.6</td><td>A deprecation code has been assigned.</td></tr><tr><td>v0.7.12</td><td>Runtime deprecation.</td></tr></tbody></table></div><p>Type: End-of-Life</p><p>The <code>Server.listenFD()</code> method was deprecated and removed. Please use <a href="/nodejs/api/net#serverlistenhandle-backlog-callback"><code>Server.listen({fd: \\&lt;number\\&gt;})</code></a> instead.</p><h3 id="dep0022-ostmpdir" tabindex="-1">DEP0022: <code>os.tmpDir()</code> <a class="header-anchor" href="#dep0022-ostmpdir" aria-label="Permalink to “DEP0022: os.tmpDir()”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v14.0.0</td><td>End-of-Life.</td></tr><tr><td>v7.0.0</td><td>Runtime deprecation.</td></tr></tbody></table></div><p>Type: End-of-Life</p><p>The <code>os.tmpDir()</code> API was deprecated in Node.js 7.0.0 and has since been removed. Please use <a href="/nodejs/api/os#ostmpdir"><code>os.tmpdir()</code></a> instead.</p><h3 id="dep0023-osgetnetworkinterfaces" tabindex="-1">DEP0023: <code>os.getNetworkInterfaces()</code> <a class="header-anchor" href="#dep0023-osgetnetworkinterfaces" aria-label="Permalink to “DEP0023: os.getNetworkInterfaces()”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v12.0.0</td><td>End-of-Life.</td></tr><tr><td>v6.12.0, v4.8.6</td><td>A deprecation code has been assigned.</td></tr><tr><td>v0.6.0</td><td>Runtime deprecation.</td></tr></tbody></table></div><p>Type: End-of-Life</p><p>The <code>os.getNetworkInterfaces()</code> method is deprecated. Please use the <a href="/nodejs/api/os#osnetworkinterfaces"><code>os.networkInterfaces()</code></a> method instead.</p><h3 id="dep0024-replserverprototypeconverttocontext" tabindex="-1">DEP0024: <code>REPLServer.prototype.convertToContext()</code> <a class="header-anchor" href="#dep0024-replserverprototypeconverttocontext" aria-label="Permalink to “DEP0024: REPLServer.prototype.convertToContext()”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v9.0.0</td><td>End-of-Life.</td></tr><tr><td>v7.0.0</td><td>Runtime deprecation.</td></tr></tbody></table></div><p>Type: End-of-Life</p><p>The <code>REPLServer.prototype.convertToContext()</code> API has been removed.</p><h3 id="dep0025-requirenodesys" tabindex="-1">DEP0025: <code>require(&#39;node:sys&#39;)</code> <a class="header-anchor" href="#dep0025-requirenodesys" aria-label="Permalink to “DEP0025: require(&#39;node:sys&#39;)”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v6.12.0, v4.8.6</td><td>A deprecation code has been assigned.</td></tr><tr><td>v1.0.0</td><td>Runtime deprecation.</td></tr></tbody></table></div><p>Type: Runtime</p><p>The <code>node:sys</code> module is deprecated. Please use the <a href="/nodejs/api/util"><code>util</code></a> module instead.</p><h3 id="dep0026-utilprint" tabindex="-1">DEP0026: <code>util.print()</code> <a class="header-anchor" href="#dep0026-utilprint" aria-label="Permalink to “DEP0026: util.print()”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v12.0.0</td><td>End-of-Life.</td></tr><tr><td>v6.12.0, v4.8.6</td><td>A deprecation code has been assigned.</td></tr><tr><td>v0.11.3</td><td>Runtime deprecation.</td></tr></tbody></table></div><p>Type: End-of-Life</p><p><code>util.print()</code> has been removed. Please use <a href="/nodejs/api/console#consolelogdata-args"><code>console.log()</code></a> instead.</p><h3 id="dep0027-utilputs" tabindex="-1">DEP0027: <code>util.puts()</code> <a class="header-anchor" href="#dep0027-utilputs" aria-label="Permalink to “DEP0027: util.puts()”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v12.0.0</td><td>End-of-Life.</td></tr><tr><td>v6.12.0, v4.8.6</td><td>A deprecation code has been assigned.</td></tr><tr><td>v0.11.3</td><td>Runtime deprecation.</td></tr></tbody></table></div><p>Type: End-of-Life</p><p><code>util.puts()</code> has been removed. Please use <a href="/nodejs/api/console#consolelogdata-args"><code>console.log()</code></a> instead.</p><h3 id="dep0028-utildebug" tabindex="-1">DEP0028: <code>util.debug()</code> <a class="header-anchor" href="#dep0028-utildebug" aria-label="Permalink to “DEP0028: util.debug()”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v12.0.0</td><td>End-of-Life.</td></tr><tr><td>v6.12.0, v4.8.6</td><td>A deprecation code has been assigned.</td></tr><tr><td>v0.11.3</td><td>Runtime deprecation.</td></tr></tbody></table></div><p>Type: End-of-Life</p><p><code>util.debug()</code> has been removed. Please use <a href="/nodejs/api/console#consoleerrordata-args"><code>console.error()</code></a> instead.</p><h3 id="dep0029-utilerror" tabindex="-1">DEP0029: <code>util.error()</code> <a class="header-anchor" href="#dep0029-utilerror" aria-label="Permalink to “DEP0029: util.error()”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v12.0.0</td><td>End-of-Life.</td></tr><tr><td>v6.12.0, v4.8.6</td><td>A deprecation code has been assigned.</td></tr><tr><td>v0.11.3</td><td>Runtime deprecation.</td></tr></tbody></table></div><p>Type: End-of-Life</p><p><code>util.error()</code> has been removed. Please use <a href="/nodejs/api/console#consoleerrordata-args"><code>console.error()</code></a> instead.</p><h3 id="dep0030-slowbuffer" tabindex="-1">DEP0030: <code>SlowBuffer</code> <a class="header-anchor" href="#dep0030-slowbuffer" aria-label="Permalink to “DEP0030: SlowBuffer”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v6.12.0</td><td>A deprecation code has been assigned.</td></tr><tr><td>v6.0.0</td><td>Documentation-only deprecation.</td></tr></tbody></table></div><p>Type: Documentation-only</p><p>The <a href="/nodejs/api/buffer#class-slowbuffer"><code>SlowBuffer</code></a> class is deprecated. Please use <a href="/nodejs/api/buffer#static-method-bufferallocunsafeslowsize"><code>Buffer.allocUnsafeSlow(size)</code></a> instead.</p><h3 id="dep0031-ecdhsetpublickey" tabindex="-1">DEP0031: <code>ecdh.setPublicKey()</code> <a class="header-anchor" href="#dep0031-ecdhsetpublickey" aria-label="Permalink to “DEP0031: ecdh.setPublicKey()”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v6.12.0</td><td>A deprecation code has been assigned.</td></tr><tr><td>v5.2.0</td><td>Documentation-only deprecation.</td></tr></tbody></table></div><p>Type: Documentation-only</p><p>The <a href="/nodejs/api/crypto#ecdhsetpublickeypublickey-encoding"><code>ecdh.setPublicKey()</code></a> method is now deprecated as its inclusion in the API is not useful.</p><h3 id="dep0032-nodedomain-module" tabindex="-1">DEP0032: <code>node:domain</code> module <a class="header-anchor" href="#dep0032-nodedomain-module" aria-label="Permalink to “DEP0032: node:domain module”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v6.12.0, v4.8.6</td><td>A deprecation code has been assigned.</td></tr><tr><td>v1.4.2</td><td>Documentation-only deprecation.</td></tr></tbody></table></div><p>Type: Documentation-only</p><p>The <a href="/nodejs/api/domain"><code>domain</code></a> module is deprecated and should not be used.</p><h3 id="dep0033-eventemitterlistenercount" tabindex="-1">DEP0033: <code>EventEmitter.listenerCount()</code> <a class="header-anchor" href="#dep0033-eventemitterlistenercount" aria-label="Permalink to “DEP0033: EventEmitter.listenerCount()”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v6.12.0, v4.8.6</td><td>A deprecation code has been assigned.</td></tr><tr><td>v3.2.0</td><td>Documentation-only deprecation.</td></tr></tbody></table></div><p>Type: Documentation-only</p><p>The <a href="/nodejs/api/events#eventslistenercountemitter-eventname"><code>events.listenerCount(emitter, eventName)</code></a> API is deprecated. Please use <a href="/nodejs/api/events#emitterlistenercounteventname-listener"><code>emitter.listenerCount(eventName)</code></a> instead.</p><h3 id="dep0034-fsexistspath-callback" tabindex="-1">DEP0034: <code>fs.exists(path, callback)</code> <a class="header-anchor" href="#dep0034-fsexistspath-callback" aria-label="Permalink to “DEP0034: fs.exists(path, callback)”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v6.12.0, v4.8.6</td><td>A deprecation code has been assigned.</td></tr><tr><td>v1.0.0</td><td>Documentation-only deprecation.</td></tr></tbody></table></div><p>Type: Documentation-only</p><p>The <a href="/nodejs/api/fs#fsexistspath-callback"><code>fs.exists(path, callback)</code></a> API is deprecated. Please use <a href="/nodejs/api/fs#fsstatpath-options-callback"><code>fs.stat()</code></a> or <a href="/nodejs/api/fs#fsaccesspath-mode-callback"><code>fs.access()</code></a> instead.</p><h3 id="dep0035-fslchmodpath-mode-callback" tabindex="-1">DEP0035: <code>fs.lchmod(path, mode, callback)</code> <a class="header-anchor" href="#dep0035-fslchmodpath-mode-callback" aria-label="Permalink to “DEP0035: fs.lchmod(path, mode, callback)”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v6.12.0, v4.8.6</td><td>A deprecation code has been assigned.</td></tr><tr><td>v0.4.7</td><td>Documentation-only deprecation.</td></tr></tbody></table></div><p>Type: Documentation-only</p><p>The <a href="/nodejs/api/fs#fslchmodpath-mode-callback"><code>fs.lchmod(path, mode, callback)</code></a> API is deprecated.</p><h3 id="dep0036-fslchmodsyncpath-mode" tabindex="-1">DEP0036: <code>fs.lchmodSync(path, mode)</code> <a class="header-anchor" href="#dep0036-fslchmodsyncpath-mode" aria-label="Permalink to “DEP0036: fs.lchmodSync(path, mode)”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v6.12.0, v4.8.6</td><td>A deprecation code has been assigned.</td></tr><tr><td>v0.4.7</td><td>Documentation-only deprecation.</td></tr></tbody></table></div><p>Type: Documentation-only</p><p>The <a href="/nodejs/api/fs#fslchmodsyncpath-mode"><code>fs.lchmodSync(path, mode)</code></a> API is deprecated.</p><h3 id="dep0037-fslchownpath-uid-gid-callback" tabindex="-1">DEP0037: <code>fs.lchown(path, uid, gid, callback)</code> <a class="header-anchor" href="#dep0037-fslchownpath-uid-gid-callback" aria-label="Permalink to “DEP0037: fs.lchown(path, uid, gid, callback)”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v10.6.0</td><td>Deprecation revoked.</td></tr><tr><td>v6.12.0, v4.8.6</td><td>A deprecation code has been assigned.</td></tr><tr><td>v0.4.7</td><td>Documentation-only deprecation.</td></tr></tbody></table></div><p>Type: Deprecation revoked</p><p>The <a href="/nodejs/api/fs#fslchownpath-uid-gid-callback"><code>fs.lchown(path, uid, gid, callback)</code></a> API was deprecated. The deprecation was revoked because the requisite supporting APIs were added in libuv.</p><h3 id="dep0038-fslchownsyncpath-uid-gid" tabindex="-1">DEP0038: <code>fs.lchownSync(path, uid, gid)</code> <a class="header-anchor" href="#dep0038-fslchownsyncpath-uid-gid" aria-label="Permalink to “DEP0038: fs.lchownSync(path, uid, gid)”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v10.6.0</td><td>Deprecation revoked.</td></tr><tr><td>v6.12.0, v4.8.6</td><td>A deprecation code has been assigned.</td></tr><tr><td>v0.4.7</td><td>Documentation-only deprecation.</td></tr></tbody></table></div><p>Type: Deprecation revoked</p><p>The <a href="/nodejs/api/fs#fslchownsyncpath-uid-gid"><code>fs.lchownSync(path, uid, gid)</code></a> API was deprecated. The deprecation was revoked because the requisite supporting APIs were added in libuv.</p><h3 id="dep0039-requireextensions" tabindex="-1">DEP0039: <code>require.extensions</code> <a class="header-anchor" href="#dep0039-requireextensions" aria-label="Permalink to “DEP0039: require.extensions”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v6.12.0, v4.8.6</td><td>A deprecation code has been assigned.</td></tr><tr><td>v0.10.6</td><td>Documentation-only deprecation.</td></tr></tbody></table></div><p>Type: Documentation-only</p><p>The <a href="/nodejs/api/modules#requireextensions"><code>require.extensions</code></a> property is deprecated.</p><h3 id="dep0040-nodepunycode-module" tabindex="-1">DEP0040: <code>node:punycode</code> module <a class="header-anchor" href="#dep0040-nodepunycode-module" aria-label="Permalink to “DEP0040: node:punycode module”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v21.0.0</td><td>Runtime deprecation.</td></tr><tr><td>v16.6.0</td><td>Added support for <code>--pending-deprecation</code>.</td></tr><tr><td>v7.0.0</td><td>Documentation-only deprecation.</td></tr></tbody></table></div><p>Type: Runtime</p><p>The <a href="/nodejs/api/punycode"><code>punycode</code></a> module is deprecated. Please use a userland alternative instead.</p><h3 id="dep0041-node_repl_history_file-environment-variable" tabindex="-1">DEP0041: <code>NODE_REPL_HISTORY_FILE</code> environment variable <a class="header-anchor" href="#dep0041-node_repl_history_file-environment-variable" aria-label="Permalink to “DEP0041: NODE_REPL_HISTORY_FILE environment variable”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v10.0.0</td><td>End-of-Life.</td></tr><tr><td>v6.12.0, v4.8.6</td><td>A deprecation code has been assigned.</td></tr><tr><td>v3.0.0</td><td>Documentation-only deprecation.</td></tr></tbody></table></div><p>Type: End-of-Life</p><p>The <code>NODE_REPL_HISTORY_FILE</code> environment variable was removed. Please use <code>NODE_REPL_HISTORY</code> instead.</p><h3 id="dep0042-tlscryptostream" tabindex="-1">DEP0042: <code>tls.CryptoStream</code> <a class="header-anchor" href="#dep0042-tlscryptostream" aria-label="Permalink to “DEP0042: tls.CryptoStream”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v10.0.0</td><td>End-of-Life.</td></tr><tr><td>v6.12.0, v4.8.6</td><td>A deprecation code has been assigned.</td></tr><tr><td>v0.11.3</td><td>Documentation-only deprecation.</td></tr></tbody></table></div><p>Type: End-of-Life</p><p>The <a href="/nodejs/api/tls#class-tlscryptostream"><code>tls.CryptoStream</code></a> class was removed. Please use <a href="/nodejs/api/tls#class-tlstlssocket"><code>tls.TLSSocket</code></a> instead.</p><h3 id="dep0043-tlssecurepair" tabindex="-1">DEP0043: <code>tls.SecurePair</code> <a class="header-anchor" href="#dep0043-tlssecurepair" aria-label="Permalink to “DEP0043: tls.SecurePair”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v8.0.0</td><td>Runtime deprecation.</td></tr><tr><td>v6.12.0</td><td>A deprecation code has been assigned.</td></tr><tr><td>v6.0.0</td><td>Documentation-only deprecation.</td></tr><tr><td>v0.11.15</td><td>Deprecation revoked.</td></tr><tr><td>v0.11.3</td><td>Runtime deprecation.</td></tr></tbody></table></div><p>Type: Documentation-only</p><p>The <a href="/nodejs/api/tls#class-tlssecurepair"><code>tls.SecurePair</code></a> class is deprecated. Please use <a href="/nodejs/api/tls#class-tlstlssocket"><code>tls.TLSSocket</code></a> instead.</p><h3 id="dep0044-utilisarray" tabindex="-1">DEP0044: <code>util.isArray()</code> <a class="header-anchor" href="#dep0044-utilisarray" aria-label="Permalink to “DEP0044: util.isArray()”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v22.0.0</td><td>Runtime deprecation.</td></tr><tr><td>v6.12.0, v4.8.6</td><td>A deprecation code has been assigned.</td></tr><tr><td>v4.0.0, v3.3.1</td><td>Documentation-only deprecation.</td></tr></tbody></table></div><p>Type: Runtime</p><p>The <a href="/nodejs/api/util#utilisarrayobject"><code>util.isArray()</code></a> API is deprecated. Please use <code>Array.isArray()</code> instead.</p><h3 id="dep0045-utilisboolean" tabindex="-1">DEP0045: <code>util.isBoolean()</code> <a class="header-anchor" href="#dep0045-utilisboolean" aria-label="Permalink to “DEP0045: util.isBoolean()”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v23.0.0</td><td>End-of-Life deprecation.</td></tr><tr><td>v22.0.0</td><td>Runtime deprecation.</td></tr><tr><td>v6.12.0, v4.8.6</td><td>A deprecation code has been assigned.</td></tr><tr><td>v4.0.0, v3.3.1</td><td>Documentation-only deprecation.</td></tr></tbody></table></div><p>Type: End-of-Life</p><p>The <code>util.isBoolean()</code> API has been removed. Please use <code>typeof arg === &#39;boolean&#39;</code> instead.</p><h3 id="dep0046-utilisbuffer" tabindex="-1">DEP0046: <code>util.isBuffer()</code> <a class="header-anchor" href="#dep0046-utilisbuffer" aria-label="Permalink to “DEP0046: util.isBuffer()”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v23.0.0</td><td>End-of-Life deprecation.</td></tr><tr><td>v22.0.0</td><td>Runtime deprecation.</td></tr><tr><td>v6.12.0, v4.8.6</td><td>A deprecation code has been assigned.</td></tr><tr><td>v4.0.0, v3.3.1</td><td>Documentation-only deprecation.</td></tr></tbody></table></div><p>Type: End-of-Life</p><p>The <code>util.isBuffer()</code> API has been removed. Please use <a href="/nodejs/api/buffer#static-method-bufferisbufferobj"><code>Buffer.isBuffer()</code></a> instead.</p><h3 id="dep0047-utilisdate" tabindex="-1">DEP0047: <code>util.isDate()</code> <a class="header-anchor" href="#dep0047-utilisdate" aria-label="Permalink to “DEP0047: util.isDate()”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v23.0.0</td><td>End-of-Life deprecation.</td></tr><tr><td>v22.0.0</td><td>Runtime deprecation.</td></tr><tr><td>v6.12.0, v4.8.6</td><td>A deprecation code has been assigned.</td></tr><tr><td>v4.0.0, v3.3.1</td><td>Documentation-only deprecation.</td></tr></tbody></table></div><p>Type: End-of-Life</p><p>The <code>util.isDate()</code> API has been removed. Please use <code>arg instanceof Date</code> instead.</p><h3 id="dep0048-utiliserror" tabindex="-1">DEP0048: <code>util.isError()</code> <a class="header-anchor" href="#dep0048-utiliserror" aria-label="Permalink to “DEP0048: util.isError()”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v23.0.0</td><td>End-of-Life deprecation.</td></tr><tr><td>v22.0.0</td><td>Runtime deprecation.</td></tr><tr><td>v6.12.0, v4.8.6</td><td>A deprecation code has been assigned.</td></tr><tr><td>v4.0.0, v3.3.1</td><td>Documentation-only deprecation.</td></tr></tbody></table></div><p>Type: End-of-Life</p><p>The <code>util.isError()</code> API has been removed. Please use <code>Object.prototype.toString(arg) === &#39;[object Error]&#39; || arg instanceof Error</code> instead.</p><h3 id="dep0049-utilisfunction" tabindex="-1">DEP0049: <code>util.isFunction()</code> <a class="header-anchor" href="#dep0049-utilisfunction" aria-label="Permalink to “DEP0049: util.isFunction()”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v23.0.0</td><td>End-of-Life deprecation.</td></tr><tr><td>v22.0.0</td><td>Runtime deprecation.</td></tr><tr><td>v6.12.0, v4.8.6</td><td>A deprecation code has been assigned.</td></tr><tr><td>v4.0.0, v3.3.1</td><td>Documentation-only deprecation.</td></tr></tbody></table></div><p>Type: End-of-Life</p><p>The <code>util.isFunction()</code> API has been removed. Please use <code>typeof arg === &#39;function&#39;</code> instead.</p><h3 id="dep0050-utilisnull" tabindex="-1">DEP0050: <code>util.isNull()</code> <a class="header-anchor" href="#dep0050-utilisnull" aria-label="Permalink to “DEP0050: util.isNull()”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v23.0.0</td><td>End-of-Life deprecation.</td></tr><tr><td>v22.0.0</td><td>Runtime deprecation.</td></tr><tr><td>v6.12.0, v4.8.6</td><td>A deprecation code has been assigned.</td></tr><tr><td>v4.0.0, v3.3.1</td><td>Documentation-only deprecation.</td></tr></tbody></table></div><p>Type: End-of-Life</p><p>The <code>util.isNull()</code> API has been removed. Please use <code>arg === null</code> instead.</p><h3 id="dep0051-utilisnullorundefined" tabindex="-1">DEP0051: <code>util.isNullOrUndefined()</code> <a class="header-anchor" href="#dep0051-utilisnullorundefined" aria-label="Permalink to “DEP0051: util.isNullOrUndefined()”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v23.0.0</td><td>End-of-Life deprecation.</td></tr><tr><td>v22.0.0</td><td>Runtime deprecation.</td></tr><tr><td>v6.12.0, v4.8.6</td><td>A deprecation code has been assigned.</td></tr><tr><td>v4.0.0, v3.3.1</td><td>Documentation-only deprecation.</td></tr></tbody></table></div><p>Type: End-of-Life</p><p>The <code>util.isNullOrUndefined()</code> API has been removed. Please use <code>arg === null || arg === undefined</code> instead.</p><h3 id="dep0052-utilisnumber" tabindex="-1">DEP0052: <code>util.isNumber()</code> <a class="header-anchor" href="#dep0052-utilisnumber" aria-label="Permalink to “DEP0052: util.isNumber()”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v23.0.0</td><td>End-of-Life deprecation.</td></tr><tr><td>v22.0.0</td><td>Runtime deprecation.</td></tr><tr><td>v6.12.0, v4.8.6</td><td>A deprecation code has been assigned.</td></tr><tr><td>v4.0.0, v3.3.1</td><td>Documentation-only deprecation.</td></tr></tbody></table></div><p>Type: End-of-Life</p><p>The <code>util.isNumber()</code> API has been removed. Please use <code>typeof arg === &#39;number&#39;</code> instead.</p><h3 id="dep0053-utilisobject" tabindex="-1">DEP0053: <code>util.isObject()</code> <a class="header-anchor" href="#dep0053-utilisobject" aria-label="Permalink to “DEP0053: util.isObject()”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v23.0.0</td><td>End-of-Life deprecation.</td></tr><tr><td>v22.0.0</td><td>Runtime deprecation.</td></tr><tr><td>v6.12.0, v4.8.6</td><td>A deprecation code has been assigned.</td></tr><tr><td>v4.0.0, v3.3.1</td><td>Documentation-only deprecation.</td></tr></tbody></table></div><p>Type: End-of-Life</p><p>The <code>util.isObject()</code> API has been removed. Please use <code>arg &amp;&amp; typeof arg === &#39;object&#39;</code> instead.</p><h3 id="dep0054-utilisprimitive" tabindex="-1">DEP0054: <code>util.isPrimitive()</code> <a class="header-anchor" href="#dep0054-utilisprimitive" aria-label="Permalink to “DEP0054: util.isPrimitive()”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v23.0.0</td><td>End-of-Life deprecation.</td></tr><tr><td>v22.0.0</td><td>Runtime deprecation.</td></tr><tr><td>v6.12.0, v4.8.6</td><td>A deprecation code has been assigned.</td></tr><tr><td>v4.0.0, v3.3.1</td><td>Documentation-only deprecation.</td></tr></tbody></table></div><p>Type: End-of-Life</p><p>The <code>util.isPrimitive()</code> API has been removed. Please use <code>arg === null || (typeof arg !==&#39;object&#39; &amp;&amp; typeof arg !== &#39;function&#39;)</code> instead.</p><h3 id="dep0055-utilisregexp" tabindex="-1">DEP0055: <code>util.isRegExp()</code> <a class="header-anchor" href="#dep0055-utilisregexp" aria-label="Permalink to “DEP0055: util.isRegExp()”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v23.0.0</td><td>End-of-Life deprecation.</td></tr><tr><td>v22.0.0</td><td>Runtime deprecation.</td></tr><tr><td>v6.12.0, v4.8.6</td><td>A deprecation code has been assigned.</td></tr><tr><td>v4.0.0, v3.3.1</td><td>Documentation-only deprecation.</td></tr></tbody></table></div><p>Type: End-of-Life</p><p>The <code>util.isRegExp()</code> API has been removed. Please use <code>arg instanceof RegExp</code> instead.</p><h3 id="dep0056-utilisstring" tabindex="-1">DEP0056: <code>util.isString()</code> <a class="header-anchor" href="#dep0056-utilisstring" aria-label="Permalink to “DEP0056: util.isString()”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v23.0.0</td><td>End-of-Life deprecation.</td></tr><tr><td>v22.0.0</td><td>Runtime deprecation.</td></tr><tr><td>v6.12.0, v4.8.6</td><td>A deprecation code has been assigned.</td></tr><tr><td>v4.0.0, v3.3.1</td><td>Documentation-only deprecation.</td></tr></tbody></table></div><p>Type: End-of-Life</p><p>The <code>util.isString()</code> API has been removed. Please use <code>typeof arg === &#39;string&#39;</code> instead.</p><h3 id="dep0057-utilissymbol" tabindex="-1">DEP0057: <code>util.isSymbol()</code> <a class="header-anchor" href="#dep0057-utilissymbol" aria-label="Permalink to “DEP0057: util.isSymbol()”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v23.0.0</td><td>End-of-Life deprecation.</td></tr><tr><td>v22.0.0</td><td>Runtime deprecation.</td></tr><tr><td>v6.12.0, v4.8.6</td><td>A deprecation code has been assigned.</td></tr><tr><td>v4.0.0, v3.3.1</td><td>Documentation-only deprecation.</td></tr></tbody></table></div><p>Type: End-of-Life</p><p>The <code>util.isSymbol()</code> API has been removed. Please use <code>typeof arg === &#39;symbol&#39;</code> instead.</p><h3 id="dep0058-utilisundefined" tabindex="-1">DEP0058: <code>util.isUndefined()</code> <a class="header-anchor" href="#dep0058-utilisundefined" aria-label="Permalink to “DEP0058: util.isUndefined()”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v23.0.0</td><td>End-of-Life deprecation.</td></tr><tr><td>v22.0.0</td><td>Runtime deprecation.</td></tr><tr><td>v6.12.0, v4.8.6</td><td>A deprecation code has been assigned.</td></tr><tr><td>v4.0.0, v3.3.1</td><td>Documentation-only deprecation.</td></tr></tbody></table></div><p>Type: End-of-Life</p><p>The <code>util.isUndefined()</code> API has been removed. Please use <code>arg === undefined</code> instead.</p><h3 id="dep0059-utillog" tabindex="-1">DEP0059: <code>util.log()</code> <a class="header-anchor" href="#dep0059-utillog" aria-label="Permalink to “DEP0059: util.log()”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v23.0.0</td><td>End-of-Life deprecation.</td></tr><tr><td>v22.0.0</td><td>Runtime deprecation.</td></tr><tr><td>v6.12.0</td><td>A deprecation code has been assigned.</td></tr><tr><td>v6.0.0</td><td>Documentation-only deprecation.</td></tr></tbody></table></div><p>Type: End-of-Life</p><p>The <code>util.log()</code> API has been removed because it&#39;s an unmaintained legacy API that was exposed to user land by accident. Instead, consider the following alternatives based on your specific needs:</p><ul><li><strong>Third-Party Logging Libraries</strong></li><li><strong>Use <code>console.log(new Date().toLocaleString(), message)</code></strong></li></ul><p>By adopting one of these alternatives, you can transition away from <code>util.log()</code> and choose a logging strategy that aligns with the specific requirements and complexity of your application.</p><h3 id="dep0060-util_extend" tabindex="-1">DEP0060: <code>util._extend()</code> <a class="header-anchor" href="#dep0060-util_extend" aria-label="Permalink to “DEP0060: util._extend()”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v22.0.0</td><td>Runtime deprecation.</td></tr><tr><td>v6.12.0</td><td>A deprecation code has been assigned.</td></tr><tr><td>v6.0.0</td><td>Documentation-only deprecation.</td></tr></tbody></table></div><p>Type: Runtime</p><p>The <a href="/nodejs/api/util#util-extendtarget-source"><code>util._extend()</code></a> API is deprecated because it&#39;s an unmaintained legacy API that was exposed to user land by accident. Please use <code>target = Object.assign(target, source)</code> instead.</p><h3 id="dep0061-fssyncwritestream" tabindex="-1">DEP0061: <code>fs.SyncWriteStream</code> <a class="header-anchor" href="#dep0061-fssyncwritestream" aria-label="Permalink to “DEP0061: fs.SyncWriteStream”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v11.0.0</td><td>End-of-Life.</td></tr><tr><td>v8.0.0</td><td>Runtime deprecation.</td></tr><tr><td>v7.0.0</td><td>Documentation-only deprecation.</td></tr></tbody></table></div><p>Type: End-of-Life</p><p>The <code>fs.SyncWriteStream</code> class was never intended to be a publicly accessible API and has been removed. No alternative API is available. Please use a userland alternative.</p><h3 id="dep0062-node---debug" tabindex="-1">DEP0062: <code>node --debug</code> <a class="header-anchor" href="#dep0062-node---debug" aria-label="Permalink to “DEP0062: node --debug”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v12.0.0</td><td>End-of-Life.</td></tr><tr><td>v8.0.0</td><td>Runtime deprecation.</td></tr></tbody></table></div><p>Type: End-of-Life</p><p><code>--debug</code> activates the legacy V8 debugger interface, which was removed as of V8 5.8. It is replaced by Inspector which is activated with <code>--inspect</code> instead.</p><h3 id="dep0063-serverresponseprototypewriteheader" tabindex="-1">DEP0063: <code>ServerResponse.prototype.writeHeader()</code> <a class="header-anchor" href="#dep0063-serverresponseprototypewriteheader" aria-label="Permalink to “DEP0063: ServerResponse.prototype.writeHeader()”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v8.0.0</td><td>Documentation-only deprecation.</td></tr></tbody></table></div><p>Type: Documentation-only</p><p>The <code>node:http</code> module <code>ServerResponse.prototype.writeHeader()</code> API is deprecated. Please use <code>ServerResponse.prototype.writeHead()</code> instead.</p><p>The <code>ServerResponse.prototype.writeHeader()</code> method was never documented as an officially supported API.</p><h3 id="dep0064-tlscreatesecurepair" tabindex="-1">DEP0064: <code>tls.createSecurePair()</code> <a class="header-anchor" href="#dep0064-tlscreatesecurepair" aria-label="Permalink to “DEP0064: tls.createSecurePair()”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v8.0.0</td><td>Runtime deprecation.</td></tr><tr><td>v6.12.0</td><td>A deprecation code has been assigned.</td></tr><tr><td>v6.0.0</td><td>Documentation-only deprecation.</td></tr><tr><td>v0.11.15</td><td>Deprecation revoked.</td></tr><tr><td>v0.11.3</td><td>Runtime deprecation.</td></tr></tbody></table></div><p>Type: Runtime</p><p>The <code>tls.createSecurePair()</code> API was deprecated in documentation in Node.js 0.11.3. Users should use <code>tls.Socket</code> instead.</p><h3 id="dep0065-replrepl_mode_magic-and-node_repl_mode=magic" tabindex="-1">DEP0065: <code>repl.REPL_MODE_MAGIC</code> and <code>NODE_REPL_MODE=magic</code> <a class="header-anchor" href="#dep0065-replrepl_mode_magic-and-node_repl_mode=magic" aria-label="Permalink to “DEP0065: repl.REPL_MODE_MAGIC and NODE_REPL_MODE=magic”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v10.0.0</td><td>End-of-Life.</td></tr><tr><td>v8.0.0</td><td>Documentation-only deprecation.</td></tr></tbody></table></div><p>Type: End-of-Life</p><p>The <code>node:repl</code> module&#39;s <code>REPL_MODE_MAGIC</code> constant, used for <code>replMode</code> option, has been removed. Its behavior has been functionally identical to that of <code>REPL_MODE_SLOPPY</code> since Node.js 6.0.0, when V8 5.0 was imported. Please use <code>REPL_MODE_SLOPPY</code> instead.</p><p>The <code>NODE_REPL_MODE</code> environment variable is used to set the underlying <code>replMode</code> of an interactive <code>node</code> session. Its value, <code>magic</code>, is also removed. Please use <code>sloppy</code> instead.</p><h3 id="dep0066-outgoingmessageprototype_headers-outgoingmessageprototype_headernames" tabindex="-1">DEP0066: <code>OutgoingMessage.prototype._headers, OutgoingMessage.prototype._headerNames</code> <a class="header-anchor" href="#dep0066-outgoingmessageprototype_headers-outgoingmessageprototype_headernames" aria-label="Permalink to “DEP0066: OutgoingMessage.prototype._headers, OutgoingMessage.prototype._headerNames”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v12.0.0</td><td>Runtime deprecation.</td></tr><tr><td>v8.0.0</td><td>Documentation-only deprecation.</td></tr></tbody></table></div><p>Type: Runtime</p><p>The <code>node:http</code> module <code>OutgoingMessage.prototype._headers</code> and <code>OutgoingMessage.prototype._headerNames</code> properties are deprecated. Use one of the public methods (e.g. <code>OutgoingMessage.prototype.getHeader()</code>, <code>OutgoingMessage.prototype.getHeaders()</code>, <code>OutgoingMessage.prototype.getHeaderNames()</code>, <code>OutgoingMessage.prototype.getRawHeaderNames()</code>, <code>OutgoingMessage.prototype.hasHeader()</code>, <code>OutgoingMessage.prototype.removeHeader()</code>, <code>OutgoingMessage.prototype.setHeader()</code>) for working with outgoing headers.</p><p>The <code>OutgoingMessage.prototype._headers</code> and <code>OutgoingMessage.prototype._headerNames</code> properties were never documented as officially supported properties.</p><h3 id="dep0067-outgoingmessageprototype_renderheaders" tabindex="-1">DEP0067: <code>OutgoingMessage.prototype._renderHeaders</code> <a class="header-anchor" href="#dep0067-outgoingmessageprototype_renderheaders" aria-label="Permalink to “DEP0067: OutgoingMessage.prototype._renderHeaders”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v8.0.0</td><td>Documentation-only deprecation.</td></tr></tbody></table></div><p>Type: Documentation-only</p><p>The <code>node:http</code> module <code>OutgoingMessage.prototype._renderHeaders()</code> API is deprecated.</p><p>The <code>OutgoingMessage.prototype._renderHeaders</code> property was never documented as an officially supported API.</p><h3 id="dep0068-node-debug" tabindex="-1">DEP0068: <code>node debug</code> <a class="header-anchor" href="#dep0068-node-debug" aria-label="Permalink to “DEP0068: node debug”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v15.0.0</td><td>The legacy <code>node debug</code> command was removed.</td></tr><tr><td>v8.0.0</td><td>Runtime deprecation.</td></tr></tbody></table></div><p>Type: End-of-Life</p><p><code>node debug</code> corresponds to the legacy CLI debugger which has been replaced with a V8-inspector based CLI debugger available through <code>node inspect</code>.</p><h3 id="dep0069-vmrunindebugcontextstring" tabindex="-1">DEP0069: <code>vm.runInDebugContext(string)</code> <a class="header-anchor" href="#dep0069-vmrunindebugcontextstring" aria-label="Permalink to “DEP0069: vm.runInDebugContext(string)”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v10.0.0</td><td>End-of-Life.</td></tr><tr><td>v9.0.0</td><td>Runtime deprecation.</td></tr><tr><td>v8.0.0</td><td>Documentation-only deprecation.</td></tr></tbody></table></div><p>Type: End-of-Life</p><p>DebugContext has been removed in V8 and is not available in Node.js 10+.</p><p>DebugContext was an experimental API.</p><h3 id="dep0070-async_hookscurrentid" tabindex="-1">DEP0070: <code>async_hooks.currentId()</code> <a class="header-anchor" href="#dep0070-async_hookscurrentid" aria-label="Permalink to “DEP0070: async_hooks.currentId()”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v9.0.0</td><td>End-of-Life.</td></tr><tr><td>v8.2.0</td><td>Runtime deprecation.</td></tr></tbody></table></div><p>Type: End-of-Life</p><p><code>async_hooks.currentId()</code> was renamed to <code>async_hooks.executionAsyncId()</code> for clarity.</p><p>This change was made while <code>async_hooks</code> was an experimental API.</p><h3 id="dep0071-async_hookstriggerid" tabindex="-1">DEP0071: <code>async_hooks.triggerId()</code> <a class="header-anchor" href="#dep0071-async_hookstriggerid" aria-label="Permalink to “DEP0071: async_hooks.triggerId()”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v9.0.0</td><td>End-of-Life.</td></tr><tr><td>v8.2.0</td><td>Runtime deprecation.</td></tr></tbody></table></div><p>Type: End-of-Life</p><p><code>async_hooks.triggerId()</code> was renamed to <code>async_hooks.triggerAsyncId()</code> for clarity.</p><p>This change was made while <code>async_hooks</code> was an experimental API.</p><h3 id="dep0072-async_hooksasyncresourcetriggerid" tabindex="-1">DEP0072: <code>async_hooks.AsyncResource.triggerId()</code> <a class="header-anchor" href="#dep0072-async_hooksasyncresourcetriggerid" aria-label="Permalink to “DEP0072: async_hooks.AsyncResource.triggerId()”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v9.0.0</td><td>End-of-Life.</td></tr><tr><td>v8.2.0</td><td>Runtime deprecation.</td></tr></tbody></table></div><p>Type: End-of-Life</p><p><code>async_hooks.AsyncResource.triggerId()</code> was renamed to <code>async_hooks.AsyncResource.triggerAsyncId()</code> for clarity.</p><p>This change was made while <code>async_hooks</code> was an experimental API.</p><h3 id="dep0073-several-internal-properties-of-netserver" tabindex="-1">DEP0073: Several internal properties of <code>net.Server</code> <a class="header-anchor" href="#dep0073-several-internal-properties-of-netserver" aria-label="Permalink to “DEP0073: Several internal properties of net.Server”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v10.0.0</td><td>End-of-Life.</td></tr><tr><td>v9.0.0</td><td>Runtime deprecation.</td></tr></tbody></table></div><p>Type: End-of-Life</p><p>Accessing several internal, undocumented properties of <code>net.Server</code> instances with inappropriate names is deprecated.</p><p>As the original API was undocumented and not generally useful for non-internal code, no replacement API is provided.</p><h3 id="dep0074-replserverbufferedcommand" tabindex="-1">DEP0074: <code>REPLServer.bufferedCommand</code> <a class="header-anchor" href="#dep0074-replserverbufferedcommand" aria-label="Permalink to “DEP0074: REPLServer.bufferedCommand”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v15.0.0</td><td>End-of-Life.</td></tr><tr><td>v9.0.0</td><td>Runtime deprecation.</td></tr></tbody></table></div><p>Type: End-of-Life</p><p>The <code>REPLServer.bufferedCommand</code> property was deprecated in favor of <a href="/nodejs/api/repl#replserverclearbufferedcommand"><code>REPLServer.clearBufferedCommand()</code></a>.</p><h3 id="dep0075-replserverparsereplkeyword" tabindex="-1">DEP0075: <code>REPLServer.parseREPLKeyword()</code> <a class="header-anchor" href="#dep0075-replserverparsereplkeyword" aria-label="Permalink to “DEP0075: REPLServer.parseREPLKeyword()”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v15.0.0</td><td>End-of-Life.</td></tr><tr><td>v9.0.0</td><td>Runtime deprecation.</td></tr></tbody></table></div><p>Type: End-of-Life</p><p><code>REPLServer.parseREPLKeyword()</code> was removed from userland visibility.</p><h3 id="dep0076-tlsparsecertstring" tabindex="-1">DEP0076: <code>tls.parseCertString()</code> <a class="header-anchor" href="#dep0076-tlsparsecertstring" aria-label="Permalink to “DEP0076: tls.parseCertString()”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v18.0.0</td><td>End-of-Life.</td></tr><tr><td>v9.0.0</td><td>Runtime deprecation.</td></tr><tr><td>v8.6.0</td><td>Documentation-only deprecation.</td></tr></tbody></table></div><p>Type: End-of-Life</p><p><code>tls.parseCertString()</code> was a trivial parsing helper that was made public by mistake. While it was supposed to parse certificate subject and issuer strings, it never handled multi-value Relative Distinguished Names correctly.</p><p>Earlier versions of this document suggested using <code>querystring.parse()</code> as an alternative to <code>tls.parseCertString()</code>. However, <code>querystring.parse()</code> also does not handle all certificate subjects correctly and should not be used.</p><h3 id="dep0077-module_debug" tabindex="-1">DEP0077: <code>Module._debug()</code> <a class="header-anchor" href="#dep0077-module_debug" aria-label="Permalink to “DEP0077: Module._debug()”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v9.0.0</td><td>Runtime deprecation.</td></tr></tbody></table></div><p>Type: Runtime</p><p><code>Module._debug()</code> is deprecated.</p><p>The <code>Module._debug()</code> function was never documented as an officially supported API.</p><h3 id="dep0078-replserverturnoffeditormode" tabindex="-1">DEP0078: <code>REPLServer.turnOffEditorMode()</code> <a class="header-anchor" href="#dep0078-replserverturnoffeditormode" aria-label="Permalink to “DEP0078: REPLServer.turnOffEditorMode()”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v15.0.0</td><td>End-of-Life.</td></tr><tr><td>v9.0.0</td><td>Runtime deprecation.</td></tr></tbody></table></div><p>Type: End-of-Life</p><p><code>REPLServer.turnOffEditorMode()</code> was removed from userland visibility.</p><h3 id="dep0079-custom-inspection-function-on-objects-via-inspect" tabindex="-1">DEP0079: Custom inspection function on objects via <code>.inspect()</code> <a class="header-anchor" href="#dep0079-custom-inspection-function-on-objects-via-inspect" aria-label="Permalink to “DEP0079: Custom inspection function on objects via .inspect()”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v11.0.0</td><td>End-of-Life.</td></tr><tr><td>v10.0.0</td><td>Runtime deprecation.</td></tr><tr><td>v8.7.0</td><td>Documentation-only deprecation.</td></tr></tbody></table></div><p>Type: End-of-Life</p><p>Using a property named <code>inspect</code> on an object to specify a custom inspection function for <a href="/nodejs/api/util#utilinspectobject-options"><code>util.inspect()</code></a> is deprecated. Use <a href="/nodejs/api/util#utilinspectcustom"><code>util.inspect.custom</code></a> instead. For backward compatibility with Node.js prior to version 6.4.0, both can be specified.</p><h3 id="dep0080-path_makelong" tabindex="-1">DEP0080: <code>path._makeLong()</code> <a class="header-anchor" href="#dep0080-path_makelong" aria-label="Permalink to “DEP0080: path._makeLong()”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v9.0.0</td><td>Documentation-only deprecation.</td></tr></tbody></table></div><p>Type: Documentation-only</p><p>The internal <code>path._makeLong()</code> was not intended for public use. However, userland modules have found it useful. The internal API is deprecated and replaced with an identical, public <code>path.toNamespacedPath()</code> method.</p><h3 id="dep0081-fstruncate-using-a-file-descriptor" tabindex="-1">DEP0081: <code>fs.truncate()</code> using a file descriptor <a class="header-anchor" href="#dep0081-fstruncate-using-a-file-descriptor" aria-label="Permalink to “DEP0081: fs.truncate() using a file descriptor”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v9.0.0</td><td>Runtime deprecation.</td></tr></tbody></table></div><p>Type: Runtime</p><p><code>fs.truncate()</code> <code>fs.truncateSync()</code> usage with a file descriptor is deprecated. Please use <code>fs.ftruncate()</code> or <code>fs.ftruncateSync()</code> to work with file descriptors.</p><h3 id="dep0082-replserverprototypememory" tabindex="-1">DEP0082: <code>REPLServer.prototype.memory()</code> <a class="header-anchor" href="#dep0082-replserverprototypememory" aria-label="Permalink to “DEP0082: REPLServer.prototype.memory()”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v15.0.0</td><td>End-of-Life.</td></tr><tr><td>v9.0.0</td><td>Runtime deprecation.</td></tr></tbody></table></div><p>Type: End-of-Life</p><p><code>REPLServer.prototype.memory()</code> is only necessary for the internal mechanics of the <code>REPLServer</code> itself. Do not use this function.</p><h3 id="dep0083-disabling-ecdh-by-setting-ecdhcurve-to-false" tabindex="-1">DEP0083: Disabling ECDH by setting <code>ecdhCurve</code> to <code>false</code> <a class="header-anchor" href="#dep0083-disabling-ecdh-by-setting-ecdhcurve-to-false" aria-label="Permalink to “DEP0083: Disabling ECDH by setting ecdhCurve to false”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v10.0.0</td><td>End-of-Life.</td></tr><tr><td>v9.2.0</td><td>Runtime deprecation.</td></tr></tbody></table></div><p>Type: End-of-Life.</p><p>The <code>ecdhCurve</code> option to <code>tls.createSecureContext()</code> and <code>tls.TLSSocket</code> could be set to <code>false</code> to disable ECDH entirely on the server only. This mode was deprecated in preparation for migrating to OpenSSL 1.1.0 and consistency with the client and is now unsupported. Use the <code>ciphers</code> parameter instead.</p><h3 id="dep0084-requiring-bundled-internal-dependencies" tabindex="-1">DEP0084: requiring bundled internal dependencies <a class="header-anchor" href="#dep0084-requiring-bundled-internal-dependencies" aria-label="Permalink to “DEP0084: requiring bundled internal dependencies”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v12.0.0</td><td>This functionality has been removed.</td></tr><tr><td>v10.0.0</td><td>Runtime deprecation.</td></tr></tbody></table></div><p>Type: End-of-Life</p><p>Since Node.js versions 4.4.0 and 5.2.0, several modules only intended for internal usage were mistakenly exposed to user code through <code>require()</code>. These modules were:</p><ul><li><code>v8/tools/codemap</code></li><li><code>v8/tools/consarray</code></li><li><code>v8/tools/csvparser</code></li><li><code>v8/tools/logreader</code></li><li><code>v8/tools/profile_view</code></li><li><code>v8/tools/profile</code></li><li><code>v8/tools/SourceMap</code></li><li><code>v8/tools/splaytree</code></li><li><code>v8/tools/tickprocessor-driver</code></li><li><code>v8/tools/tickprocessor</code></li><li><code>node-inspect/lib/_inspect</code> (from 7.6.0)</li><li><code>node-inspect/lib/internal/inspect_client</code> (from 7.6.0)</li><li><code>node-inspect/lib/internal/inspect_repl</code> (from 7.6.0)</li></ul><p>The <code>v8/*</code> modules do not have any exports, and if not imported in a specific order would in fact throw errors. As such there are virtually no legitimate use cases for importing them through <code>require()</code>.</p><p>On the other hand, <code>node-inspect</code> can be installed locally through a package manager, as it is published on the npm registry under the same name. No source code modification is necessary if that is done.</p><h3 id="dep0085-asynchooks-sensitive-api" tabindex="-1">DEP0085: AsyncHooks sensitive API <a class="header-anchor" href="#dep0085-asynchooks-sensitive-api" aria-label="Permalink to “DEP0085: AsyncHooks sensitive API”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v10.0.0</td><td>End-of-Life.</td></tr><tr><td>v9.4.0, v8.10.0</td><td>Runtime deprecation.</td></tr></tbody></table></div><p>Type: End-of-Life</p><p>The AsyncHooks sensitive API was never documented and had various minor issues. Use the <code>AsyncResource</code> API instead. See <a href="https://github.com/nodejs/node/issues/15572" target="_blank" rel="noreferrer">https://github.com/nodejs/node/issues/15572</a>.</p><h3 id="dep0086-remove-runinasyncidscope" tabindex="-1">DEP0086: Remove <code>runInAsyncIdScope</code> <a class="header-anchor" href="#dep0086-remove-runinasyncidscope" aria-label="Permalink to “DEP0086: Remove runInAsyncIdScope”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v10.0.0</td><td>End-of-Life.</td></tr><tr><td>v9.4.0, v8.10.0</td><td>Runtime deprecation.</td></tr></tbody></table></div><p>Type: End-of-Life</p><p><code>runInAsyncIdScope</code> doesn&#39;t emit the <code>&#39;before&#39;</code> or <code>&#39;after&#39;</code> event and can thus cause a lot of issues. See <a href="https://github.com/nodejs/node/issues/14328" target="_blank" rel="noreferrer">https://github.com/nodejs/node/issues/14328</a>.</p><h3 id="dep0089-requirenodeassert" tabindex="-1">DEP0089: <code>require(&#39;node:assert&#39;)</code> <a class="header-anchor" href="#dep0089-requirenodeassert" aria-label="Permalink to “DEP0089: require(&#39;node:assert&#39;)”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v12.8.0</td><td>Deprecation revoked.</td></tr><tr><td>v9.9.0, v8.13.0</td><td>Documentation-only deprecation.</td></tr></tbody></table></div><p>Type: Deprecation revoked</p><p>Importing assert directly was not recommended as the exposed functions use loose equality checks. The deprecation was revoked because use of the <code>node:assert</code> module is not discouraged, and the deprecation caused developer confusion.</p><h3 id="dep0090-invalid-gcm-authentication-tag-lengths" tabindex="-1">DEP0090: Invalid GCM authentication tag lengths <a class="header-anchor" href="#dep0090-invalid-gcm-authentication-tag-lengths" aria-label="Permalink to “DEP0090: Invalid GCM authentication tag lengths”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v11.0.0</td><td>End-of-Life.</td></tr><tr><td>v10.0.0</td><td>Runtime deprecation.</td></tr></tbody></table></div><p>Type: End-of-Life</p><p>Node.js used to support all GCM authentication tag lengths which are accepted by OpenSSL when calling <a href="/nodejs/api/crypto#deciphersetauthtagbuffer-encoding"><code>decipher.setAuthTag()</code></a>. Beginning with Node.js v11.0.0, only authentication tag lengths of 128, 120, 112, 104, 96, 64, and 32 bits are allowed. Authentication tags of other lengths are invalid per <a href="https://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-38d.pdf" target="_blank" rel="noreferrer">NIST SP 800-38D</a>.</p><h3 id="dep0091-cryptodefault_encoding" tabindex="-1">DEP0091: <code>crypto.DEFAULT_ENCODING</code> <a class="header-anchor" href="#dep0091-cryptodefault_encoding" aria-label="Permalink to “DEP0091: crypto.DEFAULT_ENCODING”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v20.0.0</td><td>End-of-Life.</td></tr><tr><td>v10.0.0</td><td>Runtime deprecation.</td></tr></tbody></table></div><p>Type: End-of-Life</p><p>The <code>crypto.DEFAULT_ENCODING</code> property only existed for compatibility with Node.js releases prior to versions 0.9.3 and has been removed.</p><h3 id="dep0092-top-level-this-bound-to-moduleexports" tabindex="-1">DEP0092: Top-level <code>this</code> bound to <code>module.exports</code> <a class="header-anchor" href="#dep0092-top-level-this-bound-to-moduleexports" aria-label="Permalink to “DEP0092: Top-level this bound to module.exports”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v10.0.0</td><td>Documentation-only deprecation.</td></tr></tbody></table></div><p>Type: Documentation-only</p><p>Assigning properties to the top-level <code>this</code> as an alternative to <code>module.exports</code> is deprecated. Developers should use <code>exports</code> or <code>module.exports</code> instead.</p><h3 id="dep0093-cryptofips-is-deprecated-and-replaced" tabindex="-1">DEP0093: <code>crypto.fips</code> is deprecated and replaced <a class="header-anchor" href="#dep0093-cryptofips-is-deprecated-and-replaced" aria-label="Permalink to “DEP0093: crypto.fips is deprecated and replaced”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v23.0.0</td><td>Runtime deprecation.</td></tr><tr><td>v10.0.0</td><td>Documentation-only deprecation.</td></tr></tbody></table></div><p>Type: Runtime</p><p>The <a href="/nodejs/api/crypto#cryptofips"><code>crypto.fips</code></a> property is deprecated. Please use <code>crypto.setFips()</code> and <code>crypto.getFips()</code> instead.</p><h3 id="dep0094-using-assertfail-with-more-than-one-argument" tabindex="-1">DEP0094: Using <code>assert.fail()</code> with more than one argument <a class="header-anchor" href="#dep0094-using-assertfail-with-more-than-one-argument" aria-label="Permalink to “DEP0094: Using assert.fail() with more than one argument”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v10.0.0</td><td>Runtime deprecation.</td></tr></tbody></table></div><p>Type: Runtime</p><p>Using <code>assert.fail()</code> with more than one argument is deprecated. Use <code>assert.fail()</code> with only one argument or use a different <code>node:assert</code> module method.</p><h3 id="dep0095-timersenroll" tabindex="-1">DEP0095: <code>timers.enroll()</code> <a class="header-anchor" href="#dep0095-timersenroll" aria-label="Permalink to “DEP0095: timers.enroll()”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v10.0.0</td><td>Runtime deprecation.</td></tr></tbody></table></div><p>Type: Runtime</p><p><code>timers.enroll()</code> is deprecated. Please use the publicly documented <a href="/nodejs/api/timers#settimeoutcallback-delay-args"><code>setTimeout()</code></a> or <a href="/nodejs/api/timers#setintervalcallback-delay-args"><code>setInterval()</code></a> instead.</p><h3 id="dep0096-timersunenroll" tabindex="-1">DEP0096: <code>timers.unenroll()</code> <a class="header-anchor" href="#dep0096-timersunenroll" aria-label="Permalink to “DEP0096: timers.unenroll()”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v10.0.0</td><td>Runtime deprecation.</td></tr></tbody></table></div><p>Type: Runtime</p><p><code>timers.unenroll()</code> is deprecated. Please use the publicly documented <a href="/nodejs/api/timers#cleartimeouttimeout"><code>clearTimeout()</code></a> or <a href="/nodejs/api/timers#clearintervaltimeout"><code>clearInterval()</code></a> instead.</p><h3 id="dep0097-makecallback-with-domain-property" tabindex="-1">DEP0097: <code>MakeCallback</code> with <code>domain</code> property <a class="header-anchor" href="#dep0097-makecallback-with-domain-property" aria-label="Permalink to “DEP0097: MakeCallback with domain property”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v10.0.0</td><td>Runtime deprecation.</td></tr></tbody></table></div><p>Type: Runtime</p><p>Users of <code>MakeCallback</code> that add the <code>domain</code> property to carry context, should start using the <code>async_context</code> variant of <code>MakeCallback</code> or <code>CallbackScope</code>, or the high-level <code>AsyncResource</code> class.</p><h3 id="dep0098-asynchooks-embedder-asyncresourceemitbefore-and-asyncresourceemitafter-apis" tabindex="-1">DEP0098: AsyncHooks embedder <code>AsyncResource.emitBefore</code> and <code>AsyncResource.emitAfter</code> APIs <a class="header-anchor" href="#dep0098-asynchooks-embedder-asyncresourceemitbefore-and-asyncresourceemitafter-apis" aria-label="Permalink to “DEP0098: AsyncHooks embedder AsyncResource.emitBefore and AsyncResource.emitAfter APIs”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v12.0.0</td><td>End-of-Life.</td></tr><tr><td>v10.0.0, v9.6.0, v8.12.0</td><td>Runtime deprecation.</td></tr></tbody></table></div><p>Type: End-of-Life</p><p>The embedded API provided by AsyncHooks exposes <code>.emitBefore()</code> and <code>.emitAfter()</code> methods which are very easy to use incorrectly which can lead to unrecoverable errors.</p><p>Use <a href="/nodejs/api/async_context#asyncresourceruninasyncscopefn-thisarg-args"><code>asyncResource.runInAsyncScope()</code></a> API instead which provides a much safer, and more convenient, alternative. See <a href="https://github.com/nodejs/node/pull/18513" target="_blank" rel="noreferrer">https://github.com/nodejs/node/pull/18513</a>.</p><h3 id="dep0099-async-context-unaware-nodemakecallback-c-apis" tabindex="-1">DEP0099: Async context-unaware <code>node::MakeCallback</code> C++ APIs <a class="header-anchor" href="#dep0099-async-context-unaware-nodemakecallback-c-apis" aria-label="Permalink to “DEP0099: Async context-unaware node::MakeCallback C++ APIs”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v10.0.0</td><td>Compile-time deprecation.</td></tr></tbody></table></div><p>Type: Compile-time</p><p>Certain versions of <code>node::MakeCallback</code> APIs available to native addons are deprecated. Please use the versions of the API that accept an <code>async_context</code> parameter.</p><h3 id="dep0100-processassert" tabindex="-1">DEP0100: <code>process.assert()</code> <a class="header-anchor" href="#dep0100-processassert" aria-label="Permalink to “DEP0100: process.assert()”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v23.0.0</td><td>End-of-Life.</td></tr><tr><td>v10.0.0</td><td>Runtime deprecation.</td></tr><tr><td>v0.3.7</td><td>Documentation-only deprecation.</td></tr></tbody></table></div><p>Type: End-of-Life</p><p><code>process.assert()</code> is deprecated. Please use the <a href="/nodejs/api/assert"><code>assert</code></a> module instead.</p><p>This was never a documented feature.</p><h3 id="dep0101---with-lttng" tabindex="-1">DEP0101: <code>--with-lttng</code> <a class="header-anchor" href="#dep0101---with-lttng" aria-label="Permalink to “DEP0101: --with-lttng”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v10.0.0</td><td>End-of-Life.</td></tr></tbody></table></div><p>Type: End-of-Life</p><p>The <code>--with-lttng</code> compile-time option has been removed.</p><h3 id="dep0102-using-noassert-in-bufferread|write-operations" tabindex="-1">DEP0102: Using <code>noAssert</code> in <code>Buffer#(read|write)</code> operations <a class="header-anchor" href="#dep0102-using-noassert-in-bufferread|write-operations" aria-label="Permalink to “DEP0102: Using noAssert in Buffer#(read|write) operations”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v10.0.0</td><td>End-of-Life.</td></tr></tbody></table></div><p>Type: End-of-Life</p><p>Using the <code>noAssert</code> argument has no functionality anymore. All input is verified regardless of the value of <code>noAssert</code>. Skipping the verification could lead to hard-to-find errors and crashes.</p><h3 id="dep0103-processbindingutilis-typechecks" tabindex="-1">DEP0103: <code>process.binding(&#39;util&#39;).is[...]</code> typechecks <a class="header-anchor" href="#dep0103-processbindingutilis-typechecks" aria-label="Permalink to “DEP0103: process.binding(&#39;util&#39;).is[...] typechecks”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v10.9.0</td><td>Superseded by <a href="/nodejs/api/deprecations#dep0111">DEP0111</a>.</td></tr><tr><td>v10.0.0</td><td>Documentation-only deprecation.</td></tr></tbody></table></div><p>Type: Documentation-only (supports <a href="/nodejs/api/cli#pending-deprecation"><code>--pending-deprecation</code></a>)</p><p>Using <code>process.binding()</code> in general should be avoided. The type checking methods in particular can be replaced by using <a href="/nodejs/api/util#utiltypes"><code>util.types</code></a>.</p><p>This deprecation has been superseded by the deprecation of the <code>process.binding()</code> API (<a href="/nodejs/api/deprecations#dep0111">DEP0111</a>).</p><h3 id="dep0104-processenv-string-coercion" tabindex="-1">DEP0104: <code>process.env</code> string coercion <a class="header-anchor" href="#dep0104-processenv-string-coercion" aria-label="Permalink to “DEP0104: process.env string coercion”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v10.0.0</td><td>Documentation-only deprecation.</td></tr></tbody></table></div><p>Type: Documentation-only (supports <a href="/nodejs/api/cli#pending-deprecation"><code>--pending-deprecation</code></a>)</p><p>When assigning a non-string property to <a href="/nodejs/api/process#processenv"><code>process.env</code></a>, the assigned value is implicitly converted to a string. This behavior is deprecated if the assigned value is not a string, boolean, or number. In the future, such assignment might result in a thrown error. Please convert the property to a string before assigning it to <code>process.env</code>.</p><h3 id="dep0105-decipherfinaltol" tabindex="-1">DEP0105: <code>decipher.finaltol</code> <a class="header-anchor" href="#dep0105-decipherfinaltol" aria-label="Permalink to “DEP0105: decipher.finaltol”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v11.0.0</td><td>End-of-Life.</td></tr><tr><td>v10.0.0</td><td>Runtime deprecation.</td></tr></tbody></table></div><p>Type: End-of-Life</p><p><code>decipher.finaltol()</code> has never been documented and was an alias for <a href="/nodejs/api/crypto#decipherfinaloutputencoding"><code>decipher.final()</code></a>. This API has been removed, and it is recommended to use <a href="/nodejs/api/crypto#decipherfinaloutputencoding"><code>decipher.final()</code></a> instead.</p><h3 id="dep0106-cryptocreatecipher-and-cryptocreatedecipher" tabindex="-1">DEP0106: <code>crypto.createCipher</code> and <code>crypto.createDecipher</code> <a class="header-anchor" href="#dep0106-cryptocreatecipher-and-cryptocreatedecipher" aria-label="Permalink to “DEP0106: crypto.createCipher and crypto.createDecipher”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v22.0.0</td><td>End-of-Life.</td></tr><tr><td>v11.0.0</td><td>Runtime deprecation.</td></tr><tr><td>v10.0.0</td><td>Documentation-only deprecation.</td></tr></tbody></table></div><p>Type: End-of-Life</p><p><code>crypto.createCipher()</code> and <code>crypto.createDecipher()</code> have been removed as they use a weak key derivation function (MD5 with no salt) and static initialization vectors. It is recommended to derive a key using <a href="/nodejs/api/crypto#cryptopbkdf2password-salt-iterations-keylen-digest-callback"><code>crypto.pbkdf2()</code></a> or <a href="/nodejs/api/crypto#cryptoscryptpassword-salt-keylen-options-callback"><code>crypto.scrypt()</code></a> with random salts and to use <a href="/nodejs/api/crypto#cryptocreatecipherivalgorithm-key-iv-options"><code>crypto.createCipheriv()</code></a> and <a href="/nodejs/api/crypto#cryptocreatedecipherivalgorithm-key-iv-options"><code>crypto.createDecipheriv()</code></a> to obtain the <a href="/nodejs/api/crypto#class-cipher"><code>Cipher</code></a> and <a href="/nodejs/api/crypto#class-decipher"><code>Decipher</code></a> objects respectively.</p><h3 id="dep0107-tlsconvertnpnprotocols" tabindex="-1">DEP0107: <code>tls.convertNPNProtocols()</code> <a class="header-anchor" href="#dep0107-tlsconvertnpnprotocols" aria-label="Permalink to “DEP0107: tls.convertNPNProtocols()”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v11.0.0</td><td>End-of-Life.</td></tr><tr><td>v10.0.0</td><td>Runtime deprecation.</td></tr></tbody></table></div><p>Type: End-of-Life</p><p>This was an undocumented helper function not intended for use outside Node.js core and obsoleted by the removal of NPN (Next Protocol Negotiation) support.</p><h3 id="dep0108-zlibbytesread" tabindex="-1">DEP0108: <code>zlib.bytesRead</code> <a class="header-anchor" href="#dep0108-zlibbytesread" aria-label="Permalink to “DEP0108: zlib.bytesRead”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v23.0.0</td><td>End-of-Life.</td></tr><tr><td>v11.0.0</td><td>Runtime deprecation.</td></tr><tr><td>v10.0.0</td><td>Documentation-only deprecation.</td></tr></tbody></table></div><p>Type: End-of-Life</p><p>Deprecated alias for <a href="/nodejs/api/zlib#zlibbyteswritten"><code>zlib.bytesWritten</code></a>. This original name was chosen because it also made sense to interpret the value as the number of bytes read by the engine, but is inconsistent with other streams in Node.js that expose values under these names.</p><h3 id="dep0109-http-https-and-tls-support-for-invalid-urls" tabindex="-1">DEP0109: <code>http</code>, <code>https</code>, and <code>tls</code> support for invalid URLs <a class="header-anchor" href="#dep0109-http-https-and-tls-support-for-invalid-urls" aria-label="Permalink to “DEP0109: http, https, and tls support for invalid URLs”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v16.0.0</td><td>End-of-Life.</td></tr><tr><td>v11.0.0</td><td>Runtime deprecation.</td></tr></tbody></table></div><p>Type: End-of-Life</p><p>Some previously supported (but strictly invalid) URLs were accepted through the <a href="/nodejs/api/http#httprequestoptions-callback"><code>http.request()</code></a>, <a href="/nodejs/api/http#httpgetoptions-callback"><code>http.get()</code></a>, <a href="/nodejs/api/https#httpsrequestoptions-callback"><code>https.request()</code></a>, <a href="/nodejs/api/https#httpsgetoptions-callback"><code>https.get()</code></a>, and <a href="/nodejs/api/tls#tlscheckserveridentityhostname-cert"><code>tls.checkServerIdentity()</code></a> APIs because those were accepted by the legacy <code>url.parse()</code> API. The mentioned APIs now use the WHATWG URL parser that requires strictly valid URLs. Passing an invalid URL is deprecated and support will be removed in the future.</p><h3 id="dep0110-vmscript-cached-data" tabindex="-1">DEP0110: <code>vm.Script</code> cached data <a class="header-anchor" href="#dep0110-vmscript-cached-data" aria-label="Permalink to “DEP0110: vm.Script cached data”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v10.6.0</td><td>Documentation-only deprecation.</td></tr></tbody></table></div><p>Type: Documentation-only</p><p>The <code>produceCachedData</code> option is deprecated. Use <a href="/nodejs/api/vm#scriptcreatecacheddata"><code>script.createCachedData()</code></a> instead.</p><h3 id="dep0111-processbinding" tabindex="-1">DEP0111: <code>process.binding()</code> <a class="header-anchor" href="#dep0111-processbinding" aria-label="Permalink to “DEP0111: process.binding()”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v11.12.0</td><td>Added support for <code>--pending-deprecation</code>.</td></tr><tr><td>v10.9.0</td><td>Documentation-only deprecation.</td></tr></tbody></table></div><p>Type: Documentation-only (supports <a href="/nodejs/api/cli#pending-deprecation"><code>--pending-deprecation</code></a>)</p><p><code>process.binding()</code> is for use by Node.js internal code only.</p><p>While <code>process.binding()</code> has not reached End-of-Life status in general, it is unavailable when the <a href="/nodejs/api/permissions#permission-model">permission model</a> is enabled.</p><h3 id="dep0112-dgram-private-apis" tabindex="-1">DEP0112: <code>dgram</code> private APIs <a class="header-anchor" href="#dep0112-dgram-private-apis" aria-label="Permalink to “DEP0112: dgram private APIs”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v11.0.0</td><td>Runtime deprecation.</td></tr></tbody></table></div><p>Type: Runtime</p><p>The <code>node:dgram</code> module previously contained several APIs that were never meant to accessed outside of Node.js core: <code>Socket.prototype._handle</code>, <code>Socket.prototype._receiving</code>, <code>Socket.prototype._bindState</code>, <code>Socket.prototype._queue</code>, <code>Socket.prototype._reuseAddr</code>, <code>Socket.prototype._healthCheck()</code>, <code>Socket.prototype._stopReceiving()</code>, and <code>dgram._createSocketHandle()</code>.</p><h3 id="dep0113-ciphersetauthtag-deciphergetauthtag" tabindex="-1">DEP0113: <code>Cipher.setAuthTag()</code>, <code>Decipher.getAuthTag()</code> <a class="header-anchor" href="#dep0113-ciphersetauthtag-deciphergetauthtag" aria-label="Permalink to “DEP0113: Cipher.setAuthTag(), Decipher.getAuthTag()”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v12.0.0</td><td>End-of-Life.</td></tr><tr><td>v11.0.0</td><td>Runtime deprecation.</td></tr></tbody></table></div><p>Type: End-of-Life</p><p><code>Cipher.setAuthTag()</code> and <code>Decipher.getAuthTag()</code> are no longer available. They were never documented and would throw when called.</p><h3 id="dep0114-crypto_tobuf" tabindex="-1">DEP0114: <code>crypto._toBuf()</code> <a class="header-anchor" href="#dep0114-crypto_tobuf" aria-label="Permalink to “DEP0114: crypto._toBuf()”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v12.0.0</td><td>End-of-Life.</td></tr><tr><td>v11.0.0</td><td>Runtime deprecation.</td></tr></tbody></table></div><p>Type: End-of-Life</p><p>The <code>crypto._toBuf()</code> function was not designed to be used by modules outside of Node.js core and was removed.</p><h3 id="dep0115-cryptoprng-cryptopseudorandombytes-cryptorng" tabindex="-1">DEP0115: <code>crypto.prng()</code>, <code>crypto.pseudoRandomBytes()</code>, <code>crypto.rng()</code> <a class="header-anchor" href="#dep0115-cryptoprng-cryptopseudorandombytes-cryptorng" aria-label="Permalink to “DEP0115: crypto.prng(), crypto.pseudoRandomBytes(), crypto.rng()”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v11.0.0</td><td>Added documentation-only deprecation with <code>--pending-deprecation</code> support.</td></tr></tbody></table></div><p>Type: Documentation-only (supports <a href="/nodejs/api/cli#pending-deprecation"><code>--pending-deprecation</code></a>)</p><p>In recent versions of Node.js, there is no difference between <a href="/nodejs/api/crypto#cryptorandombytessize-callback"><code>crypto.randomBytes()</code></a> and <code>crypto.pseudoRandomBytes()</code>. The latter is deprecated along with the undocumented aliases <code>crypto.prng()</code> and <code>crypto.rng()</code> in favor of <a href="/nodejs/api/crypto#cryptorandombytessize-callback"><code>crypto.randomBytes()</code></a> and might be removed in a future release.</p><h3 id="dep0116-legacy-url-api" tabindex="-1">DEP0116: Legacy URL API <a class="header-anchor" href="#dep0116-legacy-url-api" aria-label="Permalink to “DEP0116: Legacy URL API”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v19.0.0, v18.13.0</td><td><code>url.parse()</code> is deprecated again in DEP0169.</td></tr><tr><td>v15.13.0, v14.17.0</td><td>Deprecation revoked. Status changed to &quot;Legacy&quot;.</td></tr><tr><td>v11.0.0</td><td>Documentation-only deprecation.</td></tr></tbody></table></div><p>Type: Deprecation revoked</p><p>The <a href="/nodejs/api/url#legacy-url-api">legacy URL API</a> is deprecated. This includes <a href="/nodejs/api/url#urlformaturlobject"><code>url.format()</code></a>, <a href="/nodejs/api/url#urlparseurlstring-parsequerystring-slashesdenotehost"><code>url.parse()</code></a>, <a href="/nodejs/api/url#urlresolvefrom-to"><code>url.resolve()</code></a>, and the <a href="/nodejs/api/url#legacy-urlobject">legacy <code>urlObject</code></a>. Please use the <a href="/nodejs/api/url#the-whatwg-url-api">WHATWG URL API</a> instead.</p><h3 id="dep0117-native-crypto-handles" tabindex="-1">DEP0117: Native crypto handles <a class="header-anchor" href="#dep0117-native-crypto-handles" aria-label="Permalink to “DEP0117: Native crypto handles”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v12.0.0</td><td>End-of-Life.</td></tr><tr><td>v11.0.0</td><td>Runtime deprecation.</td></tr></tbody></table></div><p>Type: End-of-Life</p><p>Previous versions of Node.js exposed handles to internal native objects through the <code>_handle</code> property of the <code>Cipher</code>, <code>Decipher</code>, <code>DiffieHellman</code>, <code>DiffieHellmanGroup</code>, <code>ECDH</code>, <code>Hash</code>, <code>Hmac</code>, <code>Sign</code>, and <code>Verify</code> classes. The <code>_handle</code> property has been removed because improper use of the native object can lead to crashing the application.</p><h3 id="dep0118-dnslookup-support-for-a-falsy-host-name" tabindex="-1">DEP0118: <code>dns.lookup()</code> support for a falsy host name <a class="header-anchor" href="#dep0118-dnslookup-support-for-a-falsy-host-name" aria-label="Permalink to “DEP0118: dns.lookup() support for a falsy host name”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v11.0.0</td><td>Runtime deprecation.</td></tr></tbody></table></div><p>Type: Runtime</p><p>Previous versions of Node.js supported <code>dns.lookup()</code> with a falsy host name like <code>dns.lookup(false)</code> due to backward compatibility. This behavior is undocumented and is thought to be unused in real world apps. It will become an error in future versions of Node.js.</p><h3 id="dep0119-processbindinguverrname-private-api" tabindex="-1">DEP0119: <code>process.binding(&#39;uv&#39;).errname()</code> private API <a class="header-anchor" href="#dep0119-processbindinguverrname-private-api" aria-label="Permalink to “DEP0119: process.binding(&#39;uv&#39;).errname() private API”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v11.0.0</td><td>Documentation-only deprecation.</td></tr></tbody></table></div><p>Type: Documentation-only (supports <a href="/nodejs/api/cli#pending-deprecation"><code>--pending-deprecation</code></a>)</p><p><code>process.binding(&#39;uv&#39;).errname()</code> is deprecated. Please use <a href="/nodejs/api/util#utilgetsystemerrornameerr"><code>util.getSystemErrorName()</code></a> instead.</p><h3 id="dep0120-windows-performance-counter-support" tabindex="-1">DEP0120: Windows Performance Counter support <a class="header-anchor" href="#dep0120-windows-performance-counter-support" aria-label="Permalink to “DEP0120: Windows Performance Counter support”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v12.0.0</td><td>End-of-Life.</td></tr><tr><td>v11.0.0</td><td>Runtime deprecation.</td></tr></tbody></table></div><p>Type: End-of-Life</p><p>Windows Performance Counter support has been removed from Node.js. The undocumented <code>COUNTER_NET_SERVER_CONNECTION()</code>, <code>COUNTER_NET_SERVER_CONNECTION_CLOSE()</code>, <code>COUNTER_HTTP_SERVER_REQUEST()</code>, <code>COUNTER_HTTP_SERVER_RESPONSE()</code>, <code>COUNTER_HTTP_CLIENT_REQUEST()</code>, and <code>COUNTER_HTTP_CLIENT_RESPONSE()</code> functions have been deprecated.</p><h3 id="dep0121-net_setsimultaneousaccepts" tabindex="-1">DEP0121: <code>net._setSimultaneousAccepts()</code> <a class="header-anchor" href="#dep0121-net_setsimultaneousaccepts" aria-label="Permalink to “DEP0121: net._setSimultaneousAccepts()”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v12.0.0</td><td>Runtime deprecation.</td></tr></tbody></table></div><p>Type: Runtime</p><p>The undocumented <code>net._setSimultaneousAccepts()</code> function was originally intended for debugging and performance tuning when using the <code>node:child_process</code> and <code>node:cluster</code> modules on Windows. The function is not generally useful and is being removed. See discussion here: <a href="https://github.com/nodejs/node/issues/18391" target="_blank" rel="noreferrer">https://github.com/nodejs/node/issues/18391</a></p><h3 id="dep0122-tls-serverprototypesetoptions" tabindex="-1">DEP0122: <code>tls</code> <code>Server.prototype.setOptions()</code> <a class="header-anchor" href="#dep0122-tls-serverprototypesetoptions" aria-label="Permalink to “DEP0122: tls Server.prototype.setOptions()”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v12.0.0</td><td>Runtime deprecation.</td></tr></tbody></table></div><p>Type: Runtime</p><p>Please use <code>Server.prototype.setSecureContext()</code> instead.</p><h3 id="dep0123-setting-the-tls-servername-to-an-ip-address" tabindex="-1">DEP0123: setting the TLS ServerName to an IP address <a class="header-anchor" href="#dep0123-setting-the-tls-servername-to-an-ip-address" aria-label="Permalink to “DEP0123: setting the TLS ServerName to an IP address”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v12.0.0</td><td>Runtime deprecation.</td></tr></tbody></table></div><p>Type: Runtime</p><p>Setting the TLS ServerName to an IP address is not permitted by <a href="https://tools.ietf.org/html/rfc6066#section-3" target="_blank" rel="noreferrer">RFC 6066</a>. This will be ignored in a future version.</p><h3 id="dep0124-using-replserverrli" tabindex="-1">DEP0124: using <code>REPLServer.rli</code> <a class="header-anchor" href="#dep0124-using-replserverrli" aria-label="Permalink to “DEP0124: using REPLServer.rli”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v15.0.0</td><td>End-of-Life.</td></tr><tr><td>v12.0.0</td><td>Runtime deprecation.</td></tr></tbody></table></div><p>Type: End-of-Life</p><p>This property is a reference to the instance itself.</p><h3 id="dep0125-requirenode_stream_wrap" tabindex="-1">DEP0125: <code>require(&#39;node:_stream_wrap&#39;)</code> <a class="header-anchor" href="#dep0125-requirenode_stream_wrap" aria-label="Permalink to “DEP0125: require(&#39;node:_stream_wrap&#39;)”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v12.0.0</td><td>Runtime deprecation.</td></tr></tbody></table></div><p>Type: Runtime</p><p>The <code>node:_stream_wrap</code> module is deprecated.</p><h3 id="dep0126-timersactive" tabindex="-1">DEP0126: <code>timers.active()</code> <a class="header-anchor" href="#dep0126-timersactive" aria-label="Permalink to “DEP0126: timers.active()”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v11.14.0</td><td>Runtime deprecation.</td></tr></tbody></table></div><p>Type: Runtime</p><p>The previously undocumented <code>timers.active()</code> is deprecated. Please use the publicly documented <a href="/nodejs/api/timers#timeoutrefresh"><code>timeout.refresh()</code></a> instead. If re-referencing the timeout is necessary, <a href="/nodejs/api/timers#timeoutref"><code>timeout.ref()</code></a> can be used with no performance impact since Node.js 10.</p><h3 id="dep0127-timers_unrefactive" tabindex="-1">DEP0127: <code>timers._unrefActive()</code> <a class="header-anchor" href="#dep0127-timers_unrefactive" aria-label="Permalink to “DEP0127: timers._unrefActive()”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v11.14.0</td><td>Runtime deprecation.</td></tr></tbody></table></div><p>Type: Runtime</p><p>The previously undocumented and &quot;private&quot; <code>timers._unrefActive()</code> is deprecated. Please use the publicly documented <a href="/nodejs/api/timers#timeoutrefresh"><code>timeout.refresh()</code></a> instead. If unreferencing the timeout is necessary, <a href="/nodejs/api/timers#timeoutunref"><code>timeout.unref()</code></a> can be used with no performance impact since Node.js 10.</p><h3 id="dep0128-modules-with-an-invalid-main-entry-and-an-indexjs-file" tabindex="-1">DEP0128: modules with an invalid <code>main</code> entry and an <code>index.js</code> file <a class="header-anchor" href="#dep0128-modules-with-an-invalid-main-entry-and-an-indexjs-file" aria-label="Permalink to “DEP0128: modules with an invalid main entry and an index.js file”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v16.0.0</td><td>Runtime deprecation.</td></tr><tr><td>v12.0.0</td><td>Documentation-only.</td></tr></tbody></table></div><p>Type: Runtime</p><p>Modules that have an invalid <code>main</code> entry (e.g., <code>./does-not-exist.js</code>) and also have an <code>index.js</code> file in the top level directory will resolve the <code>index.js</code> file. That is deprecated and is going to throw an error in future Node.js versions.</p><h3 id="dep0129-childprocess_channel" tabindex="-1">DEP0129: <code>ChildProcess._channel</code> <a class="header-anchor" href="#dep0129-childprocess_channel" aria-label="Permalink to “DEP0129: ChildProcess._channel”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v13.0.0</td><td>Runtime deprecation.</td></tr><tr><td>v11.14.0</td><td>Documentation-only.</td></tr></tbody></table></div><p>Type: Runtime</p><p>The <code>_channel</code> property of child process objects returned by <code>spawn()</code> and similar functions is not intended for public use. Use <code>ChildProcess.channel</code> instead.</p><h3 id="dep0130-modulecreaterequirefrompath" tabindex="-1">DEP0130: <code>Module.createRequireFromPath()</code> <a class="header-anchor" href="#dep0130-modulecreaterequirefrompath" aria-label="Permalink to “DEP0130: Module.createRequireFromPath()”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v16.0.0</td><td>End-of-life.</td></tr><tr><td>v13.0.0</td><td>Runtime deprecation.</td></tr><tr><td>v12.2.0</td><td>Documentation-only.</td></tr></tbody></table></div><p>Type: End-of-Life</p><p>Use <a href="/nodejs/api/module#modulecreaterequirefilename"><code>module.createRequire()</code></a> instead.</p><h3 id="dep0131-legacy-http-parser" tabindex="-1">DEP0131: Legacy HTTP parser <a class="header-anchor" href="#dep0131-legacy-http-parser" aria-label="Permalink to “DEP0131: Legacy HTTP parser”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v13.0.0</td><td>This feature has been removed.</td></tr><tr><td>v12.22.0</td><td>Runtime deprecation.</td></tr><tr><td>v12.3.0</td><td>Documentation-only.</td></tr></tbody></table></div><p>Type: End-of-Life</p><p>The legacy HTTP parser, used by default in versions of Node.js prior to 12.0.0, is deprecated and has been removed in v13.0.0. Prior to v13.0.0, the <code>--http-parser=legacy</code> command-line flag could be used to revert to using the legacy parser.</p><h3 id="dep0132-workerterminate-with-callback" tabindex="-1">DEP0132: <code>worker.terminate()</code> with callback <a class="header-anchor" href="#dep0132-workerterminate-with-callback" aria-label="Permalink to “DEP0132: worker.terminate() with callback”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v12.5.0</td><td>Runtime deprecation.</td></tr></tbody></table></div><p>Type: Runtime</p><p>Passing a callback to <a href="/nodejs/api/worker_threads#workerterminate"><code>worker.terminate()</code></a> is deprecated. Use the returned <code>Promise</code> instead, or a listener to the worker&#39;s <code>&#39;exit&#39;</code> event.</p><h3 id="dep0133-http-connection" tabindex="-1">DEP0133: <code>http</code> <code>connection</code> <a class="header-anchor" href="#dep0133-http-connection" aria-label="Permalink to “DEP0133: http connection”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v12.12.0</td><td>Documentation-only deprecation.</td></tr></tbody></table></div><p>Type: Documentation-only</p><p>Prefer <a href="/nodejs/api/http#responsesocket"><code>response.socket</code></a> over <a href="/nodejs/api/http#responseconnection"><code>response.connection</code></a> and <a href="/nodejs/api/http#requestsocket"><code>request.socket</code></a> over <a href="/nodejs/api/http#requestconnection"><code>request.connection</code></a>.</p><h3 id="dep0134-process_tickcallback" tabindex="-1">DEP0134: <code>process._tickCallback</code> <a class="header-anchor" href="#dep0134-process_tickcallback" aria-label="Permalink to “DEP0134: process._tickCallback”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v12.12.0</td><td>Documentation-only deprecation.</td></tr></tbody></table></div><p>Type: Documentation-only (supports <a href="/nodejs/api/cli#pending-deprecation"><code>--pending-deprecation</code></a>)</p><p>The <code>process._tickCallback</code> property was never documented as an officially supported API.</p><h3 id="dep0135-writestreamopen-and-readstreamopen-are-internal" tabindex="-1">DEP0135: <code>WriteStream.open()</code> and <code>ReadStream.open()</code> are internal <a class="header-anchor" href="#dep0135-writestreamopen-and-readstreamopen-are-internal" aria-label="Permalink to “DEP0135: WriteStream.open() and ReadStream.open() are internal”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v13.0.0</td><td>Runtime deprecation.</td></tr></tbody></table></div><p>Type: Runtime</p><p><a href="/nodejs/api/fs#class-fswritestream"><code>WriteStream.open()</code></a> and <a href="/nodejs/api/fs#class-fsreadstream"><code>ReadStream.open()</code></a> are undocumented internal APIs that do not make sense to use in userland. File streams should always be opened through their corresponding factory methods <a href="/nodejs/api/fs#fscreatewritestreampath-options"><code>fs.createWriteStream()</code></a> and <a href="/nodejs/api/fs#fscreatereadstreampath-options"><code>fs.createReadStream()</code></a>) or by passing a file descriptor in options.</p><h3 id="dep0136-http-finished" tabindex="-1">DEP0136: <code>http</code> <code>finished</code> <a class="header-anchor" href="#dep0136-http-finished" aria-label="Permalink to “DEP0136: http finished”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v13.4.0, v12.16.0</td><td>Documentation-only deprecation.</td></tr></tbody></table></div><p>Type: Documentation-only</p><p><a href="/nodejs/api/http#responsefinished"><code>response.finished</code></a> indicates whether <a href="/nodejs/api/http#responseenddata-encoding-callback"><code>response.end()</code></a> has been called, not whether <code>&#39;finish&#39;</code> has been emitted and the underlying data is flushed.</p><p>Use <a href="/nodejs/api/http#responsewritablefinished"><code>response.writableFinished</code></a> or <a href="/nodejs/api/http#responsewritableended"><code>response.writableEnded</code></a> accordingly instead to avoid the ambiguity.</p><p>To maintain existing behavior <code>response.finished</code> should be replaced with <code>response.writableEnded</code>.</p><h3 id="dep0137-closing-fsfilehandle-on-garbage-collection" tabindex="-1">DEP0137: Closing fs.FileHandle on garbage collection <a class="header-anchor" href="#dep0137-closing-fsfilehandle-on-garbage-collection" aria-label="Permalink to “DEP0137: Closing fs.FileHandle on garbage collection”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v14.0.0</td><td>Runtime deprecation.</td></tr></tbody></table></div><p>Type: Runtime</p><p>Allowing a <a href="/nodejs/api/fs#class-filehandle"><code>fs.FileHandle</code></a> object to be closed on garbage collection is deprecated. In the future, doing so might result in a thrown error that will terminate the process.</p><p>Please ensure that all <code>fs.FileHandle</code> objects are explicitly closed using <code>FileHandle.prototype.close()</code> when the <code>fs.FileHandle</code> is no longer needed:</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> fsPromises</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;node:fs&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).promises;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> openAndClose</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> filehandle;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  try</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    filehandle </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> fsPromises.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">open</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;thefile.txt&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;r&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">finally</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (filehandle </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!==</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> undefined</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> filehandle.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">close</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h3 id="dep0138-processmainmodule" tabindex="-1">DEP0138: <code>process.mainModule</code> <a class="header-anchor" href="#dep0138-processmainmodule" aria-label="Permalink to “DEP0138: process.mainModule”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v14.0.0</td><td>Documentation-only deprecation.</td></tr></tbody></table></div><p>Type: Documentation-only</p><p><a href="/nodejs/api/process#processmainmodule"><code>process.mainModule</code></a> is a CommonJS-only feature while <code>process</code> global object is shared with non-CommonJS environment. Its use within ECMAScript modules is unsupported.</p><p>It is deprecated in favor of <a href="/nodejs/api/modules#accessing-the-main-module"><code>require.main</code></a>, because it serves the same purpose and is only available on CommonJS environment.</p><h3 id="dep0139-processumask-with-no-arguments" tabindex="-1">DEP0139: <code>process.umask()</code> with no arguments <a class="header-anchor" href="#dep0139-processumask-with-no-arguments" aria-label="Permalink to “DEP0139: process.umask() with no arguments”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v14.0.0, v12.19.0</td><td>Documentation-only deprecation.</td></tr></tbody></table></div><p>Type: Documentation-only</p><p>Calling <code>process.umask()</code> with no argument causes the process-wide umask to be written twice. This introduces a race condition between threads, and is a potential security vulnerability. There is no safe, cross-platform alternative API.</p><h3 id="dep0140-use-requestdestroy-instead-of-requestabort" tabindex="-1">DEP0140: Use <code>request.destroy()</code> instead of <code>request.abort()</code> <a class="header-anchor" href="#dep0140-use-requestdestroy-instead-of-requestabort" aria-label="Permalink to “DEP0140: Use request.destroy() instead of request.abort()”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v14.1.0, v13.14.0</td><td>Documentation-only deprecation.</td></tr></tbody></table></div><p>Type: Documentation-only</p><p>Use <a href="/nodejs/api/http#requestdestroyerror"><code>request.destroy()</code></a> instead of <a href="/nodejs/api/http#requestabort"><code>request.abort()</code></a>.</p><h3 id="dep0141-replinputstream-and-reploutputstream" tabindex="-1">DEP0141: <code>repl.inputStream</code> and <code>repl.outputStream</code> <a class="header-anchor" href="#dep0141-replinputstream-and-reploutputstream" aria-label="Permalink to “DEP0141: repl.inputStream and repl.outputStream”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v14.3.0</td><td>Documentation-only (supports [<code>--pending-deprecation</code>][]).</td></tr></tbody></table></div><p>Type: Documentation-only (supports <a href="/nodejs/api/cli#pending-deprecation"><code>--pending-deprecation</code></a>)</p><p>The <code>node:repl</code> module exported the input and output stream twice. Use <code>.input</code> instead of <code>.inputStream</code> and <code>.output</code> instead of <code>.outputStream</code>.</p><h3 id="dep0142-repl_builtinlibs" tabindex="-1">DEP0142: <code>repl._builtinLibs</code> <a class="header-anchor" href="#dep0142-repl_builtinlibs" aria-label="Permalink to “DEP0142: repl._builtinLibs”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v14.3.0</td><td>Documentation-only (supports [<code>--pending-deprecation</code>][]).</td></tr></tbody></table></div><p>Type: Documentation-only</p><p>The <code>node:repl</code> module exports a <code>_builtinLibs</code> property that contains an array of built-in modules. It was incomplete so far and instead it&#39;s better to rely upon <code>require(&#39;node:module&#39;).builtinModules</code>.</p><h3 id="dep0143-transform_transformstate" tabindex="-1">DEP0143: <code>Transform._transformState</code> <a class="header-anchor" href="#dep0143-transform_transformstate" aria-label="Permalink to “DEP0143: Transform._transformState”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v14.5.0</td><td>Runtime deprecation.</td></tr></tbody></table></div><p>Type: Runtime <code>Transform._transformState</code> will be removed in future versions where it is no longer required due to simplification of the implementation.</p><h3 id="dep0144-moduleparent" tabindex="-1">DEP0144: <code>module.parent</code> <a class="header-anchor" href="#dep0144-moduleparent" aria-label="Permalink to “DEP0144: module.parent”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v14.6.0, v12.19.0</td><td>Documentation-only deprecation.</td></tr></tbody></table></div><p>Type: Documentation-only (supports <a href="/nodejs/api/cli#pending-deprecation"><code>--pending-deprecation</code></a>)</p><p>A CommonJS module can access the first module that required it using <code>module.parent</code>. This feature is deprecated because it does not work consistently in the presence of ECMAScript modules and because it gives an inaccurate representation of the CommonJS module graph.</p><p>Some modules use it to check if they are the entry point of the current process. Instead, it is recommended to compare <code>require.main</code> and <code>module</code>:</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (require.main </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">===</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> module</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // Code section that will run only if current file is the entry point.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>When looking for the CommonJS modules that have required the current one, <code>require.cache</code> and <code>module.children</code> can be used:</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> moduleParents</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Object.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">values</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(require.cache)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">filter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">m</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> m.children.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">includes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">module</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">));</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="dep0145-socketbuffersize" tabindex="-1">DEP0145: <code>socket.bufferSize</code> <a class="header-anchor" href="#dep0145-socketbuffersize" aria-label="Permalink to “DEP0145: socket.bufferSize”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v14.6.0</td><td>Documentation-only deprecation.</td></tr></tbody></table></div><p>Type: Documentation-only</p><p><a href="/nodejs/api/net#socketbuffersize"><code>socket.bufferSize</code></a> is just an alias for <a href="/nodejs/api/stream#writablewritablelength"><code>writable.writableLength</code></a>.</p><h3 id="dep0146-new-cryptocertificate" tabindex="-1">DEP0146: <code>new crypto.Certificate()</code> <a class="header-anchor" href="#dep0146-new-cryptocertificate" aria-label="Permalink to “DEP0146: new crypto.Certificate()”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v14.9.0</td><td>Documentation-only deprecation.</td></tr></tbody></table></div><p>Type: Documentation-only</p><p>The <a href="/nodejs/api/crypto#legacy-api"><code>crypto.Certificate()</code> constructor</a> is deprecated. Use <a href="/nodejs/api/crypto#class-certificate">static methods of <code>crypto.Certificate()</code></a> instead.</p><h3 id="dep0147-fs-rmdir-path-recursive-true-dep0147-fsrmdirpath-recursive-true" tabindex="-1">DEP0147: <code>fs.rmdir(path, { recursive: true })</code> {#dep0147-fsrmdirpath-{-recursive-true-}} <a class="header-anchor" href="#dep0147-fs-rmdir-path-recursive-true-dep0147-fsrmdirpath-recursive-true" aria-label="Permalink to “DEP0147: fs.rmdir(path, { recursive: true }) {#dep0147-fsrmdirpath-{-recursive-true-}}”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v16.0.0</td><td>Runtime deprecation.</td></tr><tr><td>v15.0.0</td><td>Runtime deprecation for permissive behavior.</td></tr><tr><td>v14.14.0</td><td>Documentation-only deprecation.</td></tr></tbody></table></div><p>Type: Runtime</p><p>In future versions of Node.js, <code>recursive</code> option will be ignored for <code>fs.rmdir</code>, <code>fs.rmdirSync</code>, and <code>fs.promises.rmdir</code>.</p><p>Use <code>fs.rm(path, { recursive: true, force: true })</code>, <code>fs.rmSync(path, { recursive: true, force: true })</code> or <code>fs.promises.rm(path, { recursive: true, force: true })</code> instead.</p><h3 id="dep0148-folder-mappings-in-&quot;exports&quot;-trailing-&quot;/&quot;" tabindex="-1">DEP0148: Folder mappings in <code>&quot;exports&quot;</code> (trailing <code>&quot;/&quot;</code>) <a class="header-anchor" href="#dep0148-folder-mappings-in-&quot;exports&quot;-trailing-&quot;/&quot;" aria-label="Permalink to “DEP0148: Folder mappings in &quot;exports&quot; (trailing &quot;/&quot;)”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v17.0.0</td><td>End-of-Life.</td></tr><tr><td>v16.0.0</td><td>Runtime deprecation.</td></tr><tr><td>v15.1.0</td><td>Runtime deprecation for self-referencing imports.</td></tr><tr><td>v14.13.0</td><td>Documentation-only deprecation.</td></tr></tbody></table></div><p>Type: Runtime</p><p>Using a trailing <code>&quot;/&quot;</code> to define subpath folder mappings in the <a href="/nodejs/api/packages#subpath-exports">subpath exports</a> or <a href="/nodejs/api/packages#subpath-imports">subpath imports</a> fields is deprecated. Use <a href="/nodejs/api/packages#subpath-patterns">subpath patterns</a> instead.</p><h3 id="dep0149-httpincomingmessageconnection" tabindex="-1">DEP0149: <code>http.IncomingMessage#connection</code> <a class="header-anchor" href="#dep0149-httpincomingmessageconnection" aria-label="Permalink to “DEP0149: http.IncomingMessage#connection”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v16.0.0</td><td>Documentation-only deprecation.</td></tr></tbody></table></div><p>Type: Documentation-only.</p><p>Prefer <a href="/nodejs/api/http#messagesocket"><code>message.socket</code></a> over <a href="/nodejs/api/http#messageconnection"><code>message.connection</code></a>.</p><h3 id="dep0150-changing-the-value-of-processconfig" tabindex="-1">DEP0150: Changing the value of <code>process.config</code> <a class="header-anchor" href="#dep0150-changing-the-value-of-processconfig" aria-label="Permalink to “DEP0150: Changing the value of process.config”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v19.0.0</td><td>End-of-Life.</td></tr><tr><td>v16.0.0</td><td>Runtime deprecation.</td></tr></tbody></table></div><p>Type: End-of-Life</p><p>The <code>process.config</code> property provides access to Node.js compile-time settings. However, the property is mutable and therefore subject to tampering. The ability to change the value will be removed in a future version of Node.js.</p><h3 id="dep0151-main-index-lookup-and-extension-searching" tabindex="-1">DEP0151: Main index lookup and extension searching <a class="header-anchor" href="#dep0151-main-index-lookup-and-extension-searching" aria-label="Permalink to “DEP0151: Main index lookup and extension searching”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v16.0.0</td><td>Runtime deprecation.</td></tr><tr><td>v15.8.0, v14.18.0</td><td>Documentation-only deprecation with <code>--pending-deprecation</code> support.</td></tr></tbody></table></div><p>Type: Runtime</p><p>Previously, <code>index.js</code> and extension searching lookups would apply to <code>import &#39;pkg&#39;</code> main entry point resolution, even when resolving ES modules.</p><p>With this deprecation, all ES module main entry point resolutions require an explicit <a href="/nodejs/api/packages#main-entry-point-export"><code>&quot;exports&quot;</code> or <code>&quot;main&quot;</code> entry</a> with the exact file extension.</p><h3 id="dep0152-extension-performanceentry-properties" tabindex="-1">DEP0152: Extension PerformanceEntry properties <a class="header-anchor" href="#dep0152-extension-performanceentry-properties" aria-label="Permalink to “DEP0152: Extension PerformanceEntry properties”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v16.0.0</td><td>Runtime deprecation.</td></tr></tbody></table></div><p>Type: Runtime</p><p>The <code>&#39;gc&#39;</code>, <code>&#39;http2&#39;</code>, and <code>&#39;http&#39;</code> <a href="/nodejs/api/perf_hooks#class-performanceentry">&lt;PerformanceEntry&gt;</a> object types have additional properties assigned to them that provide additional information. These properties are now available within the standard <code>detail</code> property of the <code>PerformanceEntry</code> object. The existing accessors have been deprecated and should no longer be used.</p><h3 id="dep0153-dnslookup-and-dnspromiseslookup-options-type-coercion" tabindex="-1">DEP0153: <code>dns.lookup</code> and <code>dnsPromises.lookup</code> options type coercion <a class="header-anchor" href="#dep0153-dnslookup-and-dnspromiseslookup-options-type-coercion" aria-label="Permalink to “DEP0153: dns.lookup and dnsPromises.lookup options type coercion”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v18.0.0</td><td>End-of-Life.</td></tr><tr><td>v17.0.0</td><td>Runtime deprecation.</td></tr><tr><td>v16.8.0</td><td>Documentation-only deprecation.</td></tr></tbody></table></div><p>Type: End-of-Life</p><p>Using a non-nullish non-integer value for <code>family</code> option, a non-nullish non-number value for <code>hints</code> option, a non-nullish non-boolean value for <code>all</code> option, or a non-nullish non-boolean value for <code>verbatim</code> option in <a href="/nodejs/api/dns#dnslookuphostname-options-callback"><code>dns.lookup()</code></a> and <a href="/nodejs/api/dns#dnspromiseslookuphostname-options"><code>dnsPromises.lookup()</code></a> throws an <code>ERR_INVALID_ARG_TYPE</code> error.</p><h3 id="dep0154-rsa-pss-generate-key-pair-options" tabindex="-1">DEP0154: RSA-PSS generate key pair options <a class="header-anchor" href="#dep0154-rsa-pss-generate-key-pair-options" aria-label="Permalink to “DEP0154: RSA-PSS generate key pair options”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v20.0.0</td><td>Runtime deprecation.</td></tr><tr><td>v16.10.0</td><td>Documentation-only deprecation.</td></tr></tbody></table></div><p>Type: Runtime</p><p>The <code>&#39;hash&#39;</code> and <code>&#39;mgf1Hash&#39;</code> options are replaced with <code>&#39;hashAlgorithm&#39;</code> and <code>&#39;mgf1HashAlgorithm&#39;</code>.</p><h3 id="dep0155-trailing-slashes-in-pattern-specifier-resolutions" tabindex="-1">DEP0155: Trailing slashes in pattern specifier resolutions <a class="header-anchor" href="#dep0155-trailing-slashes-in-pattern-specifier-resolutions" aria-label="Permalink to “DEP0155: Trailing slashes in pattern specifier resolutions”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v17.0.0</td><td>Runtime deprecation.</td></tr><tr><td>v16.10.0</td><td>Documentation-only deprecation with <code>--pending-deprecation</code> support.</td></tr></tbody></table></div><p>Type: Runtime</p><p>The remapping of specifiers ending in <code>&quot;/&quot;</code> like <code>import &#39;pkg/x/&#39;</code> is deprecated for package <code>&quot;exports&quot;</code> and <code>&quot;imports&quot;</code> pattern resolutions.</p><h3 id="dep0156-aborted-property-and-abort-aborted-event-in-http" tabindex="-1">DEP0156: <code>.aborted</code> property and <code>&#39;abort&#39;</code>, <code>&#39;aborted&#39;</code> event in <code>http</code> <a class="header-anchor" href="#dep0156-aborted-property-and-abort-aborted-event-in-http" aria-label="Permalink to “DEP0156: .aborted property and &#39;abort&#39;, &#39;aborted&#39; event in http”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v17.0.0, v16.12.0</td><td>Documentation-only deprecation.</td></tr></tbody></table></div><p>Type: Documentation-only</p><p>Move to <a href="/nodejs/api/stream#stream">&lt;Stream&gt;</a> API instead, as the <a href="/nodejs/api/http#class-httpclientrequest"><code>http.ClientRequest</code></a>, <a href="/nodejs/api/http#class-httpserverresponse"><code>http.ServerResponse</code></a>, and <a href="/nodejs/api/http#class-httpincomingmessage"><code>http.IncomingMessage</code></a> are all stream-based. Check <code>stream.destroyed</code> instead of the <code>.aborted</code> property, and listen for <code>&#39;close&#39;</code> instead of <code>&#39;abort&#39;</code>, <code>&#39;aborted&#39;</code> event.</p><p>The <code>.aborted</code> property and <code>&#39;abort&#39;</code> event are only useful for detecting <code>.abort()</code> calls. For closing a request early, use the Stream <code>.destroy([error])</code> then check the <code>.destroyed</code> property and <code>&#39;close&#39;</code> event should have the same effect. The receiving end should also check the <a href="/nodejs/api/stream#readablereadableended"><code>readable.readableEnded</code></a> value on <a href="/nodejs/api/http#class-httpincomingmessage"><code>http.IncomingMessage</code></a> to get whether it was an aborted or graceful destroy.</p><h3 id="dep0157-thenable-support-in-streams" tabindex="-1">DEP0157: Thenable support in streams <a class="header-anchor" href="#dep0157-thenable-support-in-streams" aria-label="Permalink to “DEP0157: Thenable support in streams”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v18.0.0</td><td>End-of-life.</td></tr><tr><td>v17.2.0, v16.14.0</td><td>Documentation-only deprecation.</td></tr></tbody></table></div><p>Type: End-of-Life</p><p>An undocumented feature of Node.js streams was to support thenables in implementation methods. This is now deprecated, use callbacks instead and avoid use of async function for streams implementation methods.</p><p>This feature caused users to encounter unexpected problems where the user implements the function in callback style but uses e.g. an async method which would cause an error since mixing promise and callback semantics is not valid.</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> w</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Writable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  async</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> final</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">callback</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    await</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> someOp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    callback</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="dep0158-bufferslicestart-end" tabindex="-1">DEP0158: <code>buffer.slice(start, end)</code> <a class="header-anchor" href="#dep0158-bufferslicestart-end" aria-label="Permalink to “DEP0158: buffer.slice(start, end)”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v17.5.0, v16.15.0</td><td>Documentation-only deprecation.</td></tr></tbody></table></div><p>Type: Documentation-only</p><p>This method was deprecated because it is not compatible with <code>Uint8Array.prototype.slice()</code>, which is a superclass of <code>Buffer</code>.</p><p>Use <a href="/nodejs/api/buffer#bufsubarraystart-end"><code>buffer.subarray</code></a> which does the same thing instead.</p><h3 id="dep0159-err_invalid_callback" tabindex="-1">DEP0159: <code>ERR_INVALID_CALLBACK</code> <a class="header-anchor" href="#dep0159-err_invalid_callback" aria-label="Permalink to “DEP0159: ERR_INVALID_CALLBACK”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v18.0.0</td><td>End-of-Life.</td></tr></tbody></table></div><p>Type: End-of-Life</p><p>This error code was removed due to adding more confusion to the errors used for value type validation.</p><h3 id="dep0160-processonmultipleresolves-handler" tabindex="-1">DEP0160: <code>process.on(&#39;multipleResolves&#39;, handler)</code> <a class="header-anchor" href="#dep0160-processonmultipleresolves-handler" aria-label="Permalink to “DEP0160: process.on(&#39;multipleResolves&#39;, handler)”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v18.0.0</td><td>Runtime deprecation.</td></tr><tr><td>v17.6.0, v16.15.0</td><td>Documentation-only deprecation.</td></tr></tbody></table></div><p>Type: Runtime.</p><p>This event was deprecated because it did not work with V8 promise combinators which diminished its usefulness.</p><h3 id="dep0161-process_getactiverequests-and-process_getactivehandles" tabindex="-1">DEP0161: <code>process._getActiveRequests()</code> and <code>process._getActiveHandles()</code> <a class="header-anchor" href="#dep0161-process_getactiverequests-and-process_getactivehandles" aria-label="Permalink to “DEP0161: process._getActiveRequests() and process._getActiveHandles()”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v17.6.0, v16.15.0</td><td>Documentation-only deprecation.</td></tr></tbody></table></div><p>Type: Documentation-only</p><p>The <code>process._getActiveHandles()</code> and <code>process._getActiveRequests()</code> functions are not intended for public use and can be removed in future releases.</p><p>Use <a href="/nodejs/api/process#processgetactiveresourcesinfo"><code>process.getActiveResourcesInfo()</code></a> to get a list of types of active resources and not the actual references.</p><h3 id="dep0162-fswrite-fswritefilesync-coercion-to-string" tabindex="-1">DEP0162: <code>fs.write()</code>, <code>fs.writeFileSync()</code> coercion to string <a class="header-anchor" href="#dep0162-fswrite-fswritefilesync-coercion-to-string" aria-label="Permalink to “DEP0162: fs.write(), fs.writeFileSync() coercion to string”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v19.0.0</td><td>End-of-Life.</td></tr><tr><td>v18.0.0</td><td>Runtime deprecation.</td></tr><tr><td>v17.8.0, v16.15.0</td><td>Documentation-only deprecation.</td></tr></tbody></table></div><p>Type: End-of-Life</p><p>Implicit coercion of objects with own <code>toString</code> property, passed as second parameter in <a href="/nodejs/api/fs#fswritefd-buffer-offset-length-position-callback"><code>fs.write()</code></a>, <a href="/nodejs/api/fs#fswritefilefile-data-options-callback"><code>fs.writeFile()</code></a>, <a href="/nodejs/api/fs#fsappendfilepath-data-options-callback"><code>fs.appendFile()</code></a>, <a href="/nodejs/api/fs#fswritefilesyncfile-data-options"><code>fs.writeFileSync()</code></a>, and <a href="/nodejs/api/fs#fsappendfilesyncpath-data-options"><code>fs.appendFileSync()</code></a> is deprecated. Convert them to primitive strings.</p><h3 id="dep0163-channelsubscribeonmessage-channelunsubscribeonmessage" tabindex="-1">DEP0163: <code>channel.subscribe(onMessage)</code>, <code>channel.unsubscribe(onMessage)</code> <a class="header-anchor" href="#dep0163-channelsubscribeonmessage-channelunsubscribeonmessage" aria-label="Permalink to “DEP0163: channel.subscribe(onMessage), channel.unsubscribe(onMessage)”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v18.7.0, v16.17.0</td><td>Documentation-only deprecation.</td></tr></tbody></table></div><p>Type: Documentation-only</p><p>These methods were deprecated because they can be used in a way which does not hold the channel reference alive long enough to receive the events.</p><p>Use <a href="/nodejs/api/diagnostics_channel#diagnostics-channelsubscribename-onmessage"><code>diagnostics_channel.subscribe(name, onMessage)</code></a> or <a href="/nodejs/api/diagnostics_channel#diagnostics-channelunsubscribename-onmessage"><code>diagnostics_channel.unsubscribe(name, onMessage)</code></a> which does the same thing instead.</p><h3 id="dep0164-processexitcode-processexitcode-coercion-to-integer" tabindex="-1">DEP0164: <code>process.exit(code)</code>, <code>process.exitCode</code> coercion to integer <a class="header-anchor" href="#dep0164-processexitcode-processexitcode-coercion-to-integer" aria-label="Permalink to “DEP0164: process.exit(code), process.exitCode coercion to integer”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v20.0.0</td><td>End-of-Life.</td></tr><tr><td>v19.0.0</td><td>Runtime deprecation.</td></tr><tr><td>v18.10.0, v16.18.0</td><td>Documentation-only deprecation of <code>process.exitCode</code> integer coercion.</td></tr><tr><td>v18.7.0, v16.17.0</td><td>Documentation-only deprecation of <code>process.exit(code)</code> integer coercion.</td></tr></tbody></table></div><p>Type: End-of-Life</p><p>Values other than <code>undefined</code>, <code>null</code>, integer numbers, and integer strings (e.g., <code>&#39;1&#39;</code>) are deprecated as value for the <code>code</code> parameter in <a href="/nodejs/api/process#processexitcode"><code>process.exit()</code></a> and as value to assign to <a href="/nodejs/api/process#processexitcode-1"><code>process.exitCode</code></a>.</p><h3 id="dep0165---trace-atomics-wait" tabindex="-1">DEP0165: <code>--trace-atomics-wait</code> <a class="header-anchor" href="#dep0165---trace-atomics-wait" aria-label="Permalink to “DEP0165: --trace-atomics-wait”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v23.0.0</td><td>End-of-Life.</td></tr><tr><td>v22.0.0</td><td>Runtime deprecation.</td></tr><tr><td>v18.8.0, v16.18.0</td><td>Documentation-only deprecation.</td></tr></tbody></table></div><p>Type: End-of-Life</p><p>The <code>--trace-atomics-wait</code> flag has been removed because it uses the V8 hook <code>SetAtomicsWaitCallback</code>, that will be removed in a future V8 release.</p><h3 id="dep0166-double-slashes-in-imports-and-exports-targets" tabindex="-1">DEP0166: Double slashes in imports and exports targets <a class="header-anchor" href="#dep0166-double-slashes-in-imports-and-exports-targets" aria-label="Permalink to “DEP0166: Double slashes in imports and exports targets”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v19.0.0</td><td>Runtime deprecation.</td></tr><tr><td>v18.10.0</td><td>Documentation-only deprecation with <code>--pending-deprecation</code> support.</td></tr></tbody></table></div><p>Type: Runtime</p><p>Package imports and exports targets mapping into paths including a double slash (of <em>&quot;/&quot;</em> or <em>&quot;&quot;</em>) are deprecated and will fail with a resolution validation error in a future release. This same deprecation also applies to pattern matches starting or ending in a slash.</p><h3 id="dep0167-weak-diffiehellmangroup-instances-modp1-modp2-modp5" tabindex="-1">DEP0167: Weak <code>DiffieHellmanGroup</code> instances (<code>modp1</code>, <code>modp2</code>, <code>modp5</code>) <a class="header-anchor" href="#dep0167-weak-diffiehellmangroup-instances-modp1-modp2-modp5" aria-label="Permalink to “DEP0167: Weak DiffieHellmanGroup instances (modp1, modp2, modp5)”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v18.10.0, v16.18.0</td><td>Documentation-only deprecation.</td></tr></tbody></table></div><p>Type: Documentation-only</p><p>The well-known MODP groups <code>modp1</code>, <code>modp2</code>, and <code>modp5</code> are deprecated because they are not secure against practical attacks. See <a href="https://www.rfc-editor.org/rfc/rfc8247#section-2.4" target="_blank" rel="noreferrer">RFC 8247 Section 2.4</a> for details.</p><p>These groups might be removed in future versions of Node.js. Applications that rely on these groups should evaluate using stronger MODP groups instead.</p><h3 id="dep0168-unhandled-exception-in-node-api-callbacks" tabindex="-1">DEP0168: Unhandled exception in Node-API callbacks <a class="header-anchor" href="#dep0168-unhandled-exception-in-node-api-callbacks" aria-label="Permalink to “DEP0168: Unhandled exception in Node-API callbacks”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v18.3.0, v16.17.0</td><td>Runtime deprecation.</td></tr></tbody></table></div><p>Type: Runtime</p><p>The implicit suppression of uncaught exceptions in Node-API callbacks is now deprecated.</p><p>Set the flag <a href="/nodejs/api/cli#force-node-api-uncaught-exceptions-policy"><code>--force-node-api-uncaught-exceptions-policy</code></a> to force Node.js to emit an <a href="/nodejs/api/process#event-uncaughtexception"><code>&#39;uncaughtException&#39;</code></a> event if the exception is not handled in Node-API callbacks.</p><h3 id="dep0169-insecure-urlparse" tabindex="-1">DEP0169: Insecure url.parse() <a class="header-anchor" href="#dep0169-insecure-urlparse" aria-label="Permalink to “DEP0169: Insecure url.parse()”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v19.9.0, v18.17.0</td><td>Added support for <code>--pending-deprecation</code>.</td></tr><tr><td>v19.0.0, v18.13.0</td><td>Documentation-only deprecation.</td></tr></tbody></table></div><p>Type: Documentation-only (supports <a href="/nodejs/api/cli#pending-deprecation"><code>--pending-deprecation</code></a>)</p><p><a href="/nodejs/api/url#urlparseurlstring-parsequerystring-slashesdenotehost"><code>url.parse()</code></a> behavior is not standardized and prone to errors that have security implications. Use the <a href="/nodejs/api/url#the-whatwg-url-api">WHATWG URL API</a> instead. CVEs are not issued for <code>url.parse()</code> vulnerabilities.</p><h3 id="dep0170-invalid-port-when-using-urlparse" tabindex="-1">DEP0170: Invalid port when using <code>url.parse()</code> <a class="header-anchor" href="#dep0170-invalid-port-when-using-urlparse" aria-label="Permalink to “DEP0170: Invalid port when using url.parse()”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v20.0.0</td><td>Runtime deprecation.</td></tr><tr><td>v19.2.0, v18.13.0</td><td>Documentation-only deprecation.</td></tr></tbody></table></div><p>Type: Runtime</p><p><a href="/nodejs/api/url#urlparseurlstring-parsequerystring-slashesdenotehost"><code>url.parse()</code></a> accepts URLs with ports that are not numbers. This behavior might result in host name spoofing with unexpected input. These URLs will throw an error in future versions of Node.js, as the <a href="/nodejs/api/url#the-whatwg-url-api">WHATWG URL API</a> does already.</p><h3 id="dep0171-setters-for-httpincomingmessage-headers-and-trailers" tabindex="-1">DEP0171: Setters for <code>http.IncomingMessage</code> headers and trailers <a class="header-anchor" href="#dep0171-setters-for-httpincomingmessage-headers-and-trailers" aria-label="Permalink to “DEP0171: Setters for http.IncomingMessage headers and trailers”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v19.3.0, v18.13.0</td><td>Documentation-only deprecation.</td></tr></tbody></table></div><p>Type: Documentation-only</p><p>In a future version of Node.js, <a href="/nodejs/api/http#messageheaders"><code>message.headers</code></a>, <a href="/nodejs/api/http#messageheadersdistinct"><code>message.headersDistinct</code></a>, <a href="/nodejs/api/http#messagetrailers"><code>message.trailers</code></a>, and <a href="/nodejs/api/http#messagetrailersdistinct"><code>message.trailersDistinct</code></a> will be read-only.</p><h3 id="dep0172-the-asyncresource-property-of-asyncresource-bound-functions" tabindex="-1">DEP0172: The <code>asyncResource</code> property of <code>AsyncResource</code> bound functions <a class="header-anchor" href="#dep0172-the-asyncresource-property-of-asyncresource-bound-functions" aria-label="Permalink to “DEP0172: The asyncResource property of AsyncResource bound functions”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v20.0.0</td><td>Runtime-deprecation.</td></tr></tbody></table></div><p>Type: Runtime</p><p>In a future version of Node.js, the <code>asyncResource</code> property will no longer be added when a function is bound to an <code>AsyncResource</code>.</p><h3 id="dep0173-the-assertcalltracker-class" tabindex="-1">DEP0173: the <code>assert.CallTracker</code> class <a class="header-anchor" href="#dep0173-the-assertcalltracker-class" aria-label="Permalink to “DEP0173: the assert.CallTracker class”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v20.1.0</td><td>Documentation-only deprecation.</td></tr></tbody></table></div><p>Type: Documentation-only</p><p>In a future version of Node.js, <a href="/nodejs/api/assert#class-assertcalltracker"><code>assert.CallTracker</code></a>, will be removed. Consider using alternatives such as the <a href="/nodejs/api/test#mocking"><code>mock</code></a> helper function.</p><h3 id="dep0174-calling-promisify-on-a-function-that-returns-a-promise" tabindex="-1">DEP0174: calling <code>promisify</code> on a function that returns a <code>Promise</code> <a class="header-anchor" href="#dep0174-calling-promisify-on-a-function-that-returns-a-promise" aria-label="Permalink to “DEP0174: calling promisify on a function that returns a Promise”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v21.0.0</td><td>Runtime deprecation.</td></tr><tr><td>v20.8.0</td><td>Documentation-only deprecation.</td></tr></tbody></table></div><p>Type: Runtime</p><p>Calling <a href="/nodejs/api/util#utilpromisifyoriginal"><code>util.promisify</code></a> on a function that returns a</p><h3 id="dep0175-utiltousvstring" tabindex="-1">DEP0175: <code>util.toUSVString</code> <a class="header-anchor" href="#dep0175-utiltousvstring" aria-label="Permalink to “DEP0175: util.toUSVString”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v20.8.0</td><td>Documentation-only deprecation.</td></tr></tbody></table></div><p>Type: Documentation-only</p><p>The <a href="/nodejs/api/util#utiltousvstringstring"><code>util.toUSVString()</code></a> API is deprecated. Please use <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/toWellFormed" target="_blank" rel="noreferrer"><code>String.prototype.toWellFormed</code></a> instead.</p><h3 id="dep0176-fsf_ok-fsr_ok-fsw_ok-fsx_ok" tabindex="-1">DEP0176: <code>fs.F_OK</code>, <code>fs.R_OK</code>, <code>fs.W_OK</code>, <code>fs.X_OK</code> <a class="header-anchor" href="#dep0176-fsf_ok-fsr_ok-fsw_ok-fsx_ok" aria-label="Permalink to “DEP0176: fs.F_OK, fs.R_OK, fs.W_OK, fs.X_OK”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v20.8.0</td><td>Documentation-only deprecation.</td></tr></tbody></table></div><p>Type: Documentation-only</p><p><code>F_OK</code>, <code>R_OK</code>, <code>W_OK</code> and <code>X_OK</code> getters exposed directly on <code>node:fs</code> are deprecated. Get them from <code>fs.constants</code> or <code>fs.promises.constants</code> instead.</p><h3 id="dep0177-utiltypesiswebassemblycompiledmodule" tabindex="-1">DEP0177: <code>util.types.isWebAssemblyCompiledModule</code> <a class="header-anchor" href="#dep0177-utiltypesiswebassemblycompiledmodule" aria-label="Permalink to “DEP0177: util.types.isWebAssemblyCompiledModule”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v21.7.0, v20.12.0</td><td>End-of-Life.</td></tr><tr><td>v21.3.0, v20.11.0</td><td>A deprecation code has been assigned.</td></tr><tr><td>v14.0.0</td><td>Documentation-only deprecation.</td></tr></tbody></table></div><p>Type: End-of-Life</p><p>The <code>util.types.isWebAssemblyCompiledModule</code> API has been removed. Please use <code>value instanceof WebAssembly.Module</code> instead.</p><h3 id="dep0178-direntpath" tabindex="-1">DEP0178: <code>dirent.path</code> <a class="header-anchor" href="#dep0178-direntpath" aria-label="Permalink to “DEP0178: dirent.path”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v23.0.0</td><td>Runtime deprecation.</td></tr><tr><td>v21.5.0, v20.12.0, v18.20.0</td><td>Documentation-only deprecation.</td></tr></tbody></table></div><p>Type: Runtime</p><p>The <a href="/nodejs/api/fs#direntpath"><code>dirent.path</code></a> is deprecated due to its lack of consistency across release lines. Please use <a href="/nodejs/api/fs#direntparentpath"><code>dirent.parentPath</code></a> instead.</p><h3 id="dep0179-hash-constructor" tabindex="-1">DEP0179: <code>Hash</code> constructor <a class="header-anchor" href="#dep0179-hash-constructor" aria-label="Permalink to “DEP0179: Hash constructor”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v22.0.0</td><td>Runtime deprecation.</td></tr><tr><td>v21.5.0, v20.12.0</td><td>Documentation-only deprecation.</td></tr></tbody></table></div><p>Type: Runtime</p><p>Calling <code>Hash</code> class directly with <code>Hash()</code> or <code>new Hash()</code> is deprecated due to being internals, not intended for public use. Please use the <a href="/nodejs/api/crypto#cryptocreatehashalgorithm-options"><code>crypto.createHash()</code></a> method to create Hash instances.</p><h3 id="dep0180-fsstats-constructor" tabindex="-1">DEP0180: <code>fs.Stats</code> constructor <a class="header-anchor" href="#dep0180-fsstats-constructor" aria-label="Permalink to “DEP0180: fs.Stats constructor”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v22.0.0</td><td>Runtime deprecation.</td></tr><tr><td>v20.13.0</td><td>Documentation-only deprecation.</td></tr></tbody></table></div><p>Type: Runtime</p><p>Calling <code>fs.Stats</code> class directly with <code>Stats()</code> or <code>new Stats()</code> is deprecated due to being internals, not intended for public use.</p><h3 id="dep0181-hmac-constructor" tabindex="-1">DEP0181: <code>Hmac</code> constructor <a class="header-anchor" href="#dep0181-hmac-constructor" aria-label="Permalink to “DEP0181: Hmac constructor”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v22.0.0</td><td>Runtime deprecation.</td></tr><tr><td>v20.13.0</td><td>Documentation-only deprecation.</td></tr></tbody></table></div><p>Type: Runtime</p><p>Calling <code>Hmac</code> class directly with <code>Hmac()</code> or <code>new Hmac()</code> is deprecated due to being internals, not intended for public use. Please use the <a href="/nodejs/api/crypto#cryptocreatehmacalgorithm-key-options"><code>crypto.createHmac()</code></a> method to create Hmac instances.</p><h3 id="dep0182-short-gcm-authentication-tags-without-explicit-authtaglength" tabindex="-1">DEP0182: Short GCM authentication tags without explicit <code>authTagLength</code> <a class="header-anchor" href="#dep0182-short-gcm-authentication-tags-without-explicit-authtaglength" aria-label="Permalink to “DEP0182: Short GCM authentication tags without explicit authTagLength”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v23.0.0</td><td>Runtime deprecation.</td></tr><tr><td>v20.13.0</td><td>Documentation-only deprecation.</td></tr></tbody></table></div><p>Type: Runtime</p><p>Applications that intend to use authentication tags that are shorter than the default authentication tag length must set the <code>authTagLength</code> option of the <a href="/nodejs/api/crypto#cryptocreatedecipherivalgorithm-key-iv-options"><code>crypto.createDecipheriv()</code></a> function to the appropriate length.</p><p>For ciphers in GCM mode, the <a href="/nodejs/api/crypto#deciphersetauthtagbuffer-encoding"><code>decipher.setAuthTag()</code></a> function accepts authentication tags of any valid length (see <a href="/nodejs/api/deprecations#dep0090">DEP0090</a>). This behavior is deprecated to better align with recommendations per <a href="https://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-38d.pdf" target="_blank" rel="noreferrer">NIST SP 800-38D</a>.</p><h3 id="dep0183-openssl-engine-based-apis" tabindex="-1">DEP0183: OpenSSL engine-based APIs <a class="header-anchor" href="#dep0183-openssl-engine-based-apis" aria-label="Permalink to “DEP0183: OpenSSL engine-based APIs”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v22.4.0, v20.16.0</td><td>Documentation-only deprecation.</td></tr></tbody></table></div><p>Type: Documentation-only</p><p>OpenSSL 3 has deprecated support for custom engines with a recommendation to switch to its new provider model. The <code>clientCertEngine</code> option for <code>https.request()</code>, <a href="/nodejs/api/tls#tlscreatesecurecontextoptions"><code>tls.createSecureContext()</code></a>, and <a href="/nodejs/api/tls#tlscreateserveroptions-secureconnectionlistener"><code>tls.createServer()</code></a>; the <code>privateKeyEngine</code> and <code>privateKeyIdentifier</code> for <a href="/nodejs/api/tls#tlscreatesecurecontextoptions"><code>tls.createSecureContext()</code></a>; and <a href="/nodejs/api/crypto#cryptosetengineengine-flags"><code>crypto.setEngine()</code></a> all depend on this functionality from OpenSSL.</p><h3 id="dep0184-instantiating-nodezlib-classes-without-new" tabindex="-1">DEP0184: Instantiating <code>node:zlib</code> classes without <code>new</code> <a class="header-anchor" href="#dep0184-instantiating-nodezlib-classes-without-new" aria-label="Permalink to “DEP0184: Instantiating node:zlib classes without new”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v22.9.0, v20.18.0</td><td>Documentation-only deprecation.</td></tr></tbody></table></div><p>Type: Documentation-only</p><p>Instantiating classes without the <code>new</code> qualifier exported by the <code>node:zlib</code> module is deprecated. It is recommended to use the <code>new</code> qualifier instead. This applies to all Zlib classes, such as <code>Deflate</code>, <code>DeflateRaw</code>, <code>Gunzip</code>, <code>Inflate</code>, <code>InflateRaw</code>, <code>Unzip</code>, and <code>Zlib</code>.</p><h3 id="dep0185-instantiating-noderepl-classes-without-new" tabindex="-1">DEP0185: Instantiating <code>node:repl</code> classes without <code>new</code> <a class="header-anchor" href="#dep0185-instantiating-noderepl-classes-without-new" aria-label="Permalink to “DEP0185: Instantiating node:repl classes without new”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v22.9.0, v20.18.0</td><td>Documentation-only deprecation.</td></tr></tbody></table></div><p>Type: Documentation-only</p><p>Instantiating classes without the <code>new</code> qualifier exported by the <code>node:repl</code> module is deprecated. It is recommended to use the <code>new</code> qualifier instead. This applies to all REPL classes, including <code>REPLServer</code> and <code>Recoverable</code>.</p><h3 id="dep0187-passing-invalid-argument-types-to-fsexistssync" tabindex="-1">DEP0187: Passing invalid argument types to <code>fs.existsSync</code> <a class="header-anchor" href="#dep0187-passing-invalid-argument-types-to-fsexistssync" aria-label="Permalink to “DEP0187: Passing invalid argument types to fs.existsSync”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v23.4.0</td><td>Documentation-only.</td></tr></tbody></table></div><p>Type: Documentation-only</p><p>Passing non-supported argument types is deprecated and, instead of returning <code>false</code>, will throw an error in a future version.</p><h3 id="dep0188-processfeaturesipv6-and-processfeaturesuv" tabindex="-1">DEP0188: <code>process.features.ipv6</code> and <code>process.features.uv</code> <a class="header-anchor" href="#dep0188-processfeaturesipv6-and-processfeaturesuv" aria-label="Permalink to “DEP0188: process.features.ipv6 and process.features.uv”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v23.4.0</td><td>Documentation-only deprecation.</td></tr></tbody></table></div><p>Type: Documentation-only</p><p>These properties are unconditionally <code>true</code>. Any checks based on these properties are redundant.</p><h3 id="dep0189-processfeaturestls_*" tabindex="-1">DEP0189: <code>process.features.tls_*</code> <a class="header-anchor" href="#dep0189-processfeaturestls_*" aria-label="Permalink to “DEP0189: process.features.tls_*”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v23.4.0</td><td>Documentation-only deprecation.</td></tr></tbody></table></div><p>Type: Documentation-only</p><p><code>process.features.tls_alpn</code>, <code>process.features.tls_ocsp</code>, and <code>process.features.tls_sni</code> are deprecated, as their values are guaranteed to be identical to that of <code>process.features.tls</code>.</p>`,800)])}var s=e(a,[[`render`,o]]);export{i as __pageData,s as default};