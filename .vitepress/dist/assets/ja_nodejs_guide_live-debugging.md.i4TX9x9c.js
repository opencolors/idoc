import{__plugin_vue_export_helper_default as e,createElementBlock as t,createStaticVNode as n,openBlock as r}from"./chunks/plugin-vue_export-helper.Bts1mPc7.js";const i=JSON.parse(`{"title":"Node.js のライブデバッグ","description":"Node.js プロセスのライブデバッグ方法を学び、問題を特定し、解決するにはどうすればよいかを確認します。","frontmatter":{"title":"Node.js のライブデバッグ","description":"Node.js プロセスのライブデバッグ方法を学び、問題を特定し、解決するにはどうすればよいかを確認します。","head":[["meta",{"name":"og:title","content":"Node.js のライブデバッグ | Node.js - iDoc.dev"}],["meta",{"name":"og:description","content":"Node.js プロセスのライブデバッグ方法を学び、問題を特定し、解決するにはどうすればよいかを確認します。"}],["meta",{"name":"twitter:title","content":"Node.js のライブデバッグ | Node.js - iDoc.dev"}],["meta",{"name":"twitter:description","content":"Node.js プロセスのライブデバッグ方法を学び、問題を特定し、解決するにはどうすればよいかを確認します。"}],["link",{"rel":"canonical","href":"https://idoc.dev/ja/nodejs/guide/live-debugging"}],["meta",{"property":"og:url","content":"https://idoc.dev/ja/nodejs/guide/live-debugging"}]]},"headers":[],"relativePath":"ja/nodejs/guide/live-debugging.md","filePath":"ja/nodejs/guide/live-debugging.md","lastUpdated":null}`),a={name:`ja/nodejs/guide/live-debugging.md`};function o(e,i,a,o,s,c){return r(),t(`div`,null,i[0]||=[n(`<h1 id="ライブデバッグ" tabindex="-1">ライブデバッグ <a class="header-anchor" href="#ライブデバッグ" aria-label="Permalink to “ライブデバッグ”">​</a></h1><p>このドキュメントでは、Node.js プロセスのライブデバッグの方法について説明します。</p><h2 id="アプリケーションが期待どおりに動作しない" tabindex="-1">アプリケーションが期待どおりに動作しない <a class="header-anchor" href="#アプリケーションが期待どおりに動作しない" aria-label="Permalink to “アプリケーションが期待どおりに動作しない”">​</a></h2><h3 id="症状" tabindex="-1">症状 <a class="header-anchor" href="#症状" aria-label="Permalink to “症状”">​</a></h3><p>特定の入力に対して、アプリケーションが期待される出力を提供しない場合、例えば HTTP サーバーが特定のフィールドが空の JSON レスポンスを返す場合など、ユーザーはそれを観測するかもしれません。 プロセス中にさまざまな問題が発生する可能性がありますが、このユースケースでは、主にアプリケーションのロジックとその正しさに焦点を当てています。</p><h3 id="デバッグ" tabindex="-1">デバッグ <a class="header-anchor" href="#デバッグ" aria-label="Permalink to “デバッグ”">​</a></h3><p>このユースケースでは、ユーザーは、受信 HTTP リクエストなどの特定のトリガーに対して、アプリケーションが実行するコードパスを理解したいと考えています。 また、コードをステップ実行して実行を制御したり、変数がメモリに保持する値を調べたりすることも望んでいます。 この目的のために、アプリケーションを起動する際に <code>--inspect</code> フラグを使用できます。 デバッグに関するドキュメントは <a href="/ja/nodejs/guide/debugging-nodejs">こちら</a> にあります。</p>`,7)])}var s=e(a,[[`render`,o]]);export{i as __pageData,s as default};