import{__plugin_vue_export_helper_default as e,createElementBlock as t,createStaticVNode as n,openBlock as r}from"./chunks/plugin-vue_export-helper.Bts1mPc7.js";const i=JSON.parse(`{"title":"Node.js Dokumentation - Internationalisierung","description":"Dieser Abschnitt der Node.js-Dokumentation behandelt das Internationalisierungsmodul (Intl), das Zugriff auf verschiedene Internationalisierungs- und Lokalisierungsfunktionen bietet, einschließlich Sortierung, Zahlenformatierung, Datum- und Zeitformatierung und mehr.","frontmatter":{"title":"Node.js Dokumentation - Internationalisierung","description":"Dieser Abschnitt der Node.js-Dokumentation behandelt das Internationalisierungsmodul (Intl), das Zugriff auf verschiedene Internationalisierungs- und Lokalisierungsfunktionen bietet, einschließlich Sortierung, Zahlenformatierung, Datum- und Zeitformatierung und mehr.","head":[["meta",{"name":"og:title","content":"Node.js Dokumentation - Internationalisierung | Node.js - iDoc.dev"}],["meta",{"name":"og:description","content":"Dieser Abschnitt der Node.js-Dokumentation behandelt das Internationalisierungsmodul (Intl), das Zugriff auf verschiedene Internationalisierungs- und Lokalisierungsfunktionen bietet, einschließlich Sortierung, Zahlenformatierung, Datum- und Zeitformatierung und mehr."}],["meta",{"name":"twitter:title","content":"Node.js Dokumentation - Internationalisierung | Node.js - iDoc.dev"}],["meta",{"name":"twitter:description","content":"Dieser Abschnitt der Node.js-Dokumentation behandelt das Internationalisierungsmodul (Intl), das Zugriff auf verschiedene Internationalisierungs- und Lokalisierungsfunktionen bietet, einschließlich Sortierung, Zahlenformatierung, Datum- und Zeitformatierung und mehr."}],["link",{"rel":"canonical","href":"https://idoc.dev/de/nodejs/api/intl"}],["meta",{"property":"og:url","content":"https://idoc.dev/de/nodejs/api/intl"}]]},"headers":[],"relativePath":"de/nodejs/api/intl.md","filePath":"de/nodejs/api/intl.md","lastUpdated":null}`),a={name:`de/nodejs/api/intl.md`};function o(e,i,a,o,s,c){return r(),t(`div`,null,i[0]||=[n(`<h1 id="internationalization-support" tabindex="-1">Unterstützung für Internationalisierung <a class="header-anchor" href="#internationalization-support" aria-label="Permalink to “Unterstützung für Internationalisierung”">​</a></h1><p>Node.js verfügt über viele Funktionen, die das Schreiben internationalisierter Programme erleichtern. Einige davon sind:</p><ul><li><p>Gebietsschema-sensitive oder Unicode-fähige Funktionen in der <a href="https://tc39.github.io/ecma262/" target="_blank" rel="noreferrer">ECMAScript Language Specification</a>:</p><ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize" target="_blank" rel="noreferrer"><code>String.prototype.normalize()</code></a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/toLowerCase" target="_blank" rel="noreferrer"><code>String.prototype.toLowerCase()</code></a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/toUpperCase" target="_blank" rel="noreferrer"><code>String.prototype.toUpperCase()</code></a></li></ul></li><li><p>Alle Funktionen, die in der <a href="https://tc39.github.io/ecma402/" target="_blank" rel="noreferrer">ECMAScript Internationalization API Specification</a> (aka ECMA-402) beschrieben sind:</p><ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl" target="_blank" rel="noreferrer"><code>Intl</code></a> Objekt</li><li>Gebietsschema-sensitive Methoden wie <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/localeCompare" target="_blank" rel="noreferrer"><code>String.prototype.localeCompare()</code></a> und <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toLocaleString" target="_blank" rel="noreferrer"><code>Date.prototype.toLocaleString()</code></a></li></ul></li><li><p>Der <a href="/de/nodejs/api/url#the-whatwg-url-api">WHATWG URL Parser</a> unterstützt <a href="https://en.wikipedia.org/wiki/Internationalized_domain_name" target="_blank" rel="noreferrer">internationalisierte Domainnamen</a> (IDNs)</p></li><li><p><a href="/de/nodejs/api/buffer#buffertranscodesource-fromenc-toenc"><code>require(&#39;node:buffer&#39;).transcode()</code></a></p></li><li><p>Genauere <a href="/de/nodejs/api/repl#repl">REPL</a> Zeilenbearbeitung</p></li><li><p><a href="/de/nodejs/api/util#class-utiltextdecoder"><code>require(&#39;node:util&#39;).TextDecoder</code></a></p></li><li><p><a href="https://github.com/tc39/proposal-regexp-unicode-property-escapes" target="_blank" rel="noreferrer"><code>RegExp</code> Unicode Property Escapes</a></p></li></ul><p>Node.js und die zugrunde liegende V8-Engine verwenden <a href="http://site.icu-project.org/" target="_blank" rel="noreferrer">International Components for Unicode (ICU)</a>, um diese Funktionen in nativem C/C++-Code zu implementieren. Der vollständige ICU-Datensatz wird standardmäßig von Node.js bereitgestellt. Aufgrund der Größe der ICU-Datendatei werden jedoch mehrere Optionen zur Anpassung des ICU-Datensatzes entweder beim Erstellen oder Ausführen von Node.js bereitgestellt.</p><h2 id="options-for-building-nodejs" tabindex="-1">Optionen zum Erstellen von Node.js <a class="header-anchor" href="#options-for-building-nodejs" aria-label="Permalink to “Optionen zum Erstellen von Node.js”">​</a></h2><p>Um zu steuern, wie ICU in Node.js verwendet wird, stehen während der Kompilierung vier <code>configure</code>-Optionen zur Verfügung. Weitere Informationen zum Kompilieren von Node.js sind in <a href="https://github.com/nodejs/node/blob/HEAD/BUILDING.md" target="_blank" rel="noreferrer">BUILDING.md</a> dokumentiert.</p><ul><li><code>--with-intl=none</code>/<code>--without-intl</code></li><li><code>--with-intl=system-icu</code></li><li><code>--with-intl=small-icu</code></li><li><code>--with-intl=full-icu</code> (Standard)</li></ul><p>Eine Übersicht über die verfügbaren Node.js- und JavaScript-Funktionen für jede <code>configure</code>-Option:</p><table tabindex="0"><thead><tr><th>Funktion</th><th><code>none</code></th><th><code>system-icu</code></th><th><code>small-icu</code></th><th><code>full-icu</code></th></tr></thead><tbody><tr><td><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize" target="_blank" rel="noreferrer"><code>String.prototype.normalize()</code></a></td><td>keine (Funktion ist No-Op)</td><td>voll</td><td>voll</td><td>voll</td></tr><tr><td><code>String.prototype.to*Case()</code></td><td>voll</td><td>voll</td><td>voll</td><td>voll</td></tr><tr><td><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl" target="_blank" rel="noreferrer"><code>Intl</code></a></td><td>keine (Objekt existiert nicht)</td><td>teilweise/voll (abhängig vom Betriebssystem)</td><td>teilweise (nur Englisch)</td><td>voll</td></tr><tr><td><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/localeCompare" target="_blank" rel="noreferrer"><code>String.prototype.localeCompare()</code></a></td><td>teilweise (nicht lokalisiert)</td><td>voll</td><td>voll</td><td>voll</td></tr><tr><td><code>String.prototype.toLocale*Case()</code></td><td>teilweise (nicht lokalisiert)</td><td>voll</td><td>voll</td><td>voll</td></tr><tr><td><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/toLocaleString" target="_blank" rel="noreferrer"><code>Number.prototype.toLocaleString()</code></a></td><td>teilweise (nicht lokalisiert)</td><td>teilweise/voll (abhängig vom Betriebssystem)</td><td>teilweise (nur Englisch)</td><td>voll</td></tr><tr><td><code>Date.prototype.toLocale*String()</code></td><td>teilweise (nicht lokalisiert)</td><td>teilweise/voll (abhängig vom Betriebssystem)</td><td>teilweise (nur Englisch)</td><td>voll</td></tr><tr><td><a href="/de/nodejs/api/url#legacy-url-api">Legacy URL Parser</a></td><td>teilweise (keine IDN-Unterstützung)</td><td>voll</td><td>voll</td><td>voll</td></tr><tr><td><a href="/de/nodejs/api/url#the-whatwg-url-api">WHATWG URL Parser</a></td><td>teilweise (keine IDN-Unterstützung)</td><td>voll</td><td>voll</td><td>voll</td></tr><tr><td><a href="/de/nodejs/api/buffer#buffertranscodesource-fromenc-toenc"><code>require(&#39;node:buffer&#39;).transcode()</code></a></td><td>keine (Funktion existiert nicht)</td><td>voll</td><td>voll</td><td>voll</td></tr><tr><td><a href="/de/nodejs/api/repl#repl">REPL</a></td><td>teilweise (ungenaue Zeilenbearbeitung)</td><td>voll</td><td>voll</td><td>voll</td></tr><tr><td><a href="/de/nodejs/api/util#class-utiltextdecoder"><code>require(&#39;node:util&#39;).TextDecoder</code></a></td><td>teilweise (grundlegende Kodierungsunterstützung)</td><td>teilweise/voll (abhängig vom Betriebssystem)</td><td>teilweise (nur Unicode)</td><td>voll</td></tr><tr><td><a href="https://github.com/tc39/proposal-regexp-unicode-property-escapes" target="_blank" rel="noreferrer"><code>RegExp</code> Unicode Property Escapes</a></td><td>keine (ungültiger <code>RegExp</code> Fehler)</td><td>voll</td><td>voll</td><td>voll</td></tr><tr><td>Die Bezeichnung &quot;(nicht lokalisiert)&quot; bedeutet, dass die Funktion ihre Operation genauso ausführt wie die Nicht-<code>Locale</code>-Version der Funktion, falls eine existiert. Zum Beispiel ist im <code>none</code>-Modus die Operation von <code>Date.prototype.toLocaleString()</code> identisch mit der von <code>Date.prototype.toString()</code>.</td><td></td><td></td><td></td><td></td></tr></tbody></table><h3 id="disable-all-internationalization-features-none" tabindex="-1">Alle Internationalisierungsfunktionen deaktivieren (<code>none</code>) <a class="header-anchor" href="#disable-all-internationalization-features-none" aria-label="Permalink to “Alle Internationalisierungsfunktionen deaktivieren (none)”">​</a></h3><p>Wenn diese Option gewählt wird, ist ICU deaktiviert und die meisten der oben genannten Internationalisierungsfunktionen sind in der resultierenden <code>node</code>-Binärdatei <strong>nicht verfügbar</strong>.</p><h3 id="build-with-a-pre-installed-icu-system-icu" tabindex="-1">Mit einer vorinstallierten ICU bauen (<code>system-icu</code>) <a class="header-anchor" href="#build-with-a-pre-installed-icu-system-icu" aria-label="Permalink to “Mit einer vorinstallierten ICU bauen (system-icu)”">​</a></h3><p>Node.js kann gegen eine bereits auf dem System installierte ICU-Version linken. Tatsächlich wird ICU bei den meisten Linux-Distributionen bereits mitgeliefert, und diese Option würde es ermöglichen, denselben Datensatz wiederzuverwenden, der von anderen Komponenten im Betriebssystem verwendet wird.</p><p>Funktionen, die nur die ICU-Bibliothek selbst benötigen, wie z. B. <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize" target="_blank" rel="noreferrer"><code>String.prototype.normalize()</code></a> und der <a href="/de/nodejs/api/url#the-whatwg-url-api">WHATWG URL-Parser</a>, werden unter <code>system-icu</code> vollständig unterstützt. Funktionen, die zusätzlich ICU-Gebietsdaten benötigen, wie z. B. <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat" target="_blank" rel="noreferrer"><code>Intl.DateTimeFormat</code></a>, <em>können</em> vollständig oder teilweise unterstützt werden, je nachdem, wie vollständig die auf dem System installierten ICU-Daten sind.</p><h3 id="embed-a-limited-set-of-icu-data-small-icu" tabindex="-1">Eine begrenzte Menge an ICU-Daten einbetten (<code>small-icu</code>) <a class="header-anchor" href="#embed-a-limited-set-of-icu-data-small-icu" aria-label="Permalink to “Eine begrenzte Menge an ICU-Daten einbetten (small-icu)”">​</a></h3><p>Diese Option bewirkt, dass die resultierende Binärdatei statisch gegen die ICU-Bibliothek linkt und eine Teilmenge der ICU-Daten (in der Regel nur das englische Gebietsschema) in die <code>node</code>-Executable einbindet.</p><p>Funktionen, die nur die ICU-Bibliothek selbst benötigen, wie z. B. <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize" target="_blank" rel="noreferrer"><code>String.prototype.normalize()</code></a> und der <a href="/de/nodejs/api/url#the-whatwg-url-api">WHATWG URL-Parser</a>, werden unter <code>small-icu</code> vollständig unterstützt. Funktionen, die zusätzlich ICU-Gebietsdaten benötigen, wie z. B. <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat" target="_blank" rel="noreferrer"><code>Intl.DateTimeFormat</code></a>, funktionieren im Allgemeinen nur mit dem englischen Gebietsschema:</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> january</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Date</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">9e8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> english</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Intl.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">DateTimeFormat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;en&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, { month: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;long&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> });</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> spanish</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Intl.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">DateTimeFormat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;es&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, { month: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;long&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> });</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(english.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">format</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(january));</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Prints &quot;January&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(spanish.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">format</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(january));</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Gibt entweder &quot;M01&quot; oder &quot;January&quot; auf small-icu aus, abhängig vom Standardgebietsschema des Benutzers</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Sollte &quot;enero&quot; ausgeben</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>Dieser Modus bietet ein Gleichgewicht zwischen Funktionen und Binärdateigröße.</p><h4 id="providing-icu-data-at-runtime" tabindex="-1">ICU-Daten zur Laufzeit bereitstellen <a class="header-anchor" href="#providing-icu-data-at-runtime" aria-label="Permalink to “ICU-Daten zur Laufzeit bereitstellen”">​</a></h4><p>Wenn die Option <code>small-icu</code> verwendet wird, können dennoch zusätzliche Gebietsschema-Daten zur Laufzeit bereitgestellt werden, sodass die JS-Methoden für alle ICU-Gebietsschemas funktionieren. Angenommen, die Datendatei ist unter <code>/runtime/directory/with/dat/file</code> gespeichert, kann sie ICU entweder über:</p><ul><li>Die Konfigurationsoption <code>--with-icu-default-data-dir</code> zur Verfügung gestellt werden: Dies bettet nur den Standarddatenverzeichnispfad in die Binärdatei ein. Die eigentliche Datendatei wird zur Laufzeit aus diesem Verzeichnispfad geladen.</li><li>Die Umgebungsvariable <a href="/de/nodejs/api/cli#node-icu-datafile"><code>NODE_ICU_DATA</code></a>:</li><li>Den CLI-Parameter <a href="/de/nodejs/api/cli#icu-data-dirfile"><code>--icu-data-dir</code></a>:</li></ul><p>Wenn mehr als eine davon angegeben ist, hat der CLI-Parameter <code>--icu-data-dir</code> die höchste Priorität, dann die Umgebungsvariable <code>NODE_ICU_DATA</code> und dann die Konfigurationsoption <code>--with-icu-default-data-dir</code>.</p><p>ICU kann automatisch eine Vielzahl von Datenformaten finden und laden, aber die Daten müssen für die ICU-Version geeignet und die Datei korrekt benannt sein. Der gebräuchlichste Name für die Datendatei ist <code>icudtX[bl].dat</code>, wobei <code>X</code> die vorgesehene ICU-Version bezeichnet und <code>b</code> oder <code>l</code> die Endianness des Systems angibt. Node.js kann nicht geladen werden, wenn die erwartete Datendatei nicht aus dem angegebenen Verzeichnis gelesen werden kann. Der Name der Datendatei, die der aktuellen Node.js-Version entspricht, kann mit folgender Methode berechnet werden:</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`icudt\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">process</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">versions</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">icu</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">split</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;.&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">)[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">]</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">os</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">endianness</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">()[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">].</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toLowerCase</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">()</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}.dat\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Weitere unterstützte Formate und Details zu ICU-Daten im Allgemeinen finden Sie im Artikel <a href="http://userguide.icu-project.org/icudata" target="_blank" rel="noreferrer">&quot;ICU Data&quot;</a> im ICU-Benutzerhandbuch.</p><p>Das <a href="https://www.npmjs.com/package/full-icu" target="_blank" rel="noreferrer">full-icu</a> npm-Modul kann die ICU-Dateninstallation erheblich vereinfachen, indem es die ICU-Version der laufenden <code>node</code>-Executable erkennt und die entsprechende Datendatei herunterlädt. Nach der Installation des Moduls über <code>npm i full-icu</code> ist die Datendatei unter <code>./node_modules/full-icu</code> verfügbar. Dieser Pfad kann dann entweder an <code>NODE_ICU_DATA</code> oder <code>--icu-data-dir</code> übergeben werden, wie oben gezeigt, um die vollständige <code>Intl</code>-Unterstützung zu aktivieren.</p><h3 id="embed-the-entire-icu-full-icu" tabindex="-1">Die gesamte ICU einbetten (<code>full-icu</code>) <a class="header-anchor" href="#embed-the-entire-icu-full-icu" aria-label="Permalink to “Die gesamte ICU einbetten (full-icu)”">​</a></h3><p>Diese Option bewirkt, dass die resultierende Binärdatei statisch mit ICU verknüpft wird und einen vollständigen Satz von ICU-Daten enthält. Eine auf diese Weise erstellte Binärdatei hat keine weiteren externen Abhängigkeiten und unterstützt alle Gebietsschemas, kann aber recht groß sein. Dies ist das Standardverhalten, wenn kein <code>--with-intl</code> Flag übergeben wird. Die offiziellen Binärdateien werden ebenfalls in diesem Modus erstellt.</p><h2 id="detecting-internationalization-support" tabindex="-1">Erkennen der Internationalisierungsunterstützung <a class="header-anchor" href="#detecting-internationalization-support" aria-label="Permalink to “Erkennen der Internationalisierungsunterstützung”">​</a></h2><p>Um zu überprüfen, ob ICU überhaupt aktiviert ist (<code>system-icu</code>, <code>small-icu</code> oder <code>full-icu</code>), sollte es ausreichen, einfach die Existenz von <code>Intl</code> zu überprüfen:</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> hasICU</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> typeof</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Intl </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">===</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;object&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Alternativ funktioniert auch die Überprüfung auf <code>process.versions.icu</code>, eine Eigenschaft, die nur definiert ist, wenn ICU aktiviert ist:</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> hasICU</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> typeof</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> process.versions.icu </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">===</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;string&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Um die Unterstützung für ein nicht-englisches Gebietsschema zu überprüfen (d.h. <code>full-icu</code> oder <code>system-icu</code>), kann <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat" target="_blank" rel="noreferrer"><code>Intl.DateTimeFormat</code></a> ein gutes Unterscheidungsmerkmal sein:</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> hasFullICU</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  try</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> january</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Date</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">9e8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> spanish</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Intl.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">DateTimeFormat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;es&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, { month: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;long&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> });</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> spanish.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">format</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(january) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">===</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;enero&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">catch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (err) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})();</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>Für ausführlichere Tests zur <code>Intl</code>-Unterstützung können die folgenden Ressourcen hilfreich sein:</p><ul><li><a href="https://github.com/srl295/btest402" target="_blank" rel="noreferrer">btest402</a>: Wird im Allgemeinen verwendet, um zu überprüfen, ob Node.js mit <code>Intl</code>-Unterstützung korrekt erstellt wurde.</li><li><a href="https://github.com/tc39/test262/tree/HEAD/test/intl402" target="_blank" rel="noreferrer">Test262</a>: Die offizielle Konformitätstestsuite von ECMAScript enthält einen Abschnitt, der ECMA-402 gewidmet ist.</li></ul>`,38)])}var s=e(a,[[`render`,o]]);export{i as __pageData,s as default};