import{__plugin_vue_export_helper_default as e,createElementBlock as t,createStaticVNode as n,openBlock as r}from"./chunks/plugin-vue_export-helper.Bts1mPc7.js";const i=JSON.parse(`{"title":"Publication d'un package Node-API","description":"Découvrez comment publier une version Node-API d'un package aux côtés d'une version non Node-API et comment introduire une dépendance à une version Node-API d'un package.","frontmatter":{"title":"Publication d'un package Node-API","description":"Découvrez comment publier une version Node-API d'un package aux côtés d'une version non Node-API et comment introduire une dépendance à une version Node-API d'un package.","head":[["meta",{"name":"og:title","content":"Publication d'un package Node-API | Node.js - iDoc.dev"}],["meta",{"name":"og:description","content":"Découvrez comment publier une version Node-API d'un package aux côtés d'une version non Node-API et comment introduire une dépendance à une version Node-API d'un package."}],["meta",{"name":"twitter:title","content":"Publication d'un package Node-API | Node.js - iDoc.dev"}],["meta",{"name":"twitter:description","content":"Découvrez comment publier une version Node-API d'un package aux côtés d'une version non Node-API et comment introduire une dépendance à une version Node-API d'un package."}],["link",{"rel":"canonical","href":"https://idoc.dev/fr/nodejs/guide/how-to-publish-a-nodejs-package"}],["meta",{"property":"og:url","content":"https://idoc.dev/fr/nodejs/guide/how-to-publish-a-nodejs-package"}]]},"headers":[],"relativePath":"fr/nodejs/guide/how-to-publish-a-nodejs-package.md","filePath":"fr/nodejs/guide/how-to-publish-a-nodejs-package.md","lastUpdated":1749464498000}`),a={name:`fr/nodejs/guide/how-to-publish-a-nodejs-package.md`};function o(e,i,a,o,s,c){return r(),t(`div`,null,i[0]||=[n(`<h1 id="comment-publier-un-package-node-api" tabindex="-1">Comment publier un package Node-API <a class="header-anchor" href="#comment-publier-un-package-node-api" aria-label="Permalink to “Comment publier un package Node-API”">​</a></h1><h2 id="comment-publier-une-version-node-api-d-un-package-a-cote-d-une-version-non-node-api" tabindex="-1">Comment publier une version Node-API d&#39;un package à côté d&#39;une version non-Node-API <a class="header-anchor" href="#comment-publier-une-version-node-api-d-un-package-a-cote-d-une-version-non-node-api" aria-label="Permalink to “Comment publier une version Node-API d&#39;un package à côté d&#39;une version non-Node-API”">​</a></h2><p>Les étapes suivantes sont illustrées à l&#39;aide du package <code>iotivity-node</code>\xA0:</p><ul><li><p>Tout d&#39;abord, publiez la version non-Node-API\xA0:</p><ul><li>Mettez à jour la version dans <code>package.json</code>. Pour <code>iotivity-node</code>, la version devient 1.2.0-2.</li><li>Parcourez la liste de contrôle de publication (assurez-vous que les tests/démos/docs sont OK).</li><li><code>npm publish</code>.</li></ul></li><li><p>Ensuite, publiez la version Node-API\xA0:</p><ul><li>Mettez à jour la version dans <code>package.json</code>. Dans le cas de <code>iotivity-node</code>, la version devient 1.2.0-3. Pour la gestion des versions, nous vous recommandons de suivre le schéma de version préliminaire tel que décrit par <a href="https://semver.org" target="_blank" rel="noreferrer">semver.org</a>, par ex. 1.2.0-napi.</li><li>Parcourez la liste de contrôle de publication (assurez-vous que les tests/démos/docs sont OK).</li><li><code>npm publish --tag n-api</code>.</li></ul></li></ul><p>Dans cet exemple, le marquage de la version avec <code>n-api</code> a garanti que, bien que la version 1.2.0-3 soit postérieure à la version non-Node-APl publiée (1.2.0-2), elle ne sera pas installée si quelqu&#39;un choisit d&#39;installer <code>iotivity-node</code> en exécutant simplement <code>npm install iotivity-node</code>. Cela installera la version non-Node-APl par défaut. L&#39;utilisateur devra exécuter <code>npm install iotivity-node@n api</code> pour recevoir la version Node-APlI. Pour plus d&#39;informations sur l&#39;utilisation des balises avec npm, consultez «\xA0Utilisation des dist-tags\xA0».</p><h2 id="comment-introduire-une-dependance-a-une-version-node-api-d-un-package" tabindex="-1">Comment introduire une dépendance à une version Node-API d&#39;un package <a class="header-anchor" href="#comment-introduire-une-dependance-a-une-version-node-api-d-un-package" aria-label="Permalink to “Comment introduire une dépendance à une version Node-API d&#39;un package”">​</a></h2><p>Pour ajouter la version Node-API de <code>iotivity-node</code> comme dépendance, le <code>package.json</code> ressemblera à ceci\xA0:</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;dependencies&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;iotivity-node&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;n-api&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>Comme expliqué dans «\xA0Utilisation des dist-tags\xA0», contrairement aux versions régulières, les versions balisées ne peuvent pas être traitées par des plages de versions telles que <code>&quot;^2.0.0&quot;</code> à l&#39;intérieur de <code>package.json</code>. La raison en est que la balise fait référence à une seule version. Ainsi, si le responsable du package choisit de baliser une version ultérieure du package en utilisant la même balise, <code>npm update</code> recevra la version ultérieure. Cela devrait être une version acceptable autre que la dernière publiée, la dépendance <code>package.json</code> devra faire référence à la version exacte comme suit\xA0:</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;dependencies&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;iotivity-node&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;1.2.0-3&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>`,10)])}var s=e(a,[[`render`,o]]);export{i as __pageData,s as default};