import{__plugin_vue_export_helper_default as e,createElementBlock as t,createStaticVNode as n,openBlock as r}from"./chunks/plugin-vue_export-helper.Bts1mPc7.js";const i=JSON.parse(`{"title":"فهم process.nextTick() في Node.js","description":"تعلم كيفية عمل process.nextTick() في Node.js وكيف يختلف عن setImmediate() و setTimeout(). افهم حلقة الأحداث وكيفية استخدام nextTick() لتنفيذ الشيفرة بشكل غير متزامن.","frontmatter":{"title":"فهم process.nextTick() في Node.js","description":"تعلم كيفية عمل process.nextTick() في Node.js وكيف يختلف عن setImmediate() و setTimeout(). افهم حلقة الأحداث وكيفية استخدام nextTick() لتنفيذ الشيفرة بشكل غير متزامن.","head":[["meta",{"name":"og:title","content":"فهم process.nextTick() في Node.js | Node.js - iDoc.dev"}],["meta",{"name":"og:description","content":"تعلم كيفية عمل process.nextTick() في Node.js وكيف يختلف عن setImmediate() و setTimeout(). افهم حلقة الأحداث وكيفية استخدام nextTick() لتنفيذ الشيفرة بشكل غير متزامن."}],["meta",{"name":"twitter:title","content":"فهم process.nextTick() في Node.js | Node.js - iDoc.dev"}],["meta",{"name":"twitter:description","content":"تعلم كيفية عمل process.nextTick() في Node.js وكيف يختلف عن setImmediate() و setTimeout(). افهم حلقة الأحداث وكيفية استخدام nextTick() لتنفيذ الشيفرة بشكل غير متزامن."}],["link",{"rel":"canonical","href":"https://idoc.dev/ar/nodejs/guide/understanding-process-nexttick"}],["meta",{"property":"og:url","content":"https://idoc.dev/ar/nodejs/guide/understanding-process-nexttick"}]]},"headers":[],"relativePath":"ar/nodejs/guide/understanding-process-nexttick.md","filePath":"ar/nodejs/guide/understanding-process-nexttick.md","lastUpdated":1749464498000}`),a={name:`ar/nodejs/guide/understanding-process-nexttick.md`};function o(e,i,a,o,s,c){return r(),t(`div`,null,i[0]||=[n(`<h1 id="فهم-process-nexttick" tabindex="-1">فهم <code>process.nextTick()</code> <a class="header-anchor" href="#فهم-process-nexttick" aria-label="Permalink to “فهم process.nextTick()”">​</a></h1><p>عندما تحاول فهم حلقة الأحداث في Node.js، فإن جزءًا مهمًا منها هو <code>process.nextTick()</code>. في كل مرة تقوم فيها حلقة الأحداث برحلة كاملة، نسمي ذلك &quot;تكة&quot;.</p><p>عندما نمرر دالة إلى process.nextTick()، فإننا نوجه المحرك لاستدعاء هذه الدالة في نهاية العملية الحالية، قبل بدء دورة حلقة الأحداث التالية:</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">process.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nextTick</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // قم بعمل شيء ما</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>حلقة الأحداث مشغولة بمعالجة كود الدالة الحالي. عندما تنتهي هذه العملية، يقوم محرك JS بتشغيل جميع الدوال التي تم تمريرها إلى استدعاءات <code>nextTick</code> خلال تلك العملية.</p><p>إنها الطريقة التي يمكننا بها إخبار محرك JS بمعالجة دالة بشكل غير متزامن (بعد الدالة الحالية)، ولكن في أقرب وقت ممكن، وليس وضعها في قائمة الانتظار.</p><p>سيؤدي استدعاء <code>setTimeout(() =&gt; {}, 0)</code> إلى تنفيذ الدالة في نهاية التكة التالية، بعد وقت أطول بكثير من استخدام <code>nextTick()</code> الذي يعطي الأولوية للاستدعاء وينفذه قبل بداية التكة التالية مباشرةً.</p><p>استخدم <code>nextTick()</code> عندما تريد التأكد من أن الكود قد تم تنفيذه بالفعل في التكرار التالي لحلقة الأحداث.</p><h2 id="مثال-على-ترتيب-الأحداث" tabindex="-1">مثال على ترتيب الأحداث: <a class="header-anchor" href="#مثال-على-ترتيب-الأحداث" aria-label="Permalink to “مثال على ترتيب الأحداث:”">​</a></h2><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Hello =&gt; number 1&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setImmediate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Running before the timeout =&gt; number 3&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setTimeout</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;The timeout running last =&gt; number 4&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">process.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nextTick</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Running at next tick =&gt; number 2&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h2 id="مثال-على-الإخراج" tabindex="-1">مثال على الإخراج: <a class="header-anchor" href="#مثال-على-الإخراج" aria-label="Permalink to “مثال على الإخراج:”">​</a></h2><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Hello</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> number</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Running</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> at</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> next</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tick</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> number</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Running</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> before</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> the</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> timeout</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> number</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">The</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> timeout</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> running</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> last</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> number</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 4</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>قد يختلف الإخراج الدقيق من تشغيل إلى تشغيل.</p>`,13)])}var s=e(a,[[`render`,o]]);export{i as __pageData,s as default};