import{__plugin_vue_export_helper_default as e,createElementBlock as t,createStaticVNode as n,openBlock as r}from"./chunks/plugin-vue_export-helper.Bts1mPc7.js";const i=JSON.parse(`{"title":"So lesen Sie Umgebungsvariablen in Node.js","description":"Erfahren Sie, wie Sie Umgebungsvariablen in Node.js mit der Eigenschaft process.env und .env-Dateien zugreifen.","frontmatter":{"title":"So lesen Sie Umgebungsvariablen in Node.js","description":"Erfahren Sie, wie Sie Umgebungsvariablen in Node.js mit der Eigenschaft process.env und .env-Dateien zugreifen.","head":[["meta",{"name":"og:title","content":"So lesen Sie Umgebungsvariablen in Node.js | Node.js - iDoc.dev"}],["meta",{"name":"og:description","content":"Erfahren Sie, wie Sie Umgebungsvariablen in Node.js mit der Eigenschaft process.env und .env-Dateien zugreifen."}],["meta",{"name":"twitter:title","content":"So lesen Sie Umgebungsvariablen in Node.js | Node.js - iDoc.dev"}],["meta",{"name":"twitter:description","content":"Erfahren Sie, wie Sie Umgebungsvariablen in Node.js mit der Eigenschaft process.env und .env-Dateien zugreifen."}],["link",{"rel":"canonical","href":"https://idoc.dev/de/nodejs/guide/how-to-read-environment-variables-from-nodejs"}],["meta",{"property":"og:url","content":"https://idoc.dev/de/nodejs/guide/how-to-read-environment-variables-from-nodejs"}]]},"headers":[],"relativePath":"de/nodejs/guide/how-to-read-environment-variables-from-nodejs.md","filePath":"de/nodejs/guide/how-to-read-environment-variables-from-nodejs.md","lastUpdated":1749464498000}`),a={name:`de/nodejs/guide/how-to-read-environment-variables-from-nodejs.md`};function o(e,i,a,o,s,c){return r(),t(`div`,null,i[0]||=[n(`<h1 id="wie-man-umgebungsvariablen-von-node-js-liest" tabindex="-1">Wie man Umgebungsvariablen von Node.js liest <a class="header-anchor" href="#wie-man-umgebungsvariablen-von-node-js-liest" aria-label="Permalink to “Wie man Umgebungsvariablen von Node.js liest”">​</a></h1><p>Das Prozesskernmodul von Node.js stellt die <code>env</code>-Eigenschaft bereit, die alle Umgebungsvariablen enthält, die zum Zeitpunkt des Prozessstarts gesetzt wurden.</p><p>Der folgende Code führt <code>app.js</code> aus und setzt <code>USER_ID</code> und <code>USER_KEY</code>.</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">USER_ID</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">239482</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> USER_KEY</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">foobar</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> node</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> app.js</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Dadurch wird der Benutzer <code>USER_ID</code> als 239482 und der <code>USER_KEY</code> als foobar übergeben. Dies ist für Tests geeignet, aber für die Produktion konfigurieren Sie wahrscheinlich einige Bash-Skripte, um Variablen zu exportieren.</p><div class="tip custom-block"><p class="custom-block-title">HINWEIS</p><p><code>process</code> benötigt kein <code>&quot;require&quot;</code>, es ist automatisch verfügbar.</p></div><p>Hier ist ein Beispiel, das auf die Umgebungsvariablen <code>USER_ID</code> und <code>USER_KEY</code> zugreift, die wir im obigen Code gesetzt haben.</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">process.env.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">USER_ID</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &quot;239482</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">process.env.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">USER_KEY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &quot;foobar</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>Auf die gleiche Weise können Sie auf jede benutzerdefinierte Umgebungsvariable zugreifen, die Sie gesetzt haben. Node.js 20 führte experimentelle <a href="/de/nodejs/api/cli#env-file-config">Unterstützung für .env-Dateien</a> ein.</p><p>Jetzt können Sie das Flag <code>--env-file</code> verwenden, um eine Umgebungsdatei anzugeben, wenn Sie Ihre Node.js-Anwendung ausführen. Hier ist ein Beispiel für eine <code>.env</code>-Datei und wie Sie mit <code>process.env</code> auf ihre Variablen zugreifen können.</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.env</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Datei</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">PORT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">3000</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>In Ihrer js-Datei</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">process.env.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PORT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 3000</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Führen Sie die Datei <code>app.js</code> mit Umgebungsvariablen aus, die in der Datei <code>.env</code> gesetzt sind.</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">node </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">env</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">file</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.env app.js</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Dieser Befehl lädt alle Umgebungsvariablen aus der Datei <code>.env</code> und stellt sie der Anwendung unter <code>process.env</code> zur Verfügung. Außerdem können Sie mehrere <code>--env-file</code>-Argumente übergeben. Nachfolgende Dateien überschreiben bereits vorhandene Variablen, die in vorherigen Dateien definiert wurden.</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">node</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --env-file=.env</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --env-file=.development.env</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> app.js</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="tip custom-block"><p class="custom-block-title">HINWEIS</p><p>Wenn dieselbe Variable in der Umgebung und in der Datei definiert ist, hat der Wert aus der Umgebung Vorrang.</p></div>`,18)])}var s=e(a,[[`render`,o]]);export{i as __pageData,s as default};