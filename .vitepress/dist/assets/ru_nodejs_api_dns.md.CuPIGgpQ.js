import{__plugin_vue_export_helper_default as e,createElementBlock as t,createStaticVNode as n,openBlock as r}from"./chunks/plugin-vue_export-helper.Bts1mPc7.js";const i=JSON.parse(`{"title":"Документация Node.js - DNS","description":"Этот раздел документации Node.js охватывает модуль DNS (Система доменных имен), который предоставляет функциональность асинхронного разрешения сетевых имен. Включает методы для разрешения доменных имен в IP-адреса, обратные поиски и запросы записей DNS.","frontmatter":{"title":"Документация Node.js - DNS","description":"Этот раздел документации Node.js охватывает модуль DNS (Система доменных имен), который предоставляет функциональность асинхронного разрешения сетевых имен. Включает методы для разрешения доменных имен в IP-адреса, обратные поиски и запросы записей DNS.","head":[["meta",{"name":"og:title","content":"Документация Node.js - DNS | Node.js - iDoc.dev"}],["meta",{"name":"og:description","content":"Этот раздел документации Node.js охватывает модуль DNS (Система доменных имен), который предоставляет функциональность асинхронного разрешения сетевых имен. Включает методы для разрешения доменных имен в IP-адреса, обратные поиски и запросы записей DNS."}],["meta",{"name":"twitter:title","content":"Документация Node.js - DNS | Node.js - iDoc.dev"}],["meta",{"name":"twitter:description","content":"Этот раздел документации Node.js охватывает модуль DNS (Система доменных имен), который предоставляет функциональность асинхронного разрешения сетевых имен. Включает методы для разрешения доменных имен в IP-адреса, обратные поиски и запросы записей DNS."}],["link",{"rel":"canonical","href":"https://idoc.dev/ru/nodejs/api/dns"}],["meta",{"property":"og:url","content":"https://idoc.dev/ru/nodejs/api/dns"}]]},"headers":[],"relativePath":"ru/nodejs/api/dns.md","filePath":"ru/nodejs/api/dns.md","lastUpdated":null}`),a={name:`ru/nodejs/api/dns.md`};function o(e,i,a,o,s,c){return r(),t(`div`,null,i[0]||=[n(`<h1 id="dns" tabindex="-1">DNS <a class="header-anchor" href="#dns" aria-label="Permalink to “DNS”">​</a></h1><div class="tip custom-block"><p class="custom-block-title">[Стабильно: 2 - Стабильно]</p><p><a href="/ru/nodejs/api/documentation#stability-index">Стабильно: 2</a> <a href="/ru/nodejs/api/documentation#stability-index">Стабильность: 2</a> - Стабильно</p></div><p><strong>Исходный код:</strong> <a href="https://github.com/nodejs/node/blob/v23.5.0/lib/dns.js" target="_blank" rel="noreferrer">lib/dns.js</a></p><p>Модуль <code>node:dns</code> обеспечивает разрешение имен. Например, используйте его для поиска IP-адресов имен хостов.</p><p>Хотя модуль назван в честь <a href="https://en.wikipedia.org/wiki/Domain_Name_System" target="_blank" rel="noreferrer">Системы доменных имен (DNS)</a>, он не всегда использует протокол DNS для поиска. <a href="/ru/nodejs/api/dns#dnslookuphostname-options-callback"><code>dns.lookup()</code></a> использует возможности операционной системы для выполнения разрешения имен. Ему может не потребоваться выполнять какую-либо сетевую связь. Чтобы выполнить разрешение имен так же, как и другие приложения в той же системе, используйте <a href="/ru/nodejs/api/dns#dnslookuphostname-options-callback"><code>dns.lookup()</code></a>.</p><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-17" id="tab-18" checked><label data-title="ESM" for="tab-18">ESM</label><input type="radio" name="group-17" id="tab-19"><label data-title="CJS" for="tab-19">CJS</label></div><div class="blocks"><div class="language-js active line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> dns </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;node:dns&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dns.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lookup</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;example.org&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">err</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">address</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">family</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;address: %j family: IPv%s&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, address, family);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// address: &quot;2606:2800:21f:cb07:6820:80da:af6b:8b2c&quot; family: IPv6</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> dns</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;node:dns&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dns.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lookup</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;example.org&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">err</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">address</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">family</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;address: %j family: IPv%s&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, address, family);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// address: &quot;2606:2800:21f:cb07:6820:80da:af6b:8b2c&quot; family: IPv6</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div></div></div><p>Все остальные функции в модуле <code>node:dns</code> подключаются к фактическому DNS-серверу для выполнения разрешения имен. Они всегда будут использовать сеть для выполнения DNS-запросов. Эти функции не используют тот же набор файлов конфигурации, что и <a href="/ru/nodejs/api/dns#dnslookuphostname-options-callback"><code>dns.lookup()</code></a> (например, <code>/etc/hosts</code>). Используйте эти функции, чтобы всегда выполнять DNS-запросы, минуя другие средства разрешения имен.</p><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-24" id="tab-25" checked><label data-title="ESM" for="tab-25">ESM</label><input type="radio" name="group-24" id="tab-26"><label data-title="CJS" for="tab-26">CJS</label></div><div class="blocks"><div class="language-js active line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> dns </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;node:dns&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dns.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">resolve4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;archive.org&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">err</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">addresses</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (err) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">throw</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> err;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`addresses: \${</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">JSON</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">stringify</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">addresses</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">)</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  addresses.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">forEach</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">a</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    dns.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">reverse</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(a, (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">err</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">hostnames</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (err) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        throw</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> err;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`reverse for \${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">a</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}: \${</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">JSON</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">stringify</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">hostnames</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">)</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> dns</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;node:dns&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dns.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">resolve4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;archive.org&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">err</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">addresses</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (err) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">throw</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> err;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`addresses: \${</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">JSON</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">stringify</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">addresses</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">)</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  addresses.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">forEach</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">a</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    dns.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">reverse</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(a, (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">err</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">hostnames</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (err) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        throw</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> err;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`reverse for \${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">a</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}: \${</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">JSON</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">stringify</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">hostnames</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">)</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div></div></div><p>См. раздел <a href="/ru/nodejs/api/dns#implementation-considerations">Соображения по реализации</a> для получения дополнительной информации.</p><h2 id="class-dnsresolver" tabindex="-1">Класс: <code>dns.Resolver</code> <a class="header-anchor" href="#class-dnsresolver" aria-label="Permalink to “Класс: dns.Resolver”">​</a></h2><p><strong>Добавлено в версии: v8.3.0</strong></p><p>Независимый преобразователь для DNS-запросов.</p><p>Создание нового преобразователя использует настройки сервера по умолчанию. Установка серверов, используемых для преобразователя, с помощью <a href="/ru/nodejs/api/dns#dnssetserversservers"><code>resolver.setServers()</code></a>, не влияет на другие преобразователи:</p><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-43" id="tab-44" checked><label data-title="ESM" for="tab-44">ESM</label><input type="radio" name="group-43" id="tab-45"><label data-title="CJS" for="tab-45">CJS</label></div><div class="blocks"><div class="language-js active line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { Resolver } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;node:dns&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> resolver</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Resolver</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">resolver.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setServers</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;4.4.4.4&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Этот запрос будет использовать сервер 4.4.4.4, независимо от глобальных настроек.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">resolver.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">resolve4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;example.org&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">err</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">addresses</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Resolver</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;node:dns&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> resolver</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Resolver</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">resolver.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setServers</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;4.4.4.4&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Этот запрос будет использовать сервер 4.4.4.4, независимо от глобальных настроек.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">resolver.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">resolve4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;example.org&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">err</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">addresses</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div></div></div><p>Доступны следующие методы из модуля <code>node:dns</code>:</p><ul><li><a href="/ru/nodejs/api/dns#dnsgetservers"><code>resolver.getServers()</code></a></li><li><a href="/ru/nodejs/api/dns#dnsresolvehostname-rrtype-callback"><code>resolver.resolve()</code></a></li><li><a href="/ru/nodejs/api/dns#dnsresolve4hostname-options-callback"><code>resolver.resolve4()</code></a></li><li><a href="/ru/nodejs/api/dns#dnsresolve6hostname-options-callback"><code>resolver.resolve6()</code></a></li><li><a href="/ru/nodejs/api/dns#dnsresolveanyhostname-callback"><code>resolver.resolveAny()</code></a></li><li><a href="/ru/nodejs/api/dns#dnsresolvecaahostname-callback"><code>resolver.resolveCaa()</code></a></li><li><a href="/ru/nodejs/api/dns#dnsresolvecnamehostname-callback"><code>resolver.resolveCname()</code></a></li><li><a href="/ru/nodejs/api/dns#dnsresolvemxhostname-callback"><code>resolver.resolveMx()</code></a></li><li><a href="/ru/nodejs/api/dns#dnsresolvenaptrhostname-callback"><code>resolver.resolveNaptr()</code></a></li><li><a href="/ru/nodejs/api/dns#dnsresolvenshostname-callback"><code>resolver.resolveNs()</code></a></li><li><a href="/ru/nodejs/api/dns#dnsresolveptrhostname-callback"><code>resolver.resolvePtr()</code></a></li><li><a href="/ru/nodejs/api/dns#dnsresolvesoahostname-callback"><code>resolver.resolveSoa()</code></a></li><li><a href="/ru/nodejs/api/dns#dnsresolvesrvhostname-callback"><code>resolver.resolveSrv()</code></a></li><li><a href="/ru/nodejs/api/dns#dnsresolvetxthostname-callback"><code>resolver.resolveTxt()</code></a></li><li><a href="/ru/nodejs/api/dns#dnsreverseip-callback"><code>resolver.reverse()</code></a></li><li><a href="/ru/nodejs/api/dns#dnssetserversservers"><code>resolver.setServers()</code></a></li></ul><h3 id="resolveroptions" tabindex="-1"><code>Resolver([options])</code> <a class="header-anchor" href="#resolveroptions" aria-label="Permalink to “Resolver([options])”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[История]</p><table tabindex="0"><thead><tr><th>Версия</th><th>Изменения</th></tr></thead><tbody><tr><td>v16.7.0, v14.18.0</td><td>Объект <code>options</code> теперь принимает параметр <code>tries</code>.</td></tr><tr><td>v12.18.3</td><td>Конструктор теперь принимает объект <code>options</code>. Единственный поддерживаемый параметр - <code>timeout</code>.</td></tr><tr><td>v8.3.0</td><td>Добавлено в версии: v8.3.0</td></tr></tbody></table></div><p>Создать новый преобразователь.</p><ul><li><code>options</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object&gt;</a><ul><li><code>timeout</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type" target="_blank" rel="noreferrer">&lt;integer&gt;</a> Время ожидания запроса в миллисекундах или <code>-1</code> для использования времени ожидания по умолчанию.</li><li><code>tries</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type" target="_blank" rel="noreferrer">&lt;integer&gt;</a> Количество попыток, которые преобразователь будет предпринимать для связи с каждым сервером имен, прежде чем сдаться. <strong>По умолчанию:</strong> <code>4</code></li></ul></li></ul><h3 id="resolvercancel" tabindex="-1"><code>resolver.cancel()</code> <a class="header-anchor" href="#resolvercancel" aria-label="Permalink to “resolver.cancel()”">​</a></h3><p><strong>Добавлено в: v8.3.0</strong></p><p>Отменяет все ожидающие DNS-запросы, сделанные этим резолвером. Соответствующие обратные вызовы будут вызваны с ошибкой с кодом <code>ECANCELLED</code>.</p><h3 id="resolversetlocaladdressipv4-ipv6" tabindex="-1"><code>resolver.setLocalAddress([ipv4][, ipv6])</code> <a class="header-anchor" href="#resolversetlocaladdressipv4-ipv6" aria-label="Permalink to “resolver.setLocalAddress([ipv4][, ipv6])”">​</a></h3><p><strong>Добавлено в: v15.1.0, v14.17.0</strong></p><ul><li><code>ipv4</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> Строковое представление IPv4-адреса. <strong>По умолчанию:</strong> <code>&#39;0.0.0.0&#39;</code></li><li><code>ipv6</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> Строковое представление IPv6-адреса. <strong>По умолчанию:</strong> <code>&#39;::0&#39;</code></li></ul><p>Экземпляр резолвера будет отправлять свои запросы с указанного IP-адреса. Это позволяет программам указывать исходящие интерфейсы при использовании в многоадресных системах.</p><p>Если адрес v4 или v6 не указан, он устанавливается в значение по умолчанию, и операционная система автоматически выбирает локальный адрес.</p><p>Резолвер будет использовать локальный адрес v4 при выполнении запросов к DNS-серверам IPv4 и локальный адрес v6 при выполнении запросов к DNS-серверам IPv6. Тип <code>rrtype</code> запросов разрешения не влияет на используемый локальный адрес.</p><h2 id="dnsgetservers" tabindex="-1"><code>dns.getServers()</code> <a class="header-anchor" href="#dnsgetservers" aria-label="Permalink to “dns.getServers()”">​</a></h2><p><strong>Добавлено в: v0.11.3</strong></p><ul><li>Возвращает: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string[]&gt;</a></li></ul><p>Возвращает массив строк IP-адресов, отформатированных в соответствии с <a href="https://tools.ietf.org/html/rfc5952#section-6" target="_blank" rel="noreferrer">RFC 5952</a>, которые в настоящее время настроены для разрешения DNS. Строка будет включать раздел порта, если используется пользовательский порт.</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &#39;8.8.8.8&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &#39;2001:4860:4860::8888&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &#39;8.8.8.8:1053&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &#39;[2001:4860:4860::8888]:1053&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="dnslookuphostname-options-callback" tabindex="-1"><code>dns.lookup(hostname[, options], callback)</code> <a class="header-anchor" href="#dnslookuphostname-options-callback" aria-label="Permalink to “dns.lookup(hostname[, options], callback)”">​</a></h2><div class="info custom-block"><p class="custom-block-title">[История]</p><table tabindex="0"><thead><tr><th>Версия</th><th>Изменения</th></tr></thead><tbody><tr><td>v22.1.0, v20.13.0</td><td>Опция <code>verbatim</code> теперь устарела в пользу новой опции <code>order</code>.</td></tr><tr><td>v18.4.0</td><td>Для совместимости с <code>node:net</code> при передаче объекта опций опция <code>family</code> может быть строкой <code>&#39;IPv4&#39;</code> или строкой <code>&#39;IPv6&#39;</code>.</td></tr><tr><td>v18.0.0</td><td>Передача недействительного обратного вызова аргументу <code>callback</code> теперь вызывает <code>ERR_INVALID_ARG_TYPE</code> вместо <code>ERR_INVALID_CALLBACK</code>.</td></tr><tr><td>v17.0.0</td><td>Опция <code>verbatim</code> теперь по умолчанию имеет значение <code>true</code>.</td></tr><tr><td>v8.5.0</td><td>Теперь поддерживается опция <code>verbatim</code>.</td></tr><tr><td>v1.2.0</td><td>Теперь поддерживается опция <code>all</code>.</td></tr><tr><td>v0.1.90</td><td>Добавлено в: v0.1.90</td></tr></tbody></table></div><ul><li><p><code>hostname</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a></p></li><li><p><code>options</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type" target="_blank" rel="noreferrer">&lt;integer&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object&gt;</a></p><ul><li><code>family</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type" target="_blank" rel="noreferrer">&lt;integer&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> Семейство записей. Должно быть <code>4</code>, <code>6</code> или <code>0</code>. По причинам обратной совместимости <code>&#39;IPv4&#39;</code> и <code>&#39;IPv6&#39;</code> интерпретируются как <code>4</code> и <code>6</code> соответственно. Значение <code>0</code> указывает, что возвращается либо IPv4, либо IPv6 адрес. Если значение <code>0</code> используется с <code>{ all: true }</code> (см. ниже), возвращается либо один, либо оба адреса IPv4 и IPv6, в зависимости от DNS-резолвера системы. <strong>По умолчанию:</strong> <code>0</code>.</li><li><code>hints</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type" target="_blank" rel="noreferrer">&lt;number&gt;</a> Один или несколько <a href="/ru/nodejs/api/dns#supported-getaddrinfo-flags">поддерживаемых флагов <code>getaddrinfo</code></a>. Несколько флагов можно передать, выполнив побитовое <code>OR</code> их значений.</li><li><code>all</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type" target="_blank" rel="noreferrer">&lt;boolean&gt;</a> Если <code>true</code>, обратный вызов возвращает все разрешенные адреса в массиве. В противном случае возвращает один адрес. <strong>По умолчанию:</strong> <code>false</code>.</li><li><code>order</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> Когда <code>verbatim</code>, разрешенные адреса возвращаются неотсортированными. Когда <code>ipv4first</code>, разрешенные адреса сортируются путем размещения адресов IPv4 перед адресами IPv6. Когда <code>ipv6first</code>, разрешенные адреса сортируются путем размещения адресов IPv6 перед адресами IPv4. <strong>По умолчанию:</strong> <code>verbatim</code> (адреса не переупорядочиваются). Значение по умолчанию можно настроить с помощью <a href="/ru/nodejs/api/dns#dnssetdefaultresultorderorder"><code>dns.setDefaultResultOrder()</code></a> или <a href="/ru/nodejs/api/cli#dns-result-orderorder"><code>--dns-result-order</code></a>.</li><li><code>verbatim</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type" target="_blank" rel="noreferrer">&lt;boolean&gt;</a> Если <code>true</code>, обратный вызов получает адреса IPv4 и IPv6 в том порядке, в котором их вернул DNS-резолвер. Если <code>false</code>, адреса IPv4 помещаются перед адресами IPv6. Этот параметр будет объявлен устаревшим в пользу <code>order</code>. Если указаны оба параметра, <code>order</code> имеет более высокий приоритет. Новый код должен использовать только <code>order</code>. <strong>По умолчанию:</strong> <code>true</code> (адреса не переупорядочиваются). Значение по умолчанию можно настроить с помощью <a href="/ru/nodejs/api/dns#dnssetdefaultresultorderorder"><code>dns.setDefaultResultOrder()</code></a> или <a href="/ru/nodejs/api/cli#dns-result-orderorder"><code>--dns-result-order</code></a>.</li></ul></li><li><p><code>callback</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function" target="_blank" rel="noreferrer">&lt;Function&gt;</a></p><ul><li><code>err</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error" target="_blank" rel="noreferrer">&lt;Error&gt;</a></li><li><code>address</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> Строковое представление IPv4 или IPv6 адреса.</li><li><code>family</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type" target="_blank" rel="noreferrer">&lt;integer&gt;</a> <code>4</code> или <code>6</code>, обозначающее семейство <code>address</code>, или <code>0</code>, если адрес не является адресом IPv4 или IPv6. <code>0</code> является вероятным индикатором ошибки в службе разрешения имен, используемой операционной системой.</li></ul></li></ul><p>Преобразует имя хоста (например, <code>&#39;nodejs.org&#39;</code>) в первую найденную запись A (IPv4) или AAAA (IPv6). Все свойства <code>option</code> являются необязательными. Если <code>options</code> является целым числом, то оно должно быть <code>4</code> или <code>6</code> – если <code>options</code> не указано, то возвращаются либо IPv4, либо IPv6 адреса, либо и то, и другое, если они найдены.</p><p>Если опция <code>all</code> установлена в <code>true</code>, аргументы для <code>callback</code> изменяются на <code>(err, addresses)</code>, где <code>addresses</code> является массивом объектов со свойствами <code>address</code> и <code>family</code>.</p><p>В случае ошибки <code>err</code> является объектом <a href="/ru/nodejs/api/errors#class-error"><code>Error</code></a>, где <code>err.code</code> является кодом ошибки. Имейте в виду, что <code>err.code</code> будет установлен в <code>&#39;ENOTFOUND&#39;</code> не только тогда, когда имя хоста не существует, но и когда поиск завершается неудачей другими способами, например, из-за отсутствия доступных файловых дескрипторов.</p><p><code>dns.lookup()</code> не обязательно имеет какое-либо отношение к протоколу DNS. Реализация использует средство операционной системы, которое может связывать имена с адресами и наоборот. Эта реализация может иметь тонкие, но важные последствия для поведения любой программы Node.js. Пожалуйста, уделите время ознакомлению с разделом <a href="/ru/nodejs/api/dns#implementation-considerations">Соображения по реализации</a> перед использованием <code>dns.lookup()</code>.</p><p>Пример использования:</p><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-401" id="tab-402" checked><label data-title="ESM" for="tab-402">ESM</label><input type="radio" name="group-401" id="tab-403"><label data-title="CJS" for="tab-403">CJS</label></div><div class="blocks"><div class="language-js active line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> dns </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;node:dns&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> options</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  family: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  hints: dns.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ADDRCONFIG</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> dns.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">V4MAPPED</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dns.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lookup</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;example.org&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, options, (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">err</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">address</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">family</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;address: %j family: IPv%s&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, address, family));</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// address: &quot;2606:2800:21f:cb07:6820:80da:af6b:8b2c&quot; family: IPv6</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// When options.all is true, the result will be an Array.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">options.all </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dns.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lookup</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;example.org&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, options, (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">err</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">addresses</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;addresses: %j&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, addresses));</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// addresses: [{&quot;address&quot;:&quot;2606:2800:21f:cb07:6820:80da:af6b:8b2c&quot;,&quot;family&quot;:6}]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> dns</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;node:dns&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> options</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  family: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  hints: dns.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ADDRCONFIG</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> dns.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">V4MAPPED</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dns.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lookup</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;example.org&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, options, (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">err</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">address</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">family</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;address: %j family: IPv%s&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, address, family));</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// address: &quot;2606:2800:21f:cb07:6820:80da:af6b:8b2c&quot; family: IPv6</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// When options.all is true, the result will be an Array.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">options.all </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dns.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lookup</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;example.org&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, options, (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">err</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">addresses</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;addresses: %j&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, addresses));</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// addresses: [{&quot;address&quot;:&quot;2606:2800:21f:cb07:6820:80da:af6b:8b2c&quot;,&quot;family&quot;:6}]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div></div></div><p>Если этот метод вызывается как его <a href="/ru/nodejs/api/util#utilpromisifyoriginal"><code>util.promisify()</code></a>ed версия, и <code>all</code> не установлено в <code>true</code>, он возвращает <code>Promise</code> для <code>Object</code> со свойствами <code>address</code> и <code>family</code>.</p><h3 id="supported-getaddrinfo-flags" tabindex="-1">Поддерживаемые флаги getaddrinfo <a class="header-anchor" href="#supported-getaddrinfo-flags" aria-label="Permalink to “Поддерживаемые флаги getaddrinfo”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[История]</p><table tabindex="0"><thead><tr><th>Версия</th><th>Изменения</th></tr></thead><tbody><tr><td>v13.13.0, v12.17.0</td><td>Добавлена поддержка флага <code>dns.ALL</code>.</td></tr></tbody></table></div><p>Следующие флаги могут быть переданы в качестве подсказок в <a href="/ru/nodejs/api/dns#dnslookuphostname-options-callback"><code>dns.lookup()</code></a>.</p><ul><li><code>dns.ADDRCONFIG</code>: Ограничивает возвращаемые типы адресов типами не-loopback адресов, настроенных в системе. Например, IPv4-адреса возвращаются только в том случае, если текущая система имеет хотя бы один настроенный IPv4-адрес.</li><li><code>dns.V4MAPPED</code>: Если было указано семейство IPv6, но IPv6-адреса не были найдены, возвращаются IPv4-отображенные IPv6-адреса. Не поддерживается в некоторых операционных системах (например, FreeBSD 10.1).</li><li><code>dns.ALL</code>: Если указан <code>dns.V4MAPPED</code>, возвращает как разрешенные IPv6-адреса, так и IPv4-отображенные IPv6-адреса.</li></ul><h2 id="dnslookupserviceaddress-port-callback" tabindex="-1"><code>dns.lookupService(address, port, callback)</code> <a class="header-anchor" href="#dnslookupserviceaddress-port-callback" aria-label="Permalink to “dns.lookupService(address, port, callback)”">​</a></h2><div class="info custom-block"><p class="custom-block-title">[История]</p><table tabindex="0"><thead><tr><th>Версия</th><th>Изменения</th></tr></thead><tbody><tr><td>v18.0.0</td><td>Передача недействительного обратного вызова в аргумент <code>callback</code> теперь выдает ошибку <code>ERR_INVALID_ARG_TYPE</code> вместо <code>ERR_INVALID_CALLBACK</code>.</td></tr><tr><td>v0.11.14</td><td>Добавлено в версии: v0.11.14</td></tr></tbody></table></div><ul><li><code>address</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a></li><li><code>port</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type" target="_blank" rel="noreferrer">&lt;number&gt;</a></li><li><code>callback</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function" target="_blank" rel="noreferrer">&lt;Function&gt;</a><ul><li><code>err</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error" target="_blank" rel="noreferrer">&lt;Error&gt;</a></li><li><code>hostname</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> например, <code>example.com</code></li><li><code>service</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> например, <code>http</code></li></ul></li></ul><p>Разрешает заданный <code>address</code> и <code>port</code> в имя хоста и службу, используя базовую реализацию <code>getnameinfo</code> операционной системы.</p><p>Если <code>address</code> не является допустимым IP-адресом, будет выдана ошибка <code>TypeError</code>. <code>port</code> будет приведен к числовому типу. Если это недопустимый порт, будет выдана ошибка <code>TypeError</code>.</p><p>В случае ошибки <code>err</code> является объектом <a href="/ru/nodejs/api/errors#class-error"><code>Error</code></a>, где <code>err.code</code> — код ошибки.</p><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-533" id="tab-534" checked><label data-title="ESM" for="tab-534">ESM</label><input type="radio" name="group-533" id="tab-535"><label data-title="CJS" for="tab-535">CJS</label></div><div class="blocks"><div class="language-js active line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> dns </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;node:dns&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dns.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lookupService</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;127.0.0.1&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">22</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">err</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">hostname</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">service</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(hostname, service);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // Prints: localhost ssh</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> dns</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;node:dns&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dns.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lookupService</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;127.0.0.1&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">22</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">err</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">hostname</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">service</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(hostname, service);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // Prints: localhost ssh</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></div></div><p>Если этот метод вызывается как его <a href="/ru/nodejs/api/util#utilpromisifyoriginal"><code>util.promisify()</code></a>ed версия, он возвращает <code>Promise</code> для <code>Object</code> со свойствами <code>hostname</code> и <code>service</code>.</p><h2 id="dnsresolvehostname-rrtype-callback" tabindex="-1"><code>dns.resolve(hostname[, rrtype], callback)</code> <a class="header-anchor" href="#dnsresolvehostname-rrtype-callback" aria-label="Permalink to “dns.resolve(hostname[, rrtype], callback)”">​</a></h2><div class="info custom-block"><p class="custom-block-title">[История]</p><table tabindex="0"><thead><tr><th style="text-align:left;">Версия</th><th style="text-align:left;">Изменения</th></tr></thead><tbody><tr><td style="text-align:left;">v18.0.0</td><td style="text-align:left;">Передача недопустимого обратного вызова аргументу <code>callback</code> теперь выдает ошибку <code>ERR_INVALID_ARG_TYPE</code> вместо <code>ERR_INVALID_CALLBACK</code>.</td></tr><tr><td style="text-align:left;">v0.1.27</td><td style="text-align:left;">Добавлено в версии: v0.1.27</td></tr></tbody></table></div><ul><li><code>hostname</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> Имя хоста для разрешения.</li><li><code>rrtype</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> Тип ресурсной записи. <strong>По умолчанию:</strong> <code>&#39;A&#39;</code>.</li><li><code>callback</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function" target="_blank" rel="noreferrer">&lt;Function&gt;</a><ul><li><code>err</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error" target="_blank" rel="noreferrer">&lt;Error&gt;</a></li><li><code>records</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string[]&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object[]&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object&gt;</a></li></ul></li></ul><p>Использует протокол DNS для разрешения имени хоста (например, <code>&#39;nodejs.org&#39;</code>) в массив ресурсных записей. Функция <code>callback</code> имеет аргументы <code>(err, records)</code>. При успешном выполнении <code>records</code> будет массивом ресурсных записей. Тип и структура отдельных результатов зависят от <code>rrtype</code>:</p><table tabindex="0"><thead><tr><th style="text-align:left;"><code>rrtype</code></th><th style="text-align:left;"><code>records</code> содержит</th><th style="text-align:left;">Тип результата</th><th style="text-align:left;">Сокращенный метод</th></tr></thead><tbody><tr><td style="text-align:left;"><code>&#39;A&#39;</code></td><td style="text-align:left;">IPv4-адреса (по умолчанию)</td><td style="text-align:left;"><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a></td><td style="text-align:left;"><a href="/ru/nodejs/api/dns#dnsresolve4hostname-options-callback"><code>dns.resolve4()</code></a></td></tr><tr><td style="text-align:left;"><code>&#39;AAAA&#39;</code></td><td style="text-align:left;">IPv6-адреса</td><td style="text-align:left;"><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a></td><td style="text-align:left;"><a href="/ru/nodejs/api/dns#dnsresolve6hostname-options-callback"><code>dns.resolve6()</code></a></td></tr><tr><td style="text-align:left;"><code>&#39;ANY&#39;</code></td><td style="text-align:left;">любые записи</td><td style="text-align:left;"><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object&gt;</a></td><td style="text-align:left;"><a href="/ru/nodejs/api/dns#dnsresolveanyhostname-callback"><code>dns.resolveAny()</code></a></td></tr><tr><td style="text-align:left;"><code>&#39;CAA&#39;</code></td><td style="text-align:left;">записи авторизации ЦС</td><td style="text-align:left;"><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object&gt;</a></td><td style="text-align:left;"><a href="/ru/nodejs/api/dns#dnsresolvecaahostname-callback"><code>dns.resolveCaa()</code></a></td></tr><tr><td style="text-align:left;"><code>&#39;CNAME&#39;</code></td><td style="text-align:left;">записи канонического имени</td><td style="text-align:left;"><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a></td><td style="text-align:left;"><a href="/ru/nodejs/api/dns#dnsresolvecnamehostname-callback"><code>dns.resolveCname()</code></a></td></tr><tr><td style="text-align:left;"><code>&#39;MX&#39;</code></td><td style="text-align:left;">записи почтового обмена</td><td style="text-align:left;"><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object&gt;</a></td><td style="text-align:left;"><a href="/ru/nodejs/api/dns#dnsresolvemxhostname-callback"><code>dns.resolveMx()</code></a></td></tr><tr><td style="text-align:left;"><code>&#39;NAPTR&#39;</code></td><td style="text-align:left;">записи указателей полномочий имен</td><td style="text-align:left;"><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object&gt;</a></td><td style="text-align:left;"><a href="/ru/nodejs/api/dns#dnsresolvenaptrhostname-callback"><code>dns.resolveNaptr()</code></a></td></tr><tr><td style="text-align:left;"><code>&#39;NS&#39;</code></td><td style="text-align:left;">записи сервера имен</td><td style="text-align:left;"><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a></td><td style="text-align:left;"><a href="/ru/nodejs/api/dns#dnsresolvenshostname-callback"><code>dns.resolveNs()</code></a></td></tr><tr><td style="text-align:left;"><code>&#39;PTR&#39;</code></td><td style="text-align:left;">записи указателя</td><td style="text-align:left;"><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a></td><td style="text-align:left;"><a href="/ru/nodejs/api/dns#dnsresolveptrhostname-callback"><code>dns.resolvePtr()</code></a></td></tr><tr><td style="text-align:left;"><code>&#39;SOA&#39;</code></td><td style="text-align:left;">записи начала зоны полномочий</td><td style="text-align:left;"><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object&gt;</a></td><td style="text-align:left;"><a href="/ru/nodejs/api/dns#dnsresolvesoahostname-callback"><code>dns.resolveSoa()</code></a></td></tr><tr><td style="text-align:left;"><code>&#39;SRV&#39;</code></td><td style="text-align:left;">записи службы</td><td style="text-align:left;"><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object&gt;</a></td><td style="text-align:left;"><a href="/ru/nodejs/api/dns#dnsresolvesrvhostname-callback"><code>dns.resolveSrv()</code></a></td></tr><tr><td style="text-align:left;"><code>&#39;TXT&#39;</code></td><td style="text-align:left;">текстовые записи</td><td style="text-align:left;"><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string[]&gt;</a></td><td style="text-align:left;"><a href="/ru/nodejs/api/dns#dnsresolvetxthostname-callback"><code>dns.resolveTxt()</code></a></td></tr></tbody></table><p>При ошибке <code>err</code> является объектом <a href="/ru/nodejs/api/errors#class-error"><code>Error</code></a>, где <code>err.code</code> - один из <a href="/ru/nodejs/api/dns#error-codes">кодов ошибок DNS</a>.</p><h2 id="dnsresolve4hostname-options-callback" tabindex="-1"><code>dns.resolve4(hostname[, options], callback)</code> <a class="header-anchor" href="#dnsresolve4hostname-options-callback" aria-label="Permalink to “dns.resolve4(hostname[, options], callback)”">​</a></h2><div class="info custom-block"><p class="custom-block-title">[История]</p><table tabindex="0"><thead><tr><th>Версия</th><th>Изменения</th></tr></thead><tbody><tr><td>v18.0.0</td><td>Передача недействительного обратного вызова аргументу <code>callback</code> теперь вызывает ошибку <code>ERR_INVALID_ARG_TYPE</code> вместо <code>ERR_INVALID_CALLBACK</code>.</td></tr><tr><td>v7.2.0</td><td>Этот метод теперь поддерживает передачу <code>options</code>, в частности <code>options.ttl</code>.</td></tr><tr><td>v0.1.16</td><td>Добавлено в версии: v0.1.16</td></tr></tbody></table></div><ul><li><p><code>hostname</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> Имя хоста для разрешения.</p></li><li><p><code>options</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object&gt;</a></p><ul><li><code>ttl</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type" target="_blank" rel="noreferrer">&lt;boolean&gt;</a> Получает значение Time-To-Live (TTL) каждой записи. Если <code>true</code>, обратный вызов получает массив объектов <code>{ address: &#39;1.2.3.4&#39;, ttl: 60 }</code> вместо массива строк, при этом TTL выражается в секундах.</li></ul></li><li><p><code>callback</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function" target="_blank" rel="noreferrer">&lt;Function&gt;</a></p><ul><li><code>err</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error" target="_blank" rel="noreferrer">&lt;Error&gt;</a></li><li><code>addresses</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string[]&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object[]&gt;</a></li></ul></li></ul><p>Использует протокол DNS для разрешения IPv4-адресов (записи <code>A</code>) для <code>hostname</code>. Аргумент <code>addresses</code>, переданный функции <code>callback</code>, будет содержать массив IPv4-адресов (например, <code>[&#39;74.125.79.104&#39;, &#39;74.125.79.105&#39;, &#39;74.125.79.106&#39;]</code>).</p><h2 id="dnsresolve6hostname-options-callback" tabindex="-1"><code>dns.resolve6(hostname[, options], callback)</code> <a class="header-anchor" href="#dnsresolve6hostname-options-callback" aria-label="Permalink to “dns.resolve6(hostname[, options], callback)”">​</a></h2><div class="info custom-block"><p class="custom-block-title">[История]</p><table tabindex="0"><thead><tr><th>Версия</th><th>Изменения</th></tr></thead><tbody><tr><td>v18.0.0</td><td>Передача недействительного обратного вызова аргументу <code>callback</code> теперь вызывает ошибку <code>ERR_INVALID_ARG_TYPE</code> вместо <code>ERR_INVALID_CALLBACK</code>.</td></tr><tr><td>v7.2.0</td><td>Этот метод теперь поддерживает передачу <code>options</code>, в частности <code>options.ttl</code>.</td></tr><tr><td>v0.1.16</td><td>Добавлено в версии: v0.1.16</td></tr></tbody></table></div><ul><li><p><code>hostname</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> Имя хоста для разрешения.</p></li><li><p><code>options</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object&gt;</a></p><ul><li><code>ttl</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type" target="_blank" rel="noreferrer">&lt;boolean&gt;</a> Получает значение Time-To-Live (TTL) каждой записи. Если <code>true</code>, обратный вызов получает массив объектов <code>{ address: &#39;0:1:2:3:4:5:6:7&#39;, ttl: 60 }</code> вместо массива строк, при этом TTL выражается в секундах.</li></ul></li><li><p><code>callback</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function" target="_blank" rel="noreferrer">&lt;Function&gt;</a></p><ul><li><code>err</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error" target="_blank" rel="noreferrer">&lt;Error&gt;</a></li><li><code>addresses</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string[]&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object[]&gt;</a></li></ul></li></ul><p>Использует протокол DNS для разрешения IPv6-адресов (записи <code>AAAA</code>) для <code>hostname</code>. Аргумент <code>addresses</code>, переданный функции <code>callback</code>, будет содержать массив IPv6-адресов.</p><h2 id="dnsresolveanyhostname-callback" tabindex="-1"><code>dns.resolveAny(hostname, callback)</code> <a class="header-anchor" href="#dnsresolveanyhostname-callback" aria-label="Permalink to “dns.resolveAny(hostname, callback)”">​</a></h2><div class="info custom-block"><p class="custom-block-title">[История]</p><table tabindex="0"><thead><tr><th>Версия</th><th>Изменения</th></tr></thead><tbody><tr><td>v18.0.0</td><td>Передача недействительного обратного вызова в аргументе <code>callback</code> теперь вызывает ошибку <code>ERR_INVALID_ARG_TYPE</code> вместо <code>ERR_INVALID_CALLBACK</code>.</td></tr></tbody></table></div><ul><li><code>hostname</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a></li><li><code>callback</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function" target="_blank" rel="noreferrer">&lt;Function&gt;</a><ul><li><code>err</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error" target="_blank" rel="noreferrer">&lt;Error&gt;</a></li><li><code>ret</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object[]&gt;</a></li></ul></li></ul><p>Использует протокол DNS для разрешения всех записей (также известных как <code>ANY</code> или <code>*</code> запрос). Аргумент <code>ret</code>, переданный в функцию <code>callback</code>, будет массивом, содержащим различные типы записей. Каждый объект имеет свойство <code>type</code>, которое указывает тип текущей записи. И в зависимости от <code>type</code>, в объекте будут присутствовать дополнительные свойства:</p><table tabindex="0"><thead><tr><th>Тип</th><th>Свойства</th></tr></thead><tbody><tr><td><code>&#39;A&#39;</code></td><td><code>address</code> / <code>ttl</code></td></tr><tr><td><code>&#39;AAAA&#39;</code></td><td><code>address</code> / <code>ttl</code></td></tr><tr><td><code>&#39;CNAME&#39;</code></td><td><code>value</code></td></tr><tr><td><code>&#39;MX&#39;</code></td><td>См. <a href="/ru/nodejs/api/dns#dnsresolvemxhostname-callback"><code>dns.resolveMx()</code></a></td></tr><tr><td><code>&#39;NAPTR&#39;</code></td><td>См. <a href="/ru/nodejs/api/dns#dnsresolvenaptrhostname-callback"><code>dns.resolveNaptr()</code></a></td></tr><tr><td><code>&#39;NS&#39;</code></td><td><code>value</code></td></tr><tr><td><code>&#39;PTR&#39;</code></td><td><code>value</code></td></tr><tr><td><code>&#39;SOA&#39;</code></td><td>См. <a href="/ru/nodejs/api/dns#dnsresolvesoahostname-callback"><code>dns.resolveSoa()</code></a></td></tr><tr><td><code>&#39;SRV&#39;</code></td><td>См. <a href="/ru/nodejs/api/dns#dnsresolvesrvhostname-callback"><code>dns.resolveSrv()</code></a></td></tr><tr><td><code>&#39;TXT&#39;</code></td><td>Этот тип записи содержит свойство массива под названием <code>entries</code>, которое ссылается на <a href="/ru/nodejs/api/dns#dnsresolvetxthostname-callback"><code>dns.resolveTxt()</code></a>, например, <code>{ entries: [&#39;...&#39;], type: &#39;TXT&#39; }</code></td></tr><tr><td>Вот пример объекта <code>ret</code>, переданного в обратный вызов:</td><td></td></tr></tbody></table><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[ { type: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;A&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, address: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;127.0.0.1&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, ttl: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">299</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  { type: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;CNAME&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, value: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;example.com&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  { type: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;MX&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, exchange: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;alt4.aspmx.l.example.com&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, priority: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">50</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  { type: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;NS&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, value: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;ns1.example.com&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  { type: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;TXT&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, entries: [ </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;v=spf1 include:_spf.example.com ~all&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ] },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  { type: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;SOA&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    nsname: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;ns1.example.com&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    hostmaster: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;admin.example.com&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    serial: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">156696742</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    refresh: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">900</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    retry: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">900</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    expire: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1800</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    minttl: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">60</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } ]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>Операторы DNS-серверов могут предпочесть не отвечать на <code>ANY</code> запросы. Может быть лучше вызывать отдельные методы, такие как <a href="/ru/nodejs/api/dns#dnsresolve4hostname-options-callback"><code>dns.resolve4()</code></a>, <a href="/ru/nodejs/api/dns#dnsresolvemxhostname-callback"><code>dns.resolveMx()</code></a> и т. д. Для получения более подробной информации см. <a href="https://tools.ietf.org/html/rfc8482" target="_blank" rel="noreferrer">RFC 8482</a>.</p><h2 id="dnsresolvecnamehostname-callback" tabindex="-1"><code>dns.resolveCname(hostname, callback)</code> <a class="header-anchor" href="#dnsresolvecnamehostname-callback" aria-label="Permalink to “dns.resolveCname(hostname, callback)”">​</a></h2><div class="info custom-block"><p class="custom-block-title">[История]</p><table tabindex="0"><thead><tr><th>Версия</th><th>Изменения</th></tr></thead><tbody><tr><td>v18.0.0</td><td>Передача недействительного обратного вызова в аргумент <code>callback</code> теперь вызывает <code>ERR_INVALID_ARG_TYPE</code> вместо <code>ERR_INVALID_CALLBACK</code>.</td></tr><tr><td>v0.3.2</td><td>Добавлено в: v0.3.2</td></tr></tbody></table></div><ul><li><code>hostname</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a></li><li><code>callback</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function" target="_blank" rel="noreferrer">&lt;Function&gt;</a><ul><li><code>err</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error" target="_blank" rel="noreferrer">&lt;Error&gt;</a></li><li><code>addresses</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string[]&gt;</a></li></ul></li></ul><p>Использует протокол DNS для разрешения <code>CNAME</code> записей для <code>hostname</code>. Аргумент <code>addresses</code>, переданный в функцию <code>callback</code>, будет содержать массив записей канонических имен, доступных для <code>hostname</code> (например, <code>[&#39;bar.example.com&#39;]</code>).</p><h2 id="dnsresolvecaahostname-callback" tabindex="-1"><code>dns.resolveCaa(hostname, callback)</code> <a class="header-anchor" href="#dnsresolvecaahostname-callback" aria-label="Permalink to “dns.resolveCaa(hostname, callback)”">​</a></h2><div class="info custom-block"><p class="custom-block-title">[История]</p><table tabindex="0"><thead><tr><th>Версия</th><th>Изменения</th></tr></thead><tbody><tr><td>v18.0.0</td><td>Передача недействительного обратного вызова в аргумент <code>callback</code> теперь вызывает <code>ERR_INVALID_ARG_TYPE</code> вместо <code>ERR_INVALID_CALLBACK</code>.</td></tr><tr><td>v15.0.0, v14.17.0</td><td>Добавлено в: v15.0.0, v14.17.0</td></tr></tbody></table></div><ul><li><code>hostname</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a></li><li><code>callback</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function" target="_blank" rel="noreferrer">&lt;Function&gt;</a><ul><li><code>err</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error" target="_blank" rel="noreferrer">&lt;Error&gt;</a></li><li><code>records</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object[]&gt;</a></li></ul></li></ul><p>Использует протокол DNS для разрешения <code>CAA</code> записей для <code>hostname</code>. Аргумент <code>addresses</code>, переданный в функцию <code>callback</code>, будет содержать массив записей авторизации центра сертификации, доступных для <code>hostname</code> (например, <code>[{critical: 0, iodef: &#39;mailto:pki@example.com&#39;}, {critical: 128, issue: &#39;pki.example.com&#39;}]</code>).</p><h2 id="dnsresolvemxhostname-callback" tabindex="-1"><code>dns.resolveMx(hostname, callback)</code> <a class="header-anchor" href="#dnsresolvemxhostname-callback" aria-label="Permalink to “dns.resolveMx(hostname, callback)”">​</a></h2><div class="info custom-block"><p class="custom-block-title">[История]</p><table tabindex="0"><thead><tr><th>Версия</th><th>Изменения</th></tr></thead><tbody><tr><td>v18.0.0</td><td>Передача недействительной функции обратного вызова в аргумент <code>callback</code> теперь вызывает <code>ERR_INVALID_ARG_TYPE</code> вместо <code>ERR_INVALID_CALLBACK</code>.</td></tr><tr><td>v0.1.27</td><td>Добавлено в: v0.1.27</td></tr></tbody></table></div><ul><li><code>hostname</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a></li><li><code>callback</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function" target="_blank" rel="noreferrer">&lt;Function&gt;</a><ul><li><code>err</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error" target="_blank" rel="noreferrer">&lt;Error&gt;</a></li><li><code>addresses</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object[]&gt;</a></li></ul></li></ul><p>Использует протокол DNS для разрешения записей почтового обмена (<code>MX</code> records) для <code>hostname</code>. Аргумент <code>addresses</code>, переданный функции <code>callback</code>, будет содержать массив объектов, содержащих свойства <code>priority</code> и <code>exchange</code> (например, <code>[{priority: 10, exchange: &#39;mx.example.com&#39;}, ...]</code> ).</p><h2 id="dnsresolvenaptrhostname-callback" tabindex="-1"><code>dns.resolveNaptr(hostname, callback)</code> <a class="header-anchor" href="#dnsresolvenaptrhostname-callback" aria-label="Permalink to “dns.resolveNaptr(hostname, callback)”">​</a></h2><div class="info custom-block"><p class="custom-block-title">[История]</p><table tabindex="0"><thead><tr><th>Версия</th><th>Изменения</th></tr></thead><tbody><tr><td>v18.0.0</td><td>Передача недействительной функции обратного вызова в аргумент <code>callback</code> теперь вызывает <code>ERR_INVALID_ARG_TYPE</code> вместо <code>ERR_INVALID_CALLBACK</code>.</td></tr><tr><td>v0.9.12</td><td>Добавлено в: v0.9.12</td></tr></tbody></table></div><ul><li><code>hostname</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a></li><li><code>callback</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function" target="_blank" rel="noreferrer">&lt;Function&gt;</a><ul><li><code>err</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error" target="_blank" rel="noreferrer">&lt;Error&gt;</a></li><li><code>addresses</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object[]&gt;</a></li></ul></li></ul><p>Использует протокол DNS для разрешения записей на основе регулярных выражений (<code>NAPTR</code> records) для <code>hostname</code>. Аргумент <code>addresses</code>, переданный функции <code>callback</code>, будет содержать массив объектов со следующими свойствами:</p><ul><li><code>flags</code></li><li><code>service</code></li><li><code>regexp</code></li><li><code>replacement</code></li><li><code>order</code></li><li><code>preference</code></li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  flags</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;s&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  service</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;SIP+D2U&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  regexp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  replacement</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;_sip._udp.example.com&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  order</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">30</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  preference</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="dnsresolvenshostname-callback" tabindex="-1"><code>dns.resolveNs(hostname, callback)</code> <a class="header-anchor" href="#dnsresolvenshostname-callback" aria-label="Permalink to “dns.resolveNs(hostname, callback)”">​</a></h2><div class="info custom-block"><p class="custom-block-title">[История]</p><table tabindex="0"><thead><tr><th>Версия</th><th>Изменения</th></tr></thead><tbody><tr><td>v18.0.0</td><td>Передача недействительного обратного вызова в аргументе <code>callback</code> теперь вызывает <code>ERR_INVALID_ARG_TYPE</code> вместо <code>ERR_INVALID_CALLBACK</code>.</td></tr><tr><td>v0.1.90</td><td>Добавлено в версии: v0.1.90</td></tr></tbody></table></div><ul><li><code>hostname</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a></li><li><code>callback</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function" target="_blank" rel="noreferrer">&lt;Function&gt;</a><ul><li><code>err</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error" target="_blank" rel="noreferrer">&lt;Error&gt;</a></li><li><code>addresses</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string[]&gt;</a></li></ul></li></ul><p>Использует протокол DNS для разрешения записей сервера имен (<code>NS</code> записей) для <code>hostname</code>. Аргумент <code>addresses</code>, переданный в функцию <code>callback</code>, будет содержать массив записей сервера имен, доступных для <code>hostname</code> (например, <code>[&#39;ns1.example.com&#39;, &#39;ns2.example.com&#39;]</code>).</p><h2 id="dnsresolveptrhostname-callback" tabindex="-1"><code>dns.resolvePtr(hostname, callback)</code> <a class="header-anchor" href="#dnsresolveptrhostname-callback" aria-label="Permalink to “dns.resolvePtr(hostname, callback)”">​</a></h2><div class="info custom-block"><p class="custom-block-title">[История]</p><table tabindex="0"><thead><tr><th>Версия</th><th>Изменения</th></tr></thead><tbody><tr><td>v18.0.0</td><td>Передача недействительного обратного вызова в аргументе <code>callback</code> теперь вызывает <code>ERR_INVALID_ARG_TYPE</code> вместо <code>ERR_INVALID_CALLBACK</code>.</td></tr><tr><td>v6.0.0</td><td>Добавлено в версии: v6.0.0</td></tr></tbody></table></div><ul><li><code>hostname</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a></li><li><code>callback</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function" target="_blank" rel="noreferrer">&lt;Function&gt;</a><ul><li><code>err</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error" target="_blank" rel="noreferrer">&lt;Error&gt;</a></li><li><code>addresses</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string[]&gt;</a></li></ul></li></ul><p>Использует протокол DNS для разрешения записей указателя (<code>PTR</code> записей) для <code>hostname</code>. Аргумент <code>addresses</code>, переданный в функцию <code>callback</code>, будет массивом строк, содержащих записи ответа.</p><h2 id="dnsresolvesoahostname-callback" tabindex="-1"><code>dns.resolveSoa(hostname, callback)</code> <a class="header-anchor" href="#dnsresolvesoahostname-callback" aria-label="Permalink to “dns.resolveSoa(hostname, callback)”">​</a></h2><div class="info custom-block"><p class="custom-block-title">[История]</p><table tabindex="0"><thead><tr><th>Версия</th><th>Изменения</th></tr></thead><tbody><tr><td>v18.0.0</td><td>Передача недействительного обратного вызова в аргументе <code>callback</code> теперь вызывает <code>ERR_INVALID_ARG_TYPE</code> вместо <code>ERR_INVALID_CALLBACK</code>.</td></tr><tr><td>v0.11.10</td><td>Добавлено в версии: v0.11.10</td></tr></tbody></table></div><ul><li><code>hostname</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a></li><li><code>callback</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function" target="_blank" rel="noreferrer">&lt;Function&gt;</a><ul><li><code>err</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error" target="_blank" rel="noreferrer">&lt;Error&gt;</a></li><li><code>address</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object&gt;</a></li></ul></li></ul><p>Использует протокол DNS для разрешения записи начала зоны (<code>SOA</code> записи) для <code>hostname</code>. Аргумент <code>address</code>, переданный в функцию <code>callback</code>, будет объектом со следующими свойствами:</p><ul><li><code>nsname</code></li><li><code>hostmaster</code></li><li><code>serial</code></li><li><code>refresh</code></li><li><code>retry</code></li><li><code>expire</code></li><li><code>minttl</code></li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  nsname</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;ns.example.com&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  hostmaster</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;root.example.com&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  serial</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2013101809</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  refresh</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  retry</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2400</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  expire</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">604800</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  minttl</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3600</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h2 id="dnsresolvesrvhostname-callback" tabindex="-1"><code>dns.resolveSrv(hostname, callback)</code> <a class="header-anchor" href="#dnsresolvesrvhostname-callback" aria-label="Permalink to “dns.resolveSrv(hostname, callback)”">​</a></h2><div class="info custom-block"><p class="custom-block-title">[История]</p><table tabindex="0"><thead><tr><th>Версия</th><th>Изменения</th></tr></thead><tbody><tr><td>v18.0.0</td><td>Передача недопустимой функции обратного вызова в аргумент <code>callback</code> теперь выдает ошибку <code>ERR_INVALID_ARG_TYPE</code> вместо <code>ERR_INVALID_CALLBACK</code>.</td></tr><tr><td>v0.1.27</td><td>Добавлено в: v0.1.27</td></tr></tbody></table></div><ul><li><code>hostname</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a></li><li><code>callback</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function" target="_blank" rel="noreferrer">&lt;Function&gt;</a><ul><li><code>err</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error" target="_blank" rel="noreferrer">&lt;Error&gt;</a></li><li><code>addresses</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object[]&gt;</a></li></ul></li></ul><p>Использует протокол DNS для разрешения записей служб (<code>SRV</code> records) для <code>hostname</code>. Аргумент <code>addresses</code>, передаваемый функции <code>callback</code>, будет массивом объектов со следующими свойствами:</p><ul><li><code>priority</code></li><li><code>weight</code></li><li><code>port</code></li><li><code>name</code></li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  priority</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  weight</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  port</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">21223</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;service.example.com&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="dnsresolvetxthostname-callback" tabindex="-1"><code>dns.resolveTxt(hostname, callback)</code> <a class="header-anchor" href="#dnsresolvetxthostname-callback" aria-label="Permalink to “dns.resolveTxt(hostname, callback)”">​</a></h2><div class="info custom-block"><p class="custom-block-title">[История]</p><table tabindex="0"><thead><tr><th>Версия</th><th>Изменения</th></tr></thead><tbody><tr><td>v18.0.0</td><td>Передача недопустимой функции обратного вызова в аргумент <code>callback</code> теперь выдает ошибку <code>ERR_INVALID_ARG_TYPE</code> вместо <code>ERR_INVALID_CALLBACK</code>.</td></tr><tr><td>v0.1.27</td><td>Добавлено в: v0.1.27</td></tr></tbody></table></div><ul><li><code>hostname</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a></li><li><code>callback</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function" target="_blank" rel="noreferrer">&lt;Function&gt;</a><ul><li><code>err</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error" target="_blank" rel="noreferrer">&lt;Error&gt;</a></li><li><code>records</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string[][]&gt;</a></li></ul></li></ul><p>Использует протокол DNS для разрешения текстовых запросов (<code>TXT</code> records) для <code>hostname</code>. Аргумент <code>records</code>, передаваемый функции <code>callback</code>, представляет собой двумерный массив текстовых записей, доступных для <code>hostname</code> (например, <code>[ [&#39;v=spf1 ip4:0.0.0.0 &#39;, &#39;~all&#39; ] ]</code>). Каждый подмассив содержит TXT-фрагменты одной записи. В зависимости от варианта использования, их можно либо объединить вместе, либо рассматривать отдельно.</p><h2 id="dnsreverseip-callback" tabindex="-1"><code>dns.reverse(ip, callback)</code> <a class="header-anchor" href="#dnsreverseip-callback" aria-label="Permalink to “dns.reverse(ip, callback)”">​</a></h2><p><strong>Added in: v0.1.16</strong></p><ul><li><code>ip</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a></li><li><code>callback</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function" target="_blank" rel="noreferrer">&lt;Function&gt;</a><ul><li><code>err</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error" target="_blank" rel="noreferrer">&lt;Error&gt;</a></li><li><code>hostnames</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string[]&gt;</a></li></ul></li></ul><p>Выполняет обратный DNS-запрос, который преобразует адрес IPv4 или IPv6 в массив имен хостов.</p><p>В случае ошибки <code>err</code> является объектом <a href="/ru/nodejs/api/errors#class-error"><code>Error</code></a>, где <code>err.code</code> является одним из <a href="/ru/nodejs/api/dns#error-codes">кодов ошибок DNS</a>.</p><h2 id="dnssetdefaultresultorderorder" tabindex="-1"><code>dns.setDefaultResultOrder(order)</code> <a class="header-anchor" href="#dnssetdefaultresultorderorder" aria-label="Permalink to “dns.setDefaultResultOrder(order)”">​</a></h2><div class="info custom-block"><p class="custom-block-title">[История]</p><table tabindex="0"><thead><tr><th>Версия</th><th>Изменения</th></tr></thead><tbody><tr><td>v22.1.0, v20.13.0</td><td>Теперь поддерживается значение <code>ipv6first</code>.</td></tr><tr><td>v17.0.0</td><td>Изменено значение по умолчанию на <code>verbatim</code>.</td></tr><tr><td>v16.4.0, v14.18.0</td><td>Добавлено в: v16.4.0, v14.18.0</td></tr></tbody></table></div><ul><li><code>order</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> должно быть <code>&#39;ipv4first&#39;</code>, <code>&#39;ipv6first&#39;</code> или <code>&#39;verbatim&#39;</code>.</li></ul><p>Устанавливает значение по умолчанию для <code>order</code> в <a href="/ru/nodejs/api/dns#dnslookuphostname-options-callback"><code>dns.lookup()</code></a> и <a href="/ru/nodejs/api/dns#dnspromiseslookuphostname-options"><code>dnsPromises.lookup()</code></a>. Значение может быть:</p><ul><li><code>ipv4first</code>: устанавливает значение <code>order</code> по умолчанию равным <code>ipv4first</code>.</li><li><code>ipv6first</code>: устанавливает значение <code>order</code> по умолчанию равным <code>ipv6first</code>.</li><li><code>verbatim</code>: устанавливает значение <code>order</code> по умолчанию равным <code>verbatim</code>.</li></ul><p>Значение по умолчанию — <code>verbatim</code>, и <a href="/ru/nodejs/api/dns#dnssetdefaultresultorderorder"><code>dns.setDefaultResultOrder()</code></a> имеет более высокий приоритет, чем <a href="/ru/nodejs/api/cli#dns-result-orderorder"><code>--dns-result-order</code></a>. При использовании <a href="/ru/nodejs/api/worker_threads">рабочих потоков</a>, <a href="/ru/nodejs/api/dns#dnssetdefaultresultorderorder"><code>dns.setDefaultResultOrder()</code></a> из основного потока не повлияет на порядок DNS по умолчанию в рабочих потоках.</p><h2 id="dnsgetdefaultresultorder" tabindex="-1"><code>dns.getDefaultResultOrder()</code> <a class="header-anchor" href="#dnsgetdefaultresultorder" aria-label="Permalink to “dns.getDefaultResultOrder()”">​</a></h2><div class="info custom-block"><p class="custom-block-title">[История]</p><table tabindex="0"><thead><tr><th>Версия</th><th>Изменения</th></tr></thead><tbody><tr><td>v22.1.0, v20.13.0</td><td>Теперь поддерживается значение <code>ipv6first</code>.</td></tr><tr><td>v20.1.0, v18.17.0</td><td>Добавлено в: v20.1.0, v18.17.0</td></tr></tbody></table></div><p>Получает значение по умолчанию для <code>order</code> в <a href="/ru/nodejs/api/dns#dnslookuphostname-options-callback"><code>dns.lookup()</code></a> и <a href="/ru/nodejs/api/dns#dnspromiseslookuphostname-options"><code>dnsPromises.lookup()</code></a>. Значение может быть:</p><ul><li><code>ipv4first</code>: для <code>order</code>, принимающего по умолчанию значение <code>ipv4first</code>.</li><li><code>ipv6first</code>: для <code>order</code>, принимающего по умолчанию значение <code>ipv6first</code>.</li><li><code>verbatim</code>: для <code>order</code>, принимающего по умолчанию значение <code>verbatim</code>.</li></ul><h2 id="dnssetserversservers" tabindex="-1"><code>dns.setServers(servers)</code> <a class="header-anchor" href="#dnssetserversservers" aria-label="Permalink to “dns.setServers(servers)”">​</a></h2><p><strong>Добавлено в версии: v0.11.3</strong></p><ul><li><code>servers</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string[]&gt;</a> массив адресов, отформатированных в соответствии с <a href="https://tools.ietf.org/html/rfc5952#section-6" target="_blank" rel="noreferrer">RFC 5952</a></li></ul><p>Устанавливает IP-адрес и порт серверов, которые будут использоваться при выполнении разрешения DNS. Аргумент <code>servers</code> является массивом адресов, отформатированных в соответствии с <a href="https://tools.ietf.org/html/rfc5952#section-6" target="_blank" rel="noreferrer">RFC 5952</a>. Если порт является портом DNS по умолчанию IANA (53), его можно опустить.</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dns.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setServers</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &#39;8.8.8.8&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &#39;[2001:4860:4860::8888]&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &#39;8.8.8.8:1053&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &#39;[2001:4860:4860::8888]:1053&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>Если предоставлен недопустимый адрес, будет выдана ошибка.</p><p>Метод <code>dns.setServers()</code> нельзя вызывать во время выполнения запроса DNS.</p><p>Метод <a href="/ru/nodejs/api/dns#dnssetserversservers"><code>dns.setServers()</code></a> влияет только на <a href="/ru/nodejs/api/dns#dnsresolvehostname-rrtype-callback"><code>dns.resolve()</code></a>, <code>dns.resolve*()</code> и <a href="/ru/nodejs/api/dns#dnsreverseip-callback"><code>dns.reverse()</code></a> (и <em>не</em> на <a href="/ru/nodejs/api/dns#dnslookuphostname-options-callback"><code>dns.lookup()</code></a>).</p><p>Этот метод работает так же, как <a href="https://man7.org/linux/man-pages/man5/resolv.conf.5" target="_blank" rel="noreferrer">resolve.conf</a>. То есть, если попытка разрешения с первым предоставленным сервером приводит к ошибке <code>NOTFOUND</code>, метод <code>resolve()</code> <em>не</em> будет пытаться выполнить разрешение со следующими предоставленными серверами. Резервные DNS-серверы будут использоваться только в том случае, если у предыдущих серверов истечет время ожидания или возникнет какая-либо другая ошибка.</p><h2 id="dns-promises-api" tabindex="-1">DNS promises API <a class="header-anchor" href="#dns-promises-api" aria-label="Permalink to “DNS promises API”">​</a></h2><div class="info custom-block"><p class="custom-block-title">[История]</p><table tabindex="0"><thead><tr><th>Версия</th><th>Изменения</th></tr></thead><tbody><tr><td>v15.0.0</td><td>Предоставлено как <code>require(&#39;dns/promises&#39;)</code>.</td></tr><tr><td>v11.14.0, v10.17.0</td><td>Этот API больше не является экспериментальным.</td></tr><tr><td>v10.6.0</td><td>Добавлено в версии: v10.6.0</td></tr></tbody></table></div><p>API <code>dns.promises</code> предоставляет альтернативный набор асинхронных методов DNS, которые возвращают объекты <code>Promise</code> вместо использования обратных вызовов. Доступ к API осуществляется через <code>require(&#39;node:dns&#39;).promises</code> или <code>require(&#39;node:dns/promises&#39;)</code>.</p><h3 id="class-dnspromisesresolver" tabindex="-1">Класс: <code>dnsPromises.Resolver</code> <a class="header-anchor" href="#class-dnspromisesresolver" aria-label="Permalink to “Класс: dnsPromises.Resolver”">​</a></h3><p><strong>Добавлено в версии: v10.6.0</strong></p><p>Независимый резолвер для DNS-запросов.</p><p>Создание нового резолвера использует настройки сервера по умолчанию. Установка серверов, используемых для резолвера, с помощью <a href="/ru/nodejs/api/dns#dnspromisessetserversservers"><code>resolver.setServers()</code></a> не влияет на другие резолверы:</p><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-2025" id="tab-2026" checked><label data-title="ESM" for="tab-2026">ESM</label><input type="radio" name="group-2025" id="tab-2027"><label data-title="CJS" for="tab-2027">CJS</label></div><div class="blocks"><div class="language-js active line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { Resolver } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;node:dns/promises&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> resolver</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Resolver</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">resolver.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setServers</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;4.4.4.4&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Этот запрос будет использовать сервер 4.4.4.4, независимо от глобальных настроек.</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> addresses</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> resolver.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">resolve4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;example.org&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Resolver</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;node:dns&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).promises;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> resolver</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Resolver</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">resolver.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setServers</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;4.4.4.4&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Этот запрос будет использовать сервер 4.4.4.4, независимо от глобальных настроек.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">resolver.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">resolve4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;example.org&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">then</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">addresses</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// В качестве альтернативы тот же код можно записать в стиле async-await.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> addresses</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> resolver.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">resolve4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;example.org&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})();</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div></div></div><p>Доступны следующие методы из API <code>dnsPromises</code>:</p><ul><li><a href="/ru/nodejs/api/dns#dnspromisesgetservers"><code>resolver.getServers()</code></a></li><li><a href="/ru/nodejs/api/dns#dnspromisesresolvehostname-rrtype"><code>resolver.resolve()</code></a></li><li><a href="/ru/nodejs/api/dns#dnspromisesresolve4hostname-options"><code>resolver.resolve4()</code></a></li><li><a href="/ru/nodejs/api/dns#dnspromisesresolve6hostname-options"><code>resolver.resolve6()</code></a></li><li><a href="/ru/nodejs/api/dns#dnspromisesresolveanyhostname"><code>resolver.resolveAny()</code></a></li><li><a href="/ru/nodejs/api/dns#dnspromisesresolvecaahostname"><code>resolver.resolveCaa()</code></a></li><li><a href="/ru/nodejs/api/dns#dnspromisesresolvecnamehostname"><code>resolver.resolveCname()</code></a></li><li><a href="/ru/nodejs/api/dns#dnspromisesresolvemxhostname"><code>resolver.resolveMx()</code></a></li><li><a href="/ru/nodejs/api/dns#dnspromisesresolvenaptrhostname"><code>resolver.resolveNaptr()</code></a></li><li><a href="/ru/nodejs/api/dns#dnspromisesresolvenshostname"><code>resolver.resolveNs()</code></a></li><li><a href="/ru/nodejs/api/dns#dnspromisesresolveptrhostname"><code>resolver.resolvePtr()</code></a></li><li><a href="/ru/nodejs/api/dns#dnspromisesresolvesoahostname"><code>resolver.resolveSoa()</code></a></li><li><a href="/ru/nodejs/api/dns#dnspromisesresolvesrvhostname"><code>resolver.resolveSrv()</code></a></li><li><a href="/ru/nodejs/api/dns#dnspromisesresolvetxthostname"><code>resolver.resolveTxt()</code></a></li><li><a href="/ru/nodejs/api/dns#dnspromisesreverseip"><code>resolver.reverse()</code></a></li><li><a href="/ru/nodejs/api/dns#dnspromisessetserversservers"><code>resolver.setServers()</code></a></li></ul><h3 id="resolvercancel_1" tabindex="-1"><code>resolver.cancel()</code> <a class="header-anchor" href="#resolvercancel_1" aria-label="Permalink to “resolver.cancel()”">​</a></h3><p><strong>Добавлено в: v15.3.0, v14.17.0</strong></p><p>Отменяет все незавершенные DNS-запросы, сделанные этим резолвером. Соответствующие промисы будут отклонены с ошибкой с кодом <code>ECANCELLED</code>.</p><h3 id="dnspromisesgetservers" tabindex="-1"><code>dnsPromises.getServers()</code> <a class="header-anchor" href="#dnspromisesgetservers" aria-label="Permalink to “dnsPromises.getServers()”">​</a></h3><p><strong>Добавлено в: v10.6.0</strong></p><ul><li>Возвращает: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string[]&gt;</a></li></ul><p>Возвращает массив строк IP-адресов, отформатированных в соответствии с <a href="https://tools.ietf.org/html/rfc5952#section-6" target="_blank" rel="noreferrer">RFC 5952</a>, которые в настоящее время настроены для разрешения DNS. Строка будет включать раздел порта, если используется пользовательский порт.</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &#39;8.8.8.8&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &#39;2001:4860:4860::8888&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &#39;8.8.8.8:1053&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &#39;[2001:4860:4860::8888]:1053&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="dnspromiseslookuphostname-options" tabindex="-1"><code>dnsPromises.lookup(hostname[, options])</code> <a class="header-anchor" href="#dnspromiseslookuphostname-options" aria-label="Permalink to “dnsPromises.lookup(hostname[, options])”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[История]</p><table tabindex="0"><thead><tr><th>Версия</th><th>Изменения</th></tr></thead><tbody><tr><td>v22.1.0, v20.13.0</td><td>Параметр <code>verbatim</code> теперь устарел в пользу нового параметра <code>order</code>.</td></tr><tr><td>v10.6.0</td><td>Добавлено в: v10.6.0</td></tr></tbody></table></div><ul><li><code>hostname</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a></li><li><code>options</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type" target="_blank" rel="noreferrer">&lt;integer&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object&gt;</a><ul><li><code>family</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type" target="_blank" rel="noreferrer">&lt;integer&gt;</a> Семейство записей. Должно быть <code>4</code>, <code>6</code> или <code>0</code>. Значение <code>0</code> указывает, что возвращается либо IPv4, либо IPv6 адрес. Если значение <code>0</code> используется с <code>{ all: true }</code> (см. ниже), возвращается один или оба адреса IPv4 и IPv6, в зависимости от DNS-резолвера системы. <strong>По умолчанию:</strong> <code>0</code>.</li><li><code>hints</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type" target="_blank" rel="noreferrer">&lt;number&gt;</a> Один или несколько <a href="/ru/nodejs/api/dns#supported-getaddrinfo-flags">поддерживаемых флагов <code>getaddrinfo</code></a>. Несколько флагов могут быть переданы путем побитового <code>OR</code> их значений.</li><li><code>all</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type" target="_blank" rel="noreferrer">&lt;boolean&gt;</a> Если <code>true</code>, <code>Promise</code> разрешается со всеми адресами в массиве. В противном случае возвращает один адрес. <strong>По умолчанию:</strong> <code>false</code>.</li><li><code>order</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> Если <code>verbatim</code>, <code>Promise</code> разрешается с адресами IPv4 и IPv6 в том порядке, в котором их вернул DNS-резолвер. Если <code>ipv4first</code>, адреса IPv4 помещаются перед адресами IPv6. Если <code>ipv6first</code>, адреса IPv6 помещаются перед адресами IPv4. <strong>По умолчанию:</strong> <code>verbatim</code> (адреса не переупорядочиваются). Значение по умолчанию можно настроить с помощью <a href="/ru/nodejs/api/dns#dnssetdefaultresultorderorder"><code>dns.setDefaultResultOrder()</code></a> или <a href="/ru/nodejs/api/cli#dns-result-orderorder"><code>--dns-result-order</code></a>. В новом коде следует использовать <code>{ order: &#39;verbatim&#39; }</code>.</li><li><code>verbatim</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type" target="_blank" rel="noreferrer">&lt;boolean&gt;</a> Если <code>true</code>, <code>Promise</code> разрешается с адресами IPv4 и IPv6 в том порядке, в котором их вернул DNS-резолвер. Если <code>false</code>, адреса IPv4 помещаются перед адресами IPv6. Этот параметр будет объявлен устаревшим в пользу <code>order</code>. Если указаны оба параметра, <code>order</code> имеет более высокий приоритет. Новый код должен использовать только <code>order</code>. <strong>По умолчанию:</strong> в настоящее время <code>false</code> (адреса переупорядочиваются), но ожидается, что это изменится в не очень отдаленном будущем. Значение по умолчанию можно настроить с помощью <a href="/ru/nodejs/api/dns#dnssetdefaultresultorderorder"><code>dns.setDefaultResultOrder()</code></a> или <a href="/ru/nodejs/api/cli#dns-result-orderorder"><code>--dns-result-order</code></a>.</li></ul></li></ul><p>Разрешает имя хоста (например, <code>&#39;nodejs.org&#39;</code>) в первую найденную запись A (IPv4) или AAAA (IPv6). Все свойства <code>option</code> являются необязательными. Если <code>options</code> является целым числом, то оно должно быть <code>4</code> или <code>6</code> - если <code>options</code> не предоставлено, то возвращаются либо IPv4, либо IPv6 адреса, либо оба, если они найдены.</p><p>Если для параметра <code>all</code> установлено значение <code>true</code>, <code>Promise</code> разрешается с <code>addresses</code>, представляющим собой массив объектов со свойствами <code>address</code> и <code>family</code>.</p><p>В случае ошибки <code>Promise</code> отклоняется с объектом <a href="/ru/nodejs/api/errors#class-error"><code>Error</code></a>, где <code>err.code</code> является кодом ошибки. Имейте в виду, что <code>err.code</code> будет установлено в <code>&#39;ENOTFOUND&#39;</code> не только в том случае, если имя хоста не существует, но и в том случае, если поиск завершается неудачей другими способами, например, из-за отсутствия доступных файловых дескрипторов.</p><p><a href="/ru/nodejs/api/dns#dnspromiseslookuphostname-options"><code>dnsPromises.lookup()</code></a> не обязательно имеет какое-либо отношение к протоколу DNS. Реализация использует средство операционной системы, которое может связывать имена с адресами и наоборот. Эта реализация может иметь тонкие, но важные последствия для поведения любой программы Node.js. Пожалуйста, потратьте некоторое время на изучение раздела <a href="/ru/nodejs/api/dns#implementation-considerations">Соображения по реализации</a> перед использованием <code>dnsPromises.lookup()</code>.</p><p>Пример использования:</p><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-2229" id="tab-2230" checked><label data-title="ESM" for="tab-2230">ESM</label><input type="radio" name="group-2229" id="tab-2231"><label data-title="CJS" for="tab-2231">CJS</label></div><div class="blocks"><div class="language-js active line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> dns </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;node:dns&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> dnsPromises</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> dns.promises;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> options</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  family: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  hints: dns.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ADDRCONFIG</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> dns.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">V4MAPPED</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> dnsPromises.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lookup</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;example.org&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, options).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">then</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">result</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;address: %j family: IPv%s&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, result.address, result.family);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // address: &quot;2606:2800:21f:cb07:6820:80da:af6b:8b2c&quot; family: IPv6</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// When options.all is true, the result will be an Array.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">options.all </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> dnsPromises.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lookup</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;example.org&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, options).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">then</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">result</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;addresses: %j&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, result);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // addresses: [{&quot;address&quot;:&quot;2606:2800:21f:cb07:6820:80da:af6b:8b2c&quot;,&quot;family&quot;:6}]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> dns</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;node:dns&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> dnsPromises</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> dns.promises;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> options</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  family: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  hints: dns.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ADDRCONFIG</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> dns.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">V4MAPPED</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dnsPromises.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lookup</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;example.org&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, options).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">then</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">result</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;address: %j family: IPv%s&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, result.address, result.family);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // address: &quot;2606:2800:21f:cb07:6820:80da:af6b:8b2c&quot; family: IPv6</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// When options.all is true, the result will be an Array.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">options.all </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dnsPromises.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lookup</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;example.org&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, options).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">then</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">result</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;addresses: %j&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, result);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // addresses: [{&quot;address&quot;:&quot;2606:2800:21f:cb07:6820:80da:af6b:8b2c&quot;,&quot;family&quot;:6}]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div></div></div><h3 id="dnspromiseslookupserviceaddress-port" tabindex="-1"><code>dnsPromises.lookupService(address, port)</code> <a class="header-anchor" href="#dnspromiseslookupserviceaddress-port" aria-label="Permalink to “dnsPromises.lookupService(address, port)”">​</a></h3><p><strong>Добавлено в: v10.6.0</strong></p><ul><li><code>address</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a></li><li><code>port</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type" target="_blank" rel="noreferrer">&lt;number&gt;</a></li></ul><p>Преобразует заданный <code>address</code> и <code>port</code> в имя хоста и сервис, используя базовую реализацию <code>getnameinfo</code> операционной системы.</p><p>Если <code>address</code> не является допустимым IP-адресом, будет выброшена ошибка <code>TypeError</code>. <code>port</code> будет приведён к числу. Если это недопустимый порт, будет выброшена ошибка <code>TypeError</code>.</p><p>В случае ошибки <code>Promise</code> отклоняется с объектом <a href="/ru/nodejs/api/errors#class-error"><code>Error</code></a>, где <code>err.code</code> является кодом ошибки.</p><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-2260" id="tab-2261" checked><label data-title="ESM" for="tab-2261">ESM</label><input type="radio" name="group-2260" id="tab-2262"><label data-title="CJS" for="tab-2262">CJS</label></div><div class="blocks"><div class="language-js active line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> dnsPromises </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;node:dns/promises&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> result</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> dnsPromises.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lookupService</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;127.0.0.1&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">22</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(result.hostname, result.service); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Выводит: localhost ssh</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> dnsPromises</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;node:dns&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).promises;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dnsPromises.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lookupService</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;127.0.0.1&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">22</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">then</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">result</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(result.hostname, result.service);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // Выводит: localhost ssh</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></div></div><h3 id="dnspromisesresolvehostname-rrtype" tabindex="-1"><code>dnsPromises.resolve(hostname[, rrtype])</code> <a class="header-anchor" href="#dnspromisesresolvehostname-rrtype" aria-label="Permalink to “dnsPromises.resolve(hostname[, rrtype])”">​</a></h3><p><strong>Добавлено в: v10.6.0</strong></p><ul><li><code>hostname</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> Имя хоста для разрешения.</li><li><code>rrtype</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> Тип записи ресурса. <strong>По умолчанию:</strong> <code>&#39;A&#39;</code>.</li></ul><p>Использует протокол DNS для разрешения имени хоста (например, <code>&#39;nodejs.org&#39;</code>) в массив записей ресурсов. При успешном выполнении <code>Promise</code> разрешается массивом записей ресурсов. Тип и структура отдельных результатов зависят от <code>rrtype</code>:</p><table tabindex="0"><thead><tr><th><code>rrtype</code></th><th><code>records</code> содержит</th><th>Тип результата</th><th>Сокращённый метод</th></tr></thead><tbody><tr><td><code>&#39;A&#39;</code></td><td>IPv4-адреса (по умолчанию)</td><td><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a></td><td><a href="/ru/nodejs/api/dns#dnspromisesresolve4hostname-options"><code>dnsPromises.resolve4()</code></a></td></tr><tr><td><code>&#39;AAAA&#39;</code></td><td>IPv6-адреса</td><td><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a></td><td><a href="/ru/nodejs/api/dns#dnspromisesresolve6hostname-options"><code>dnsPromises.resolve6()</code></a></td></tr><tr><td><code>&#39;ANY&#39;</code></td><td>любые записи</td><td><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object&gt;</a></td><td><a href="/ru/nodejs/api/dns#dnspromisesresolveanyhostname"><code>dnsPromises.resolveAny()</code></a></td></tr><tr><td><code>&#39;CAA&#39;</code></td><td>записи авторизации ЦС</td><td><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object&gt;</a></td><td><a href="/ru/nodejs/api/dns#dnspromisesresolvecaahostname"><code>dnsPromises.resolveCaa()</code></a></td></tr><tr><td><code>&#39;CNAME&#39;</code></td><td>канонические имена</td><td><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a></td><td><a href="/ru/nodejs/api/dns#dnspromisesresolvecnamehostname"><code>dnsPromises.resolveCname()</code></a></td></tr><tr><td><code>&#39;MX&#39;</code></td><td>записи почтового обмена</td><td><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object&gt;</a></td><td><a href="/ru/nodejs/api/dns#dnspromisesresolvemxhostname"><code>dnsPromises.resolveMx()</code></a></td></tr><tr><td><code>&#39;NAPTR&#39;</code></td><td>записи указателя полномочий имени</td><td><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object&gt;</a></td><td><a href="/ru/nodejs/api/dns#dnspromisesresolvenaptrhostname"><code>dnsPromises.resolveNaptr()</code></a></td></tr><tr><td><code>&#39;NS&#39;</code></td><td>записи сервера имён</td><td><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a></td><td><a href="/ru/nodejs/api/dns#dnspromisesresolvenshostname"><code>dnsPromises.resolveNs()</code></a></td></tr><tr><td><code>&#39;PTR&#39;</code></td><td>записи указателя</td><td><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a></td><td><a href="/ru/nodejs/api/dns#dnspromisesresolveptrhostname"><code>dnsPromises.resolvePtr()</code></a></td></tr><tr><td><code>&#39;SOA&#39;</code></td><td>записи начала зоны полномочий</td><td><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object&gt;</a></td><td><a href="/ru/nodejs/api/dns#dnspromisesresolvesoahostname"><code>dnsPromises.resolveSoa()</code></a></td></tr><tr><td><code>&#39;SRV&#39;</code></td><td>записи сервиса</td><td><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object&gt;</a></td><td><a href="/ru/nodejs/api/dns#dnspromisesresolvesrvhostname"><code>dnsPromises.resolveSrv()</code></a></td></tr><tr><td><code>&#39;TXT&#39;</code></td><td>текстовые записи</td><td><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string[]&gt;</a></td><td><a href="/ru/nodejs/api/dns#dnspromisesresolvetxthostname"><code>dnsPromises.resolveTxt()</code></a></td></tr></tbody></table><p>В случае ошибки <code>Promise</code> отклоняется с объектом <a href="/ru/nodejs/api/errors#class-error"><code>Error</code></a>, где <code>err.code</code> является одним из <a href="/ru/nodejs/api/dns#error-codes">кодов ошибок DNS</a>.</p><h3 id="dnspromisesresolve4hostname-options" tabindex="-1"><code>dnsPromises.resolve4(hostname[, options])</code> <a class="header-anchor" href="#dnspromisesresolve4hostname-options" aria-label="Permalink to “dnsPromises.resolve4(hostname[, options])”">​</a></h3><p><strong>Добавлено в версии: v10.6.0</strong></p><ul><li><code>hostname</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> Имя хоста для разрешения.</li><li><code>options</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object&gt;</a><ul><li><code>ttl</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type" target="_blank" rel="noreferrer">&lt;boolean&gt;</a> Получить значение Time-To-Live (TTL) каждой записи. Если <code>true</code>, <code>Promise</code> разрешается с массивом объектов <code>{ address: &#39;1.2.3.4&#39;, ttl: 60 }</code>, а не с массивом строк, при этом TTL выражается в секундах.</li></ul></li></ul><p>Использует протокол DNS для разрешения IPv4-адресов (записи <code>A</code>) для <code>hostname</code>. При успехе <code>Promise</code> разрешается с массивом IPv4-адресов (например, <code>[&#39;74.125.79.104&#39;, &#39;74.125.79.105&#39;, &#39;74.125.79.106&#39;]</code>).</p><h3 id="dnspromisesresolve6hostname-options" tabindex="-1"><code>dnsPromises.resolve6(hostname[, options])</code> <a class="header-anchor" href="#dnspromisesresolve6hostname-options" aria-label="Permalink to “dnsPromises.resolve6(hostname[, options])”">​</a></h3><p><strong>Добавлено в версии: v10.6.0</strong></p><ul><li><code>hostname</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> Имя хоста для разрешения.</li><li><code>options</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object&gt;</a><ul><li><code>ttl</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type" target="_blank" rel="noreferrer">&lt;boolean&gt;</a> Получить значение Time-To-Live (TTL) каждой записи. Если <code>true</code>, <code>Promise</code> разрешается с массивом объектов <code>{ address: &#39;0:1:2:3:4:5:6:7&#39;, ttl: 60 }</code>, а не с массивом строк, при этом TTL выражается в секундах.</li></ul></li></ul><p>Использует протокол DNS для разрешения IPv6-адресов (записи <code>AAAA</code>) для <code>hostname</code>. При успехе <code>Promise</code> разрешается с массивом IPv6-адресов.</p><h3 id="dnspromisesresolveanyhostname" tabindex="-1"><code>dnsPromises.resolveAny(hostname)</code> <a class="header-anchor" href="#dnspromisesresolveanyhostname" aria-label="Permalink to “dnsPromises.resolveAny(hostname)”">​</a></h3><p><strong>Добавлено в версии: v10.6.0</strong></p><ul><li><code>hostname</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a></li></ul><p>Использует протокол DNS для разрешения всех записей (также известных как запросы <code>ANY</code> или <code>*</code>). При успехе <code>Promise</code> разрешается с массивом, содержащим различные типы записей. Каждый объект имеет свойство <code>type</code>, которое указывает тип текущей записи. И в зависимости от <code>type</code>, в объекте будут присутствовать дополнительные свойства:</p><table tabindex="0"><thead><tr><th>Тип</th><th>Свойства</th></tr></thead><tbody><tr><td><code>&#39;A&#39;</code></td><td><code>address</code> / <code>ttl</code></td></tr><tr><td><code>&#39;AAAA&#39;</code></td><td><code>address</code> / <code>ttl</code></td></tr><tr><td><code>&#39;CNAME&#39;</code></td><td><code>value</code></td></tr><tr><td><code>&#39;MX&#39;</code></td><td>См. <a href="/ru/nodejs/api/dns#dnspromisesresolvemxhostname"><code>dnsPromises.resolveMx()</code></a></td></tr><tr><td><code>&#39;NAPTR&#39;</code></td><td>См. <a href="/ru/nodejs/api/dns#dnspromisesresolvenaptrhostname"><code>dnsPromises.resolveNaptr()</code></a></td></tr><tr><td><code>&#39;NS&#39;</code></td><td><code>value</code></td></tr><tr><td><code>&#39;PTR&#39;</code></td><td><code>value</code></td></tr><tr><td><code>&#39;SOA&#39;</code></td><td>См. <a href="/ru/nodejs/api/dns#dnspromisesresolvesoahostname"><code>dnsPromises.resolveSoa()</code></a></td></tr><tr><td><code>&#39;SRV&#39;</code></td><td>См. <a href="/ru/nodejs/api/dns#dnspromisesresolvesrvhostname"><code>dnsPromises.resolveSrv()</code></a></td></tr><tr><td><code>&#39;TXT&#39;</code></td><td>Этот тип записи содержит свойство массива под названием <code>entries</code>, которое относится к <a href="/ru/nodejs/api/dns#dnspromisesresolvetxthostname"><code>dnsPromises.resolveTxt()</code></a> , например <code>{ entries: [&#39;...&#39;], type: &#39;TXT&#39; }</code></td></tr><tr><td>Вот пример результирующего объекта:</td><td></td></tr></tbody></table><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[ { type: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;A&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, address: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;127.0.0.1&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, ttl: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">299</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  { type: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;CNAME&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, value: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;example.com&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  { type: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;MX&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, exchange: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;alt4.aspmx.l.example.com&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, priority: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">50</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  { type: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;NS&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, value: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;ns1.example.com&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  { type: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;TXT&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, entries: [ </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;v=spf1 include:_spf.example.com ~all&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ] },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  { type: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;SOA&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    nsname: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;ns1.example.com&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    hostmaster: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;admin.example.com&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    serial: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">156696742</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    refresh: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">900</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    retry: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">900</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    expire: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1800</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    minttl: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">60</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } ]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h3 id="dnspromisesresolvecaahostname" tabindex="-1"><code>dnsPromises.resolveCaa(hostname)</code> <a class="header-anchor" href="#dnspromisesresolvecaahostname" aria-label="Permalink to “dnsPromises.resolveCaa(hostname)”">​</a></h3><p><strong>Добавлено в: v15.0.0, v14.17.0</strong></p><ul><li><code>hostname</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a></li></ul><p>Использует протокол DNS для разрешения <code>CAA</code> записей для <code>hostname</code>. В случае успеха <code>Promise</code> разрешается с массивом объектов, содержащих доступные записи авторизации центра сертификации для <code>hostname</code> (например, <code>[{critical: 0, iodef: &#39;mailto:pki@example.com&#39;},{critical: 128, issue: &#39;pki.example.com&#39;}]</code>).</p><h3 id="dnspromisesresolvecnamehostname" tabindex="-1"><code>dnsPromises.resolveCname(hostname)</code> <a class="header-anchor" href="#dnspromisesresolvecnamehostname" aria-label="Permalink to “dnsPromises.resolveCname(hostname)”">​</a></h3><p><strong>Добавлено в: v10.6.0</strong></p><ul><li><code>hostname</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a></li></ul><p>Использует протокол DNS для разрешения <code>CNAME</code> записей для <code>hostname</code>. В случае успеха <code>Promise</code> разрешается с массивом канонических имен, доступных для <code>hostname</code> (например, <code>[&#39;bar.example.com&#39;]</code>).</p><h3 id="dnspromisesresolvemxhostname" tabindex="-1"><code>dnsPromises.resolveMx(hostname)</code> <a class="header-anchor" href="#dnspromisesresolvemxhostname" aria-label="Permalink to “dnsPromises.resolveMx(hostname)”">​</a></h3><p><strong>Добавлено в: v10.6.0</strong></p><ul><li><code>hostname</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a></li></ul><p>Использует протокол DNS для разрешения записей почтового обмена (записей <code>MX</code>) для <code>hostname</code>. В случае успеха <code>Promise</code> разрешается с массивом объектов, содержащих свойства <code>priority</code> и <code>exchange</code> (например, <code>[{priority: 10, exchange: &#39;mx.example.com&#39;}, ...]</code>).</p><h3 id="dnspromisesresolvenaptrhostname" tabindex="-1"><code>dnsPromises.resolveNaptr(hostname)</code> <a class="header-anchor" href="#dnspromisesresolvenaptrhostname" aria-label="Permalink to “dnsPromises.resolveNaptr(hostname)”">​</a></h3><p><strong>Добавлено в: v10.6.0</strong></p><ul><li><code>hostname</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a></li></ul><p>Использует протокол DNS для разрешения записей на основе регулярных выражений (записей <code>NAPTR</code>) для <code>hostname</code>. В случае успеха <code>Promise</code> разрешается с массивом объектов со следующими свойствами:</p><ul><li><code>flags</code></li><li><code>service</code></li><li><code>regexp</code></li><li><code>replacement</code></li><li><code>order</code></li><li><code>preference</code></li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  flags</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;s&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  service</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;SIP+D2U&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  regexp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  replacement</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;_sip._udp.example.com&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  order</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">30</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  preference</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="dnspromisesresolvenshostname" tabindex="-1"><code>dnsPromises.resolveNs(hostname)</code> <a class="header-anchor" href="#dnspromisesresolvenshostname" aria-label="Permalink to “dnsPromises.resolveNs(hostname)”">​</a></h3><p><strong>Добавлено в: v10.6.0</strong></p><ul><li><code>hostname</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a></li></ul><p>Использует протокол DNS для разрешения записей серверов имен (записей <code>NS</code>) для <code>hostname</code>. В случае успеха <code>Promise</code> разрешается с массивом записей серверов имен, доступных для <code>hostname</code> (например, <code>[&#39;ns1.example.com&#39;, &#39;ns2.example.com&#39;]</code>).</p><h3 id="dnspromisesresolveptrhostname" tabindex="-1"><code>dnsPromises.resolvePtr(hostname)</code> <a class="header-anchor" href="#dnspromisesresolveptrhostname" aria-label="Permalink to “dnsPromises.resolvePtr(hostname)”">​</a></h3><p><strong>Добавлено в: v10.6.0</strong></p><ul><li><code>hostname</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a></li></ul><p>Использует протокол DNS для разрешения записей указателя (<code>PTR</code> records) для <code>hostname</code>. При успехе <code>Promise</code> разрешается массивом строк, содержащих записи ответа.</p><h3 id="dnspromisesresolvesoahostname" tabindex="-1"><code>dnsPromises.resolveSoa(hostname)</code> <a class="header-anchor" href="#dnspromisesresolvesoahostname" aria-label="Permalink to “dnsPromises.resolveSoa(hostname)”">​</a></h3><p><strong>Добавлено в: v10.6.0</strong></p><ul><li><code>hostname</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a></li></ul><p>Использует протокол DNS для разрешения записи начала зоны (<code>SOA</code> record) для <code>hostname</code>. При успехе <code>Promise</code> разрешается объектом со следующими свойствами:</p><ul><li><code>nsname</code></li><li><code>hostmaster</code></li><li><code>serial</code></li><li><code>refresh</code></li><li><code>retry</code></li><li><code>expire</code></li><li><code>minttl</code></li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  nsname</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;ns.example.com&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  hostmaster</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;root.example.com&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  serial</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2013101809</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  refresh</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  retry</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2400</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  expire</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">604800</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  minttl</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3600</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="dnspromisesresolvesrvhostname" tabindex="-1"><code>dnsPromises.resolveSrv(hostname)</code> <a class="header-anchor" href="#dnspromisesresolvesrvhostname" aria-label="Permalink to “dnsPromises.resolveSrv(hostname)”">​</a></h3><p><strong>Добавлено в: v10.6.0</strong></p><ul><li><code>hostname</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a></li></ul><p>Использует протокол DNS для разрешения сервисных записей (<code>SRV</code> records) для <code>hostname</code>. При успехе <code>Promise</code> разрешается массивом объектов со следующими свойствами:</p><ul><li><code>priority</code></li><li><code>weight</code></li><li><code>port</code></li><li><code>name</code></li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  priority</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  weight</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  port</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">21223</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;service.example.com&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="dnspromisesresolvetxthostname" tabindex="-1"><code>dnsPromises.resolveTxt(hostname)</code> <a class="header-anchor" href="#dnspromisesresolvetxthostname" aria-label="Permalink to “dnsPromises.resolveTxt(hostname)”">​</a></h3><p><strong>Добавлено в: v10.6.0</strong></p><ul><li><code>hostname</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a></li></ul><p>Использует протокол DNS для разрешения текстовых запросов (<code>TXT</code> records) для <code>hostname</code>. При успехе <code>Promise</code> разрешается двумерным массивом текстовых записей, доступных для <code>hostname</code> (например, <code>[ [&#39;v=spf1 ip4:0.0.0.0 &#39;, &#39;~all&#39; ] ]</code>). Каждый подмассив содержит TXT-фрагменты одной записи. В зависимости от варианта использования, их можно либо объединить вместе, либо обрабатывать отдельно.</p><h3 id="dnspromisesreverseip" tabindex="-1"><code>dnsPromises.reverse(ip)</code> <a class="header-anchor" href="#dnspromisesreverseip" aria-label="Permalink to “dnsPromises.reverse(ip)”">​</a></h3><p><strong>Добавлено в версии: v10.6.0</strong></p><ul><li><code>ip</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a></li></ul><p>Выполняет обратный DNS-запрос, который разрешает IPv4 или IPv6 адрес в массив имен хостов.</p><p>При ошибке <code>Promise</code> отклоняется с объектом <a href="/ru/nodejs/api/errors#class-error"><code>Error</code></a>, где <code>err.code</code> является одним из <a href="/ru/nodejs/api/dns#error-codes">кодов ошибок DNS</a>.</p><h3 id="dnspromisessetdefaultresultorderorder" tabindex="-1"><code>dnsPromises.setDefaultResultOrder(order)</code> <a class="header-anchor" href="#dnspromisessetdefaultresultorderorder" aria-label="Permalink to “dnsPromises.setDefaultResultOrder(order)”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[История изменений]</p><table tabindex="0"><thead><tr><th>Версия</th><th>Изменения</th></tr></thead><tbody><tr><td>v22.1.0, v20.13.0</td><td>Теперь поддерживается значение <code>ipv6first</code>.</td></tr><tr><td>v17.0.0</td><td>Значение по умолчанию изменено на <code>verbatim</code>.</td></tr><tr><td>v16.4.0, v14.18.0</td><td>Добавлено в версии: v16.4.0, v14.18.0</td></tr></tbody></table></div><ul><li><code>order</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> должно быть <code>&#39;ipv4first&#39;</code>, <code>&#39;ipv6first&#39;</code> или <code>&#39;verbatim&#39;</code>.</li></ul><p>Устанавливает значение по умолчанию для <code>order</code> в <a href="/ru/nodejs/api/dns#dnslookuphostname-options-callback"><code>dns.lookup()</code></a> и <a href="/ru/nodejs/api/dns#dnspromiseslookuphostname-options"><code>dnsPromises.lookup()</code></a>. Значение может быть:</p><ul><li><code>ipv4first</code>: устанавливает <code>order</code> по умолчанию в <code>ipv4first</code>.</li><li><code>ipv6first</code>: устанавливает <code>order</code> по умолчанию в <code>ipv6first</code>.</li><li><code>verbatim</code>: устанавливает <code>order</code> по умолчанию в <code>verbatim</code>.</li></ul><p>По умолчанию используется <code>verbatim</code>, и <a href="/ru/nodejs/api/dns#dnspromisessetdefaultresultorderorder"><code>dnsPromises.setDefaultResultOrder()</code></a> имеет более высокий приоритет, чем <a href="/ru/nodejs/api/cli#dns-result-orderorder"><code>--dns-result-order</code></a>. При использовании <a href="/ru/nodejs/api/worker_threads">рабочих потоков</a>, <a href="/ru/nodejs/api/dns#dnspromisessetdefaultresultorderorder"><code>dnsPromises.setDefaultResultOrder()</code></a> из основного потока не влияет на порядок DNS по умолчанию в рабочих потоках.</p><h3 id="dnspromisesgetdefaultresultorder" tabindex="-1"><code>dnsPromises.getDefaultResultOrder()</code> <a class="header-anchor" href="#dnspromisesgetdefaultresultorder" aria-label="Permalink to “dnsPromises.getDefaultResultOrder()”">​</a></h3><p><strong>Добавлено в версии: v20.1.0, v18.17.0</strong></p><p>Получает значение <code>dnsOrder</code>.</p><h3 id="dnspromisessetserversservers" tabindex="-1"><code>dnsPromises.setServers(servers)</code> <a class="header-anchor" href="#dnspromisessetserversservers" aria-label="Permalink to “dnsPromises.setServers(servers)”">​</a></h3><p><strong>Добавлено в версии: v10.6.0</strong></p><ul><li><code>servers</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string[]&gt;</a> массив адресов в формате <a href="https://tools.ietf.org/html/rfc5952#section-6" target="_blank" rel="noreferrer">RFC 5952</a></li></ul><p>Устанавливает IP-адрес и порт серверов, которые будут использоваться при выполнении DNS-разрешения. Аргумент <code>servers</code> является массивом адресов в формате <a href="https://tools.ietf.org/html/rfc5952#section-6" target="_blank" rel="noreferrer">RFC 5952</a>. Если порт является стандартным портом DNS IANA (53), его можно опустить.</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dnsPromises.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setServers</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &#39;8.8.8.8&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &#39;[2001:4860:4860::8888]&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &#39;8.8.8.8:1053&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &#39;[2001:4860:4860::8888]:1053&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>Если предоставлен недействительный адрес, будет выдана ошибка.</p><p>Метод <code>dnsPromises.setServers()</code> не должен вызываться во время выполнения DNS-запроса.</p><p>Этот метод работает так же, как <a href="https://man7.org/linux/man-pages/man5/resolv.conf.5" target="_blank" rel="noreferrer">resolve.conf</a>. То есть, если попытка разрешения с использованием первого предоставленного сервера приводит к ошибке <code>NOTFOUND</code>, метод <code>resolve()</code> <em>не</em> будет пытаться выполнить разрешение с использованием последующих предоставленных серверов. Резервные DNS-серверы будут использоваться только в том случае, если первые серверы истекли по времени или привели к какой-либо другой ошибке.</p><h2 id="error-codes" tabindex="-1">Коды ошибок <a class="header-anchor" href="#error-codes" aria-label="Permalink to “Коды ошибок”">​</a></h2><p>Каждый DNS-запрос может вернуть один из следующих кодов ошибок:</p><ul><li><code>dns.NODATA</code>: DNS-сервер вернул ответ без данных.</li><li><code>dns.FORMERR</code>: DNS-сервер утверждает, что запрос был неправильно отформатирован.</li><li><code>dns.SERVFAIL</code>: DNS-сервер вернул общую ошибку.</li><li><code>dns.NOTFOUND</code>: Доменное имя не найдено.</li><li><code>dns.NOTIMP</code>: DNS-сервер не реализует запрошенную операцию.</li><li><code>dns.REFUSED</code>: DNS-сервер отклонил запрос.</li><li><code>dns.BADQUERY</code>: Неправильно отформатированный DNS-запрос.</li><li><code>dns.BADNAME</code>: Неправильно отформатированное имя хоста.</li><li><code>dns.BADFAMILY</code>: Неподдерживаемое семейство адресов.</li><li><code>dns.BADRESP</code>: Неправильно отформатированный DNS-ответ.</li><li><code>dns.CONNREFUSED</code>: Не удалось связаться с DNS-серверами.</li><li><code>dns.TIMEOUT</code>: Истекло время ожидания при обращении к DNS-серверам.</li><li><code>dns.EOF</code>: Конец файла.</li><li><code>dns.FILE</code>: Ошибка чтения файла.</li><li><code>dns.NOMEM</code>: Недостаточно памяти.</li><li><code>dns.DESTRUCTION</code>: Канал уничтожается.</li><li><code>dns.BADSTR</code>: Неправильно отформатированная строка.</li><li><code>dns.BADFLAGS</code>: Указаны недопустимые флаги.</li><li><code>dns.NONAME</code>: Указанное имя хоста не является числовым.</li><li><code>dns.BADHINTS</code>: Указаны недопустимые флаги подсказок.</li><li><code>dns.NOTINITIALIZED</code>: Инициализация библиотеки c-ares еще не выполнена.</li><li><code>dns.LOADIPHLPAPI</code>: Ошибка загрузки <code>iphlpapi.dll</code>.</li><li><code>dns.ADDRGETNETWORKPARAMS</code>: Не удалось найти функцию <code>GetNetworkParams</code>.</li><li><code>dns.CANCELLED</code>: DNS-запрос отменен.</li></ul><p>API <code>dnsPromises</code> также экспортирует вышеуказанные коды ошибок, например, <code>dnsPromises.NODATA</code>.</p><h2 id="implementation-considerations" tabindex="-1">Замечания по реализации <a class="header-anchor" href="#implementation-considerations" aria-label="Permalink to “Замечания по реализации”">​</a></h2><p>Хотя <a href="/ru/nodejs/api/dns#dnslookuphostname-options-callback"><code>dns.lookup()</code></a> и различные функции <code>dns.resolve*()/dns.reverse()</code> преследуют одну и ту же цель - связать сетевое имя с сетевым адресом (или наоборот), их поведение существенно отличается. Эти различия могут иметь тонкие, но значительные последствия для поведения программ Node.js.</p><h3 id="dnslookup" tabindex="-1"><code>dns.lookup()</code> <a class="header-anchor" href="#dnslookup" aria-label="Permalink to “dns.lookup()”">​</a></h3><p>Под капотом <a href="/ru/nodejs/api/dns#dnslookuphostname-options-callback"><code>dns.lookup()</code></a> использует те же возможности операционной системы, что и большинство других программ. Например, <a href="/ru/nodejs/api/dns#dnslookuphostname-options-callback"><code>dns.lookup()</code></a> почти всегда будет разрешать данное имя так же, как и команда <code>ping</code>. В большинстве POSIX-подобных операционных систем поведение функции <a href="/ru/nodejs/api/dns#dnslookuphostname-options-callback"><code>dns.lookup()</code></a> можно изменить, изменив настройки в <a href="http://man7.org/linux/man-pages/man5/nsswitch.conf.5" target="_blank" rel="noreferrer"><code>nsswitch.conf(5)</code></a> и/или <a href="http://man7.org/linux/man-pages/man5/resolv.conf.5" target="_blank" rel="noreferrer"><code>resolv.conf(5)</code></a>, но изменение этих файлов изменит поведение всех других программ, работающих в той же операционной системе.</p><p>Хотя вызов <code>dns.lookup()</code> будет асинхронным с точки зрения JavaScript, он реализован как синхронный вызов <a href="http://man7.org/linux/man-pages/man3/getaddrinfo.3" target="_blank" rel="noreferrer"><code>getaddrinfo(3)</code></a>, который выполняется в пуле потоков libuv. Это может иметь неожиданные негативные последствия для производительности некоторых приложений, см. документацию по <a href="/ru/nodejs/api/cli#uv-threadpool-sizesize"><code>UV_THREADPOOL_SIZE</code></a> для получения дополнительной информации.</p><p>Различные сетевые API будут вызывать <code>dns.lookup()</code> внутри себя для разрешения имен хостов. Если это проблема, рассмотрите возможность разрешения имени хоста в адрес с помощью <code>dns.resolve()</code> и использования адреса вместо имени хоста. Кроме того, некоторые сетевые API (такие как <a href="/ru/nodejs/api/net#socketconnectoptions-connectlistener"><code>socket.connect()</code></a> и <a href="/ru/nodejs/api/dgram#dgramcreatesocketoptions-callback"><code>dgram.createSocket()</code></a>) позволяют заменить резолвер по умолчанию, <code>dns.lookup()</code>.</p><h3 id="dnsresolve-dnsresolve*-and-dnsreverse" tabindex="-1"><code>dns.resolve()</code>, <code>dns.resolve*()</code>, и <code>dns.reverse()</code> <a class="header-anchor" href="#dnsresolve-dnsresolve*-and-dnsreverse" aria-label="Permalink to “dns.resolve(), dns.resolve*(), и dns.reverse()”">​</a></h3><p>Эти функции реализованы совершенно иначе, чем <a href="/ru/nodejs/api/dns#dnslookuphostname-options-callback"><code>dns.lookup()</code></a>. Они не используют <a href="http://man7.org/linux/man-pages/man3/getaddrinfo.3" target="_blank" rel="noreferrer"><code>getaddrinfo(3)</code></a> и <em>всегда</em> выполняют DNS-запрос в сети. Эта сетевая коммуникация всегда выполняется асинхронно и не использует пул потоков libuv.</p><p>В результате, эти функции не могут оказывать такое же негативное влияние на другие процессы, происходящие в пуле потоков libuv, как <a href="/ru/nodejs/api/dns#dnslookuphostname-options-callback"><code>dns.lookup()</code></a>.</p><p>Они не используют тот же набор конфигурационных файлов, что и <a href="/ru/nodejs/api/dns#dnslookuphostname-options-callback"><code>dns.lookup()</code></a>. Например, они не используют конфигурацию из <code>/etc/hosts</code>.</p>`,275)])}var s=e(a,[[`render`,o]]);export{i as __pageData,s as default};