import{__plugin_vue_export_helper_default as e,createElementBlock as t,createStaticVNode as n,openBlock as r}from"./chunks/plugin-vue_export-helper.Bts1mPc7.js";const i=JSON.parse(`{"title":"Cómo usar el REPL de Node.js","description":"Aprende a usar el REPL de Node.js para probar rápidamente código JavaScript simple y explorar sus características, incluyendo el modo multilínea, variables especiales y comandos de punto.","frontmatter":{"title":"Cómo usar el REPL de Node.js","description":"Aprende a usar el REPL de Node.js para probar rápidamente código JavaScript simple y explorar sus características, incluyendo el modo multilínea, variables especiales y comandos de punto.","head":[["meta",{"name":"og:title","content":"Cómo usar el REPL de Node.js | Node.js - iDoc.dev"}],["meta",{"name":"og:description","content":"Aprende a usar el REPL de Node.js para probar rápidamente código JavaScript simple y explorar sus características, incluyendo el modo multilínea, variables especiales y comandos de punto."}],["meta",{"name":"twitter:title","content":"Cómo usar el REPL de Node.js | Node.js - iDoc.dev"}],["meta",{"name":"twitter:description","content":"Aprende a usar el REPL de Node.js para probar rápidamente código JavaScript simple y explorar sus características, incluyendo el modo multilínea, variables especiales y comandos de punto."}],["link",{"rel":"canonical","href":"https://idoc.dev/es/nodejs/guide/how-to-use-the-nodejs-repl"}],["meta",{"property":"og:url","content":"https://idoc.dev/es/nodejs/guide/how-to-use-the-nodejs-repl"}]]},"headers":[],"relativePath":"es/nodejs/guide/how-to-use-the-nodejs-repl.md","filePath":"es/nodejs/guide/how-to-use-the-nodejs-repl.md","lastUpdated":null}`),a={name:`es/nodejs/guide/how-to-use-the-nodejs-repl.md`};function o(e,i,a,o,s,c){return r(),t(`div`,null,i[0]||=[n(`<h1 id="como-usar-el-repl-de-node-js" tabindex="-1">Cómo usar el REPL de Node.js <a class="header-anchor" href="#como-usar-el-repl-de-node-js" aria-label="Permalink to “Cómo usar el REPL de Node.js”">​</a></h1><p>El comando <code>node</code> es el que usamos para ejecutar nuestros scripts de Node.js:</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">node</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> script.js</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Si ejecutamos el comando <code>node</code> sin ningún script para ejecutar o sin ningún argumento, iniciamos una sesión REPL:</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">node</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="tip custom-block"><p class="custom-block-title">NOTA</p><p>REPL significa Read Evaluate Print Loop (Leer, Evaluar, Imprimir, Bucle), y es un entorno de lenguaje de programación (básicamente una ventana de consola) que toma una sola expresión como entrada del usuario y devuelve el resultado a la consola después de la ejecución. La sesión REPL proporciona una forma conveniente de probar rápidamente código JavaScript simple.</p></div><p>Si lo pruebas ahora en tu terminal, esto es lo que sucede:</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> node</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>El comando permanece en modo inactivo y espera a que ingresemos algo.</p><div class="tip custom-block"><p class="custom-block-title custom-block-title-default">TIP</p><p>si no está seguro de cómo abrir su terminal, busque en Google &quot;Cómo abrir la terminal en su-sistema-operativo&quot;.</p></div><p>El REPL está esperando que ingresemos código JavaScript, para ser más precisos.</p><p>Comienza de forma sencilla e ingresa:</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> console.log(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&#39;test&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">test</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">undefined</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>El primer valor, <code>test</code>, es la salida que le dijimos a la consola que imprimiera, luego obtenemos <code>undefined</code>, que es el valor de retorno de la ejecución de <code>console.log()</code>. Node leyó esta línea de código, la evaluó, imprimió el resultado y luego volvió a esperar más líneas de código. Node recorrerá estos tres pasos para cada fragmento de código que ejecutemos en el REPL hasta que salgamos de la sesión. Ahí es donde el REPL obtuvo su nombre.</p><p>Node imprime automáticamente el resultado de cualquier línea de código JavaScript sin la necesidad de indicarle que lo haga. Por ejemplo, escriba la siguiente línea y presione enter:</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 5</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">=5</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>Ten en cuenta la diferencia en las salidas de las dos líneas anteriores. El REPL de Node imprimió <code>undefined</code> después de ejecutar <code>console.log()</code>, mientras que, por otro lado, simplemente imprimió el resultado de <code>5 == 5</code>. Debes tener en cuenta que lo primero es solo una declaración en JavaScript y lo segundo es una expresión.</p><p>En algunos casos, el código que desea probar puede necesitar varias líneas. Por ejemplo, digamos que desea definir una función que genere un número aleatorio, en la sesión REPL escriba la siguiente línea y presione enter:</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> generateRandom</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">...</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>El REPL de Node es lo suficientemente inteligente como para determinar que aún no ha terminado de escribir su código y entrará en un modo de varias líneas para que pueda escribir más código. Ahora termine la definición de su función y presione enter:</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> generateRandom</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">...</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">return</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Math</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">random</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="la-variable-especial" tabindex="-1">La variable especial: <a class="header-anchor" href="#la-variable-especial" aria-label="Permalink to “La variable especial:”">​</a></h3><p>Si después de algún código escribes <code>_</code>, eso imprimirá el resultado de la última operación.</p><h3 id="la-tecla-de-flecha-hacia-arriba" tabindex="-1">La tecla de flecha hacia arriba: <a class="header-anchor" href="#la-tecla-de-flecha-hacia-arriba" aria-label="Permalink to “La tecla de flecha hacia arriba:”">​</a></h3><p>Si presionas la tecla de flecha hacia arriba, tendrás acceso al historial de las líneas de código anteriores ejecutadas en la sesión REPL actual, e incluso en sesiones anteriores.</p><h2 id="comandos-con-punto" tabindex="-1">Comandos con punto <a class="header-anchor" href="#comandos-con-punto" aria-label="Permalink to “Comandos con punto”">​</a></h2><p>El REPL tiene algunos comandos especiales, todos comenzando con un punto <code>.</code>. Ellos son:</p><ul><li><code>.help</code>: muestra la ayuda de los comandos con punto.</li><li><code>.editor</code>: habilita el modo editor, para escribir código JavaScript de múltiples líneas con facilidad. Una vez que estés en este modo, introduce <code>ctrl-D</code> para ejecutar el código que escribiste.</li><li><code>.break</code>: cuando se introduce una expresión de múltiples líneas, ingresar el comando <code>.break</code> abortará la entrada posterior. Igual que presionar <code>ctrl-C</code>.</li><li><code>.clear</code>: restablece el contexto REPL a un objeto vacío y borra cualquier expresión de múltiples líneas que se esté ingresando actualmente.</li><li><code>.1oad</code>: carga un archivo JavaScript, relativo al directorio de trabajo actual.</li><li><code>.save</code>: guarda todo lo que ingresaste en la sesión REPL en un archivo (especifica el nombre del archivo).</li><li><code>.exit</code>: sale del REPL (igual que presionar <code>ctrl-C</code> dos veces).</li></ul><p>El REPL sabe cuándo estás escribiendo una declaración de múltiples líneas sin la necesidad de invocar <code>.editor</code>. Por ejemplo, si comienzas a escribir una iteración como esta:</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">].</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">foxEach</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">num</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>y presionas enter, el REPL irá a una nueva línea que comienza con 3 puntos, indicando que ahora puedes continuar trabajando en ese bloque.</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.. console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (num)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">..}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>Si escribes <code>.break</code> al final de una línea, el modo multilínea se detendrá y la declaración no se ejecutará.</p><h2 id="ejecutar-repl-desde-un-archivo-javascript" tabindex="-1">Ejecutar REPL desde un archivo JavaScript <a class="header-anchor" href="#ejecutar-repl-desde-un-archivo-javascript" aria-label="Permalink to “Ejecutar REPL desde un archivo JavaScript”">​</a></h2><p>Podemos importar el REPL en un archivo JavaScript usando <code>repl</code>.</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> repl</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;node:repl&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Usando la variable <code>repl</code> podemos realizar varias operaciones. Para iniciar el indicador de comandos REPL, escribe la siguiente línea:</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">repl.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Ejecuta el archivo en la línea de comandos.</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">node</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> repl.js</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Puedes pasar una cadena que se muestre cuando se inicia el REPL. El valor predeterminado es &#39;&gt;&#39; (con un espacio al final), pero podemos definir un mensaje personalizado.</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// un mensaje de estilo Unix</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> local</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> repl.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;$ &#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>Puedes mostrar un mensaje al salir del REPL</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">local.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;exit&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;saliendo de repl&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  process.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">exit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>Puedes leer más sobre el módulo REPL en la <a href="/es/nodejs/api/repl">documentación de repl</a>.</p>`,45)])}var s=e(a,[[`render`,o]]);export{i as __pageData,s as default};