import{__plugin_vue_export_helper_default as e,createElementBlock as t,createStaticVNode as n,openBlock as r}from"./chunks/plugin-vue_export-helper.Bts1mPc7.js";const i=JSON.parse(`{"title":"Executar scripts Node.js a partir da linha de comando","description":"Saiba como executar programas Node.js a partir da linha de comando, incluindo o uso do comando node, linhas shebang, permissões de execução, passar strings como argumentos e reiniciar automaticamente a aplicação.","frontmatter":{"title":"Executar scripts Node.js a partir da linha de comando","description":"Saiba como executar programas Node.js a partir da linha de comando, incluindo o uso do comando node, linhas shebang, permissões de execução, passar strings como argumentos e reiniciar automaticamente a aplicação.","head":[["meta",{"name":"og:title","content":"Executar scripts Node.js a partir da linha de comando | Node.js - iDoc.dev"}],["meta",{"name":"og:description","content":"Saiba como executar programas Node.js a partir da linha de comando, incluindo o uso do comando node, linhas shebang, permissões de execução, passar strings como argumentos e reiniciar automaticamente a aplicação."}],["meta",{"name":"twitter:title","content":"Executar scripts Node.js a partir da linha de comando | Node.js - iDoc.dev"}],["meta",{"name":"twitter:description","content":"Saiba como executar programas Node.js a partir da linha de comando, incluindo o uso do comando node, linhas shebang, permissões de execução, passar strings como argumentos e reiniciar automaticamente a aplicação."}],["link",{"rel":"canonical","href":"https://idoc.dev/pt/nodejs/guide/run-nodejs-scripts-from-the-command-line"}],["meta",{"property":"og:url","content":"https://idoc.dev/pt/nodejs/guide/run-nodejs-scripts-from-the-command-line"}]]},"headers":[],"relativePath":"pt/nodejs/guide/run-nodejs-scripts-from-the-command-line.md","filePath":"pt/nodejs/guide/run-nodejs-scripts-from-the-command-line.md","lastUpdated":1749464498000}`),a={name:`pt/nodejs/guide/run-nodejs-scripts-from-the-command-line.md`};function o(e,i,a,o,s,c){return r(),t(`div`,null,i[0]||=[n(`<h1 id="executar-scripts-node-js-na-linha-de-comando" tabindex="-1">Executar scripts Node.js na linha de comando <a class="header-anchor" href="#executar-scripts-node-js-na-linha-de-comando" aria-label="Permalink to “Executar scripts Node.js na linha de comando”">​</a></h1><p>A maneira usual de executar um programa Node.js é executar o comando <code>node</code> disponível globalmente (depois de instalar o Node.js) e passar o nome do arquivo que você deseja executar.</p><p>Se o arquivo principal do seu aplicativo Node.js for <code>app.js</code>, você pode chamá-lo digitando:</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">node</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> app.js</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Acima, você está explicitamente dizendo ao shell para executar seu script com <code>node</code>. Você também pode incorporar essas informações em seu arquivo JavaScript com uma linha &quot;shebang&quot;. O &quot;shebang&quot; é a primeira linha do arquivo e informa ao SO qual interpretador usar para executar o script. Abaixo está a primeira linha do JavaScript:</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#!/usr/bin/node</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Acima, estamos explicitamente fornecendo o caminho absoluto do interpretador. Nem todos os sistemas operacionais têm <code>node</code> na pasta <code>bin</code>, mas todos devem ter <code>env</code>. Você pode dizer ao SO para executar <code>env</code> com <code>node</code> como parâmetro:</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#!/usr/bin/env node</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// seu código javascript</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="para-usar-um-shebang-seu-arquivo-deve-ter-permissao-de-execucao" tabindex="-1">Para usar um shebang, seu arquivo deve ter permissão de execução. <a class="header-anchor" href="#para-usar-um-shebang-seu-arquivo-deve-ter-permissao-de-execucao" aria-label="Permalink to “Para usar um shebang, seu arquivo deve ter permissão de execução.”">​</a></h2><p>Você pode dar a <code>app.js</code> a permissão de execução executando:</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">chmod</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> u+x</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> app.js</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Ao executar o comando, certifique-se de estar no mesmo diretório que contém o arquivo <code>app.js</code>.</p><h2 id="passe-a-string-como-argumento-para-o-no-em-vez-do-caminho-do-arquivo" tabindex="-1">Passe a string como argumento para o nó em vez do caminho do arquivo <a class="header-anchor" href="#passe-a-string-como-argumento-para-o-no-em-vez-do-caminho-do-arquivo" aria-label="Permalink to “Passe a string como argumento para o nó em vez do caminho do arquivo”">​</a></h2><p>Para executar uma string como argumento, você pode usar <code>-e</code>, <code>--eval &quot;script&quot;</code>. Avalie o seguinte argumento como JavaScript. Os módulos predefinidos no REPL também podem ser usados ​​no script. No Windows, usando <code>cmd.exe</code>, uma única aspa não funcionará corretamente porque ele só reconhece aspas duplas <code>&quot;</code> para citação. No Powershell ou Git bash, ambos <code>&quot;</code> e <code>&#39;</code> são utilizáveis.</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">node</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;console.log(123)&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="reinicie-o-aplicativo-automaticamente" tabindex="-1">Reinicie o aplicativo automaticamente <a class="header-anchor" href="#reinicie-o-aplicativo-automaticamente" aria-label="Permalink to “Reinicie o aplicativo automaticamente”">​</a></h2><p>A partir do nodejs V 16, existe uma opção integrada para reiniciar automaticamente o aplicativo quando um arquivo é alterado. Isso é útil para fins de desenvolvimento. Para usar este recurso, você precisa passar a flag <code>watch</code> para o nodejs.</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">node</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --watch</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> app.js</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Assim, quando você altera o arquivo, o aplicativo é reiniciado automaticamente. Leia a documentação da flag --watch <a href="https://nodejs.org/api/cli.html#--watch" target="_blank" rel="noreferrer">/api/cli#watch</a>.</p>`,19)])}var s=e(a,[[`render`,o]]);export{i as __pageData,s as default};