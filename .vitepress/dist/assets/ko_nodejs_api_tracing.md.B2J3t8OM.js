import{__plugin_vue_export_helper_default as e,createElementBlock as t,createStaticVNode as n,openBlock as r}from"./chunks/plugin-vue_export-helper.Bts1mPc7.js";const i=JSON.parse(`{"title":"Node.js 추적 이벤트","description":"Node.js 추적 이벤트 API를 사용하여 성능 프로파일링 및 디버깅하는 방법에 대한 문서.","frontmatter":{"title":"Node.js 추적 이벤트","description":"Node.js 추적 이벤트 API를 사용하여 성능 프로파일링 및 디버깅하는 방법에 대한 문서.","head":[["meta",{"name":"og:title","content":"Node.js 추적 이벤트 | Node.js - iDoc.dev"}],["meta",{"name":"og:description","content":"Node.js 추적 이벤트 API를 사용하여 성능 프로파일링 및 디버깅하는 방법에 대한 문서."}],["meta",{"name":"twitter:title","content":"Node.js 추적 이벤트 | Node.js - iDoc.dev"}],["meta",{"name":"twitter:description","content":"Node.js 추적 이벤트 API를 사용하여 성능 프로파일링 및 디버깅하는 방법에 대한 문서."}],["link",{"rel":"canonical","href":"https://idoc.dev/ko/nodejs/api/tracing"}],["meta",{"property":"og:url","content":"https://idoc.dev/ko/nodejs/api/tracing"}]]},"headers":[],"relativePath":"ko/nodejs/api/tracing.md","filePath":"ko/nodejs/api/tracing.md","lastUpdated":1749464498000}`),a={name:`ko/nodejs/api/tracing.md`};function o(e,i,a,o,s,c){return r(),t(`div`,null,i[0]||=[n(`<h1 id="trace-events" tabindex="-1">추적 이벤트 <a class="header-anchor" href="#trace-events" aria-label="Permalink to “추적 이벤트”">​</a></h1><div class="warning custom-block"><p class="custom-block-title">[안정성: 1 - 실험적]</p><p><a href="/ko/nodejs/api/documentation#stability-index">안정성: 1</a> <a href="/ko/nodejs/api/documentation#stability-index">안정성: 1</a> - 실험적</p></div><p><strong>소스 코드:</strong> <a href="https://github.com/nodejs/node/blob/v23.5.0/lib/trace_events.js" target="_blank" rel="noreferrer">lib/trace_events.js</a></p><p><code>node:trace_events</code> 모듈은 V8, Node.js 코어, 그리고 사용자 공간 코드에서 생성된 추적 정보를 중앙 집중화하는 메커니즘을 제공합니다.</p><p>추적은 <code>--trace-event-categories</code> 명령줄 플래그를 사용하거나 <code>node:trace_events</code> 모듈을 사용하여 활성화할 수 있습니다. <code>--trace-event-categories</code> 플래그는 쉼표로 구분된 카테고리 이름 목록을 받습니다.</p><p>사용 가능한 카테고리는 다음과 같습니다:</p><ul><li><p><code>node</code>: 빈 자리 표시자입니다.</p></li><li><p><code>node.async_hooks</code>: 자세한 <a href="/ko/nodejs/api/async_hooks"><code>async_hooks</code></a> 추적 데이터 캡처를 활성화합니다. <a href="/ko/nodejs/api/async_hooks"><code>async_hooks</code></a> 이벤트는 고유한 <code>asyncId</code>와 특별한 <code>triggerId</code> <code>triggerAsyncId</code> 속성을 갖습니다.</p></li><li><p><code>node.bootstrap</code>: Node.js 부트스트랩 마일스톤 캡처를 활성화합니다.</p></li><li><p><code>node.console</code>: <code>console.time()</code> 및 <code>console.count()</code> 출력 캡처를 활성화합니다.</p></li><li><p><code>node.threadpoolwork.sync</code>: <code>blob</code>, <code>zlib</code>, <code>crypto</code> 및 <code>node_api</code>와 같은 스레드 풀 동기 작업에 대한 추적 데이터 캡처를 활성화합니다.</p></li><li><p><code>node.threadpoolwork.async</code>: <code>blob</code>, <code>zlib</code>, <code>crypto</code> 및 <code>node_api</code>와 같은 스레드 풀 비동기 작업에 대한 추적 데이터 캡처를 활성화합니다.</p></li><li><p><code>node.dns.native</code>: DNS 쿼리에 대한 추적 데이터 캡처를 활성화합니다.</p></li><li><p><code>node.net.native</code>: 네트워크에 대한 추적 데이터 캡처를 활성화합니다.</p></li><li><p><code>node.environment</code>: Node.js 환경 마일스톤 캡처를 활성화합니다.</p></li><li><p><code>node.fs.sync</code>: 파일 시스템 동기 메서드에 대한 추적 데이터 캡처를 활성화합니다.</p></li><li><p><code>node.fs_dir.sync</code>: 파일 시스템 동기 디렉터리 메서드에 대한 추적 데이터 캡처를 활성화합니다.</p></li><li><p><code>node.fs.async</code>: 파일 시스템 비동기 메서드에 대한 추적 데이터 캡처를 활성화합니다.</p></li><li><p><code>node.fs_dir.async</code>: 파일 시스템 비동기 디렉터리 메서드에 대한 추적 데이터 캡처를 활성화합니다.</p></li><li><p><code>node.perf</code>: <a href="/ko/nodejs/api/perf_hooks">Performance API</a> 측정 캡처를 활성화합니다.</p><ul><li><code>node.perf.usertiming</code>: Performance API User Timing 측정 및 마크만 캡처를 활성화합니다.</li><li><code>node.perf.timerify</code>: Performance API timerify 측정만 캡처를 활성화합니다.</li></ul></li><li><p><code>node.promises.rejections</code>: 처리되지 않은 Promise 거부 및 거부 후 처리에 대한 추적 데이터 추적 캡처를 활성화합니다.</p></li><li><p><code>node.vm.script</code>: <code>node:vm</code> 모듈의 <code>runInNewContext()</code>, <code>runInContext()</code>, 및 <code>runInThisContext()</code> 메서드에 대한 추적 데이터 캡처를 활성화합니다.</p></li><li><p><code>v8</code>: <a href="/ko/nodejs/api/v8">V8</a> 이벤트는 GC, 컴파일, 그리고 실행과 관련됩니다.</p></li><li><p><code>node.http</code>: http 요청 / 응답에 대한 추적 데이터 캡처를 활성화합니다.</p></li><li><p><code>node.module_timer</code>: CJS 모듈 로딩에 대한 추적 데이터 캡처를 활성화합니다.</p></li></ul><p>기본적으로 <code>node</code>, <code>node.async_hooks</code>, 그리고 <code>v8</code> 카테고리가 활성화됩니다.</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">node</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --trace-event-categories</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> v8,node,node.async_hooks</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> server.js</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>이전 버전의 Node.js에서는 추적 이벤트를 활성화하기 위해 <code>--trace-events-enabled</code> 플래그를 사용해야 했습니다. 이 요구 사항은 제거되었습니다. 그러나 <code>--trace-events-enabled</code> 플래그는 여전히 사용될 <em>수 있으며</em>, 기본적으로 <code>node</code>, <code>node.async_hooks</code>, 그리고 <code>v8</code> 추적 이벤트 카테고리를 활성화합니다.</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">node</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --trace-events-enabled</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 다음과 같습니다. {#is-equivalent-to}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">node</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --trace-event-categories</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> v8,node,node.async_hooks</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>또는 <code>node:trace_events</code> 모듈을 사용하여 추적 이벤트를 활성화할 수 있습니다:</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> trace_events</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;node:trace_events&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> tracing</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> trace_events.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createTracing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ categories: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;node.perf&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">tracing.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">enable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &#39;node.perf&#39; 카테고리에 대한 추적 이벤트 캡처 활성화</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 작업 수행</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">tracing.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">disable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &#39;node.perf&#39; 카테고리에 대한 추적 이벤트 캡처 비활성화</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>추적을 활성화한 상태로 Node.js를 실행하면 Chrome의 <a href="https://www.chromium.org/developers/how-tos/trace-event-profiling-tool" target="_blank" rel="noreferrer"><code>chrome://tracing</code></a> 탭에서 열 수 있는 로그 파일이 생성됩니다.</p><p>로깅 파일은 기본적으로 <code>node_trace.\${rotation}.log</code>라고 하며, <code>\${rotation}</code>은 증가하는 로그 회전 ID입니다. 파일 경로 패턴은 <code>\${rotation}</code> 및 <code>\${pid}</code>를 지원하는 템플릿 문자열을 허용하는 <code>--trace-event-file-pattern</code>으로 지정할 수 있습니다:</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">node</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --trace-event-categories</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> v8</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --trace-event-file-pattern</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;\${pid}-\${rotation}.log&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> server.js</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><code>SIGINT</code>, <code>SIGTERM</code> 또는 <code>SIGBREAK</code>와 같은 신호 이벤트 이후에 로그 파일이 올바르게 생성되도록 하려면 코드에 다음과 같은 적절한 처리기가 있는지 확인하십시오:</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">process.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;SIGINT&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> onSigint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">info</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Received SIGINT.&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  process.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">exit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">130</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 또는 OS 및 신호에 따라 해당 종료 코드</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>추적 시스템은 <code>process.hrtime()</code>에서 사용되는 것과 동일한 시간 소스를 사용합니다. 그러나 추적 이벤트 타임스탬프는 마이크로초 단위로 표현되는 반면 <code>process.hrtime()</code>은 나노초를 반환합니다.</p><p>이 모듈의 기능은 <a href="/ko/nodejs/api/worker_threads#class-worker"><code>Worker</code></a> 스레드에서는 사용할 수 없습니다.</p><h2 id="the-nodetrace_events-module" tabindex="-1"><code>node:trace_events</code> 모듈 <a class="header-anchor" href="#the-nodetrace_events-module" aria-label="Permalink to “node:trace_events 모듈”">​</a></h2><p><strong>추가된 버전: v10.0.0</strong></p><h3 id="tracing-object" tabindex="-1"><code>Tracing</code> 객체 <a class="header-anchor" href="#tracing-object" aria-label="Permalink to “Tracing 객체”">​</a></h3><p><strong>추가된 버전: v10.0.0</strong></p><p><code>Tracing</code> 객체는 특정 카테고리 집합에 대한 추적을 활성화하거나 비활성화하는 데 사용됩니다. 인스턴스는 <code>trace_events.createTracing()</code> 메서드를 사용하여 생성됩니다.</p><p>생성될 때 <code>Tracing</code> 객체는 비활성화됩니다. <code>tracing.enable()</code> 메서드를 호출하면 카테고리가 활성화된 추적 이벤트 카테고리 집합에 추가됩니다. <code>tracing.disable()</code>을 호출하면 활성화된 추적 이벤트 카테고리 집합에서 카테고리가 제거됩니다.</p><h4 id="tracingcategories" tabindex="-1"><code>tracing.categories</code> <a class="header-anchor" href="#tracingcategories" aria-label="Permalink to “tracing.categories”">​</a></h4><p><strong>추가된 버전: v10.0.0</strong></p><ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a></li></ul><p>이 <code>Tracing</code> 객체가 다루는 추적 이벤트 카테고리의 쉼표로 구분된 목록입니다.</p><h4 id="tracingdisable" tabindex="-1"><code>tracing.disable()</code> <a class="header-anchor" href="#tracingdisable" aria-label="Permalink to “tracing.disable()”">​</a></h4><p><strong>추가된 버전: v10.0.0</strong></p><p>이 <code>Tracing</code> 객체를 비활성화합니다.</p><p>다른 활성화된 <code>Tracing</code> 객체에서 다루지 <em>않고</em> <code>--trace-event-categories</code> 플래그로 지정되지 <em>않은</em> 추적 이벤트 카테고리만 비활성화됩니다.</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> trace_events</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;node:trace_events&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> t1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> trace_events.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createTracing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ categories: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;node&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;v8&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] });</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> t2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> trace_events.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createTracing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ categories: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;node.perf&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;node&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">t1.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">enable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">t2.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">enable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &#39;node,node.perf,v8&#39;을(를) 출력합니다.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(trace_events.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getEnabledCategories</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">());</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">t2.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">disable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &#39;node.perf&#39; 카테고리 방출만 비활성화합니다.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &#39;node,v8&#39;을(를) 출력합니다.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(trace_events.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getEnabledCategories</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">());</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h4 id="tracingenable" tabindex="-1"><code>tracing.enable()</code> <a class="header-anchor" href="#tracingenable" aria-label="Permalink to “tracing.enable()”">​</a></h4><p><strong>추가된 버전: v10.0.0</strong></p><p><code>Tracing</code> 객체가 다루는 카테고리 집합에 대해 이 <code>Tracing</code> 객체를 활성화합니다.</p><h4 id="tracingenabled" tabindex="-1"><code>tracing.enabled</code> <a class="header-anchor" href="#tracingenabled" aria-label="Permalink to “tracing.enabled”">​</a></h4><p><strong>추가된 버전: v10.0.0</strong></p><ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type" target="_blank" rel="noreferrer">&lt;boolean&gt;</a> <code>Tracing</code> 객체가 활성화된 경우에만 <code>true</code>입니다.</li></ul><h3 id="trace_eventscreatetracingoptions" tabindex="-1"><code>trace_events.createTracing(options)</code> <a class="header-anchor" href="#trace_eventscreatetracingoptions" aria-label="Permalink to “trace_events.createTracing(options)”">​</a></h3><p><strong>추가된 버전: v10.0.0</strong></p><ul><li><p><code>options</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object&gt;</a></p><ul><li><code>categories</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string[]&gt;</a> 추적 카테고리 이름의 배열입니다. 배열에 포함된 값은 가능한 경우 문자열로 강제 변환됩니다. 값을 강제 변환할 수 없으면 오류가 발생합니다.</li></ul></li><li><p>반환: <a href="/ko/nodejs/api/tracing#tracing-object">&lt;Tracing&gt;</a>.</p></li></ul><p>주어진 <code>categories</code> 집합에 대한 <code>Tracing</code> 객체를 생성하고 반환합니다.</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> trace_events</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;node:trace_events&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> categories</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;node.perf&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;node.async_hooks&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">];</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> tracing</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> trace_events.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createTracing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ categories });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">tracing.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">enable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// do stuff</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">tracing.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">disable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="trace_eventsgetenabledcategories" tabindex="-1"><code>trace_events.getEnabledCategories()</code> <a class="header-anchor" href="#trace_eventsgetenabledcategories" aria-label="Permalink to “trace_events.getEnabledCategories()”">​</a></h3><p><strong>Added in: v10.0.0</strong></p><ul><li>반환: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a></li></ul><p>현재 활성화된 모든 추적 이벤트 범주의 쉼표로 구분된 목록을 반환합니다. 현재 활성화된 추적 이벤트 범주 집합은 현재 활성화된 모든 <code>Tracing</code> 객체의 <em>합집합</em>과 <code>--trace-event-categories</code> 플래그를 사용하여 활성화된 모든 범주에 의해 결정됩니다.</p><p>아래의 <code>test.js</code> 파일이 주어졌을 때, <code>node --trace-event-categories node.perf test.js</code> 명령은 콘솔에 <code>&#39;node.async_hooks,node.perf&#39;</code>를 출력합니다.</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> trace_events</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;node:trace_events&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> t1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> trace_events.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createTracing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ categories: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;node.async_hooks&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] });</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> t2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> trace_events.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createTracing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ categories: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;node.perf&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] });</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> t3</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> trace_events.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createTracing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ categories: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;v8&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] });</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">t1.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">enable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">t2.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">enable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(trace_events.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getEnabledCategories</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">());</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h2 id="examples" tabindex="-1">예시 <a class="header-anchor" href="#examples" aria-label="Permalink to “예시”">​</a></h2><h3 id="collect-trace-events-data-by-inspector" tabindex="-1">Inspector를 통해 추적 이벤트 데이터 수집 <a class="header-anchor" href="#collect-trace-events-data-by-inspector" aria-label="Permalink to “Inspector를 통해 추적 이벤트 데이터 수집”">​</a></h3><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;use strict&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Session</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;node:inspector&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> session</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Session</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">session.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">connect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> post</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">message</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">data</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Promise</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">resolve</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">reject</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    session.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">post</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(message, data, (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">err</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">result</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (err)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        reject</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Error</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">JSON</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">stringify</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(err)));</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      else</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        resolve</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(result);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> collect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> data</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [];</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  session.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;NodeTracing.dataCollected&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">chunk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> data.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">push</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(chunk));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  session.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;NodeTracing.tracingComplete&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // done</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  });</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> traceConfig</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { includedCategories: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;v8&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] };</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  await</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> post</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;NodeTracing.start&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, { traceConfig });</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // do something</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  setTimeout</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    post</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;NodeTracing.stop&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">then</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      session.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">disconnect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(data);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">collect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br></div></div>`,55)])}var s=e(a,[[`render`,o]]);export{i as __pageData,s as default};