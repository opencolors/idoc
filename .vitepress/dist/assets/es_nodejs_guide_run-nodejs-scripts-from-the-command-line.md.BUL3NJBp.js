import{__plugin_vue_export_helper_default as e,createElementBlock as t,createStaticVNode as n,openBlock as r}from"./chunks/plugin-vue_export-helper.Bts1mPc7.js";const i=JSON.parse(`{"title":"Ejecutar scripts de Node.js desde la línea de comandos","description":"Aprende a ejecutar programas de Node.js desde la línea de comandos, incluyendo el uso del comando node, líneas shebang, permisos de ejecución, pasar cadenas como argumentos y reiniciar automáticamente la aplicación.","frontmatter":{"title":"Ejecutar scripts de Node.js desde la línea de comandos","description":"Aprende a ejecutar programas de Node.js desde la línea de comandos, incluyendo el uso del comando node, líneas shebang, permisos de ejecución, pasar cadenas como argumentos y reiniciar automáticamente la aplicación.","head":[["meta",{"name":"og:title","content":"Ejecutar scripts de Node.js desde la línea de comandos | Node.js - iDoc.dev"}],["meta",{"name":"og:description","content":"Aprende a ejecutar programas de Node.js desde la línea de comandos, incluyendo el uso del comando node, líneas shebang, permisos de ejecución, pasar cadenas como argumentos y reiniciar automáticamente la aplicación."}],["meta",{"name":"twitter:title","content":"Ejecutar scripts de Node.js desde la línea de comandos | Node.js - iDoc.dev"}],["meta",{"name":"twitter:description","content":"Aprende a ejecutar programas de Node.js desde la línea de comandos, incluyendo el uso del comando node, líneas shebang, permisos de ejecución, pasar cadenas como argumentos y reiniciar automáticamente la aplicación."}],["link",{"rel":"canonical","href":"https://idoc.dev/es/nodejs/guide/run-nodejs-scripts-from-the-command-line"}],["meta",{"property":"og:url","content":"https://idoc.dev/es/nodejs/guide/run-nodejs-scripts-from-the-command-line"}]]},"headers":[],"relativePath":"es/nodejs/guide/run-nodejs-scripts-from-the-command-line.md","filePath":"es/nodejs/guide/run-nodejs-scripts-from-the-command-line.md","lastUpdated":null}`),a={name:`es/nodejs/guide/run-nodejs-scripts-from-the-command-line.md`};function o(e,i,a,o,s,c){return r(),t(`div`,null,i[0]||=[n(`<h1 id="ejecutar-scripts-de-node-js-desde-la-linea-de-comandos" tabindex="-1">Ejecutar scripts de Node.js desde la línea de comandos <a class="header-anchor" href="#ejecutar-scripts-de-node-js-desde-la-linea-de-comandos" aria-label="Permalink to “Ejecutar scripts de Node.js desde la línea de comandos”">​</a></h1><p>La forma habitual de ejecutar un programa de Node.js es ejecutar el comando <code>node</code> disponible globalmente (una vez que instales Node.js) y pasar el nombre del archivo que deseas ejecutar.</p><p>Si tu archivo principal de aplicación Node.js es <code>app.js</code>, puedes llamarlo escribiendo:</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">node</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> app.js</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Arriba, estás indicando explícitamente al shell que ejecute tu script con <code>node</code>. También puedes incrustar esta información en tu archivo JavaScript con una línea &quot;shebang&quot;. El &quot;shebang&quot; es la primera línea del archivo e indica al sistema operativo qué intérprete usar para ejecutar el script. A continuación, se muestra la primera línea de JavaScript:</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#!/usr/bin/node</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Arriba, estamos dando explícitamente la ruta absoluta del intérprete. No todos los sistemas operativos tienen <code>node</code> en la carpeta <code>bin</code>, pero todos deberían tener <code>env</code>. Puedes indicarle al sistema operativo que ejecute <code>env</code> con <code>node</code> como parámetro:</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#!/usr/bin/env node</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// your javascript code</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="para-usar-un-shebang-tu-archivo-debe-tener-permiso-de-ejecucion" tabindex="-1">Para usar un shebang, tu archivo debe tener permiso de ejecución. <a class="header-anchor" href="#para-usar-un-shebang-tu-archivo-debe-tener-permiso-de-ejecucion" aria-label="Permalink to “Para usar un shebang, tu archivo debe tener permiso de ejecución.”">​</a></h2><p>Puedes dar a <code>app.js</code> el permiso de ejecución ejecutando:</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">chmod</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> u+x</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> app.js</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Mientras ejecutas el comando, asegúrate de estar en el mismo directorio que contiene el archivo <code>app.js</code>.</p><h2 id="pasar-una-cadena-como-argumento-a-node-en-lugar-de-la-ruta-del-archivo" tabindex="-1">Pasar una cadena como argumento a node en lugar de la ruta del archivo <a class="header-anchor" href="#pasar-una-cadena-como-argumento-a-node-en-lugar-de-la-ruta-del-archivo" aria-label="Permalink to “Pasar una cadena como argumento a node en lugar de la ruta del archivo”">​</a></h2><p>Para ejecutar una cadena como argumento, puedes usar <code>-e</code>, <code>--eval &quot;script&quot;</code>. Evalúa el siguiente argumento como JavaScript. Los módulos que están predefinidos en el REPL también se pueden usar en el script. En Windows, usando <code>cmd.exe</code>, una comilla simple no funcionará correctamente porque solo reconoce las comillas dobles <code>&quot;</code> para citar. En Powershell o Git bash, tanto <code>&quot;</code> como <code>&#39;</code> son utilizables.</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">node</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;console.log(123)&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="reiniciar-la-aplicacion-automaticamente" tabindex="-1">Reiniciar la aplicación automáticamente <a class="header-anchor" href="#reiniciar-la-aplicacion-automaticamente" aria-label="Permalink to “Reiniciar la aplicación automáticamente”">​</a></h2><p>A partir de nodejs V 16, hay una opción integrada para reiniciar automáticamente la aplicación cuando un archivo cambia. Esto es útil para fines de desarrollo. Para usar esta función, debes pasar el indicador <code>watch</code> a nodejs.</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">node</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --watch</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> app.js</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Entonces, cuando cambies el archivo, la aplicación se reiniciará automáticamente. Lee la documentación del indicador --watch <a href="https://nodejs.org/api/cli.html#--watch" target="_blank" rel="noreferrer">/api/cli#watch</a>.</p>`,19)])}var s=e(a,[[`render`,o]]);export{i as __pageData,s as default};