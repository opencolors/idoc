import{__plugin_vue_export_helper_default as e,createElementBlock as t,createStaticVNode as n,openBlock as r}from"./chunks/plugin-vue_export-helper.Bts1mPc7.js";const i=JSON.parse(`{"title":"Живая отладка в Node.js","description":"Узнайте, как проводить живую отладку процесса Node.js, чтобы выявить и исправить проблемы с логикой и корректностью приложения.","frontmatter":{"title":"Живая отладка в Node.js","description":"Узнайте, как проводить живую отладку процесса Node.js, чтобы выявить и исправить проблемы с логикой и корректностью приложения.","head":[["meta",{"name":"og:title","content":"Живая отладка в Node.js | Node.js - iDoc.dev"}],["meta",{"name":"og:description","content":"Узнайте, как проводить живую отладку процесса Node.js, чтобы выявить и исправить проблемы с логикой и корректностью приложения."}],["meta",{"name":"twitter:title","content":"Живая отладка в Node.js | Node.js - iDoc.dev"}],["meta",{"name":"twitter:description","content":"Узнайте, как проводить живую отладку процесса Node.js, чтобы выявить и исправить проблемы с логикой и корректностью приложения."}],["link",{"rel":"canonical","href":"https://idoc.dev/ru/nodejs/guide/live-debugging"}],["meta",{"property":"og:url","content":"https://idoc.dev/ru/nodejs/guide/live-debugging"}]]},"headers":[],"relativePath":"ru/nodejs/guide/live-debugging.md","filePath":"ru/nodejs/guide/live-debugging.md","lastUpdated":null}`),a={name:`ru/nodejs/guide/live-debugging.md`};function o(e,i,a,o,s,c){return r(),t(`div`,null,i[0]||=[n(`<h1 id="живая-отладка" tabindex="-1">Живая отладка <a class="header-anchor" href="#живая-отладка" aria-label="Permalink to “Живая отладка”">​</a></h1><p>В этом документе вы узнаете, как отлаживать в режиме реального времени процесс Node.js.</p><h2 id="мое-приложение-работает-не-так-как-ожидалось" tabindex="-1">Мое приложение работает не так, как ожидалось <a class="header-anchor" href="#мое-приложение-работает-не-так-как-ожидалось" aria-label="Permalink to “Мое приложение работает не так, как ожидалось”">​</a></h2><h3 id="симптомы" tabindex="-1">Симптомы <a class="header-anchor" href="#симптомы" aria-label="Permalink to “Симптомы”">​</a></h3><p>Пользователь может заметить, что приложение не предоставляет ожидаемый вывод для определенных входных данных, например, HTTP-сервер возвращает JSON-ответ, в котором определенные поля пусты. В процессе может пойти не так много вещей, но в этом примере использования мы в основном сосредоточены на логике приложения и ее корректности.</p><h3 id="отладка" tabindex="-1">Отладка <a class="header-anchor" href="#отладка" aria-label="Permalink to “Отладка”">​</a></h3><p>В этом случае пользователь хотел бы понять путь кода, который наше приложение выполняет для определенного триггера, например, входящего HTTP-запроса. Он также может захотеть пошагово пройти код и контролировать выполнение, а также проверить, какие значения хранят переменные в памяти. Для этой цели мы можем использовать флаг <code>--inspect</code> при запуске приложения. Документацию по отладке можно найти <a href="/ru/nodejs/guide/debugging-nodejs">здесь</a>.</p>`,7)])}var s=e(a,[[`render`,o]]);export{i as __pageData,s as default};