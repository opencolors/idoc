import{__plugin_vue_export_helper_default as e,createElementBlock as t,createStaticVNode as n,openBlock as r}from"./chunks/plugin-vue_export-helper.Bts1mPc7.js";const i=JSON.parse(`{"title":"Comment lire les variables d'environnement dans Node.js","description":"Découvrez comment accéder aux variables d'environnement dans Node.js en utilisant la propriété process.env et les fichiers .env.","frontmatter":{"title":"Comment lire les variables d'environnement dans Node.js","description":"Découvrez comment accéder aux variables d'environnement dans Node.js en utilisant la propriété process.env et les fichiers .env.","head":[["meta",{"name":"og:title","content":"Comment lire les variables d'environnement dans Node.js | Node.js - iDoc.dev"}],["meta",{"name":"og:description","content":"Découvrez comment accéder aux variables d'environnement dans Node.js en utilisant la propriété process.env et les fichiers .env."}],["meta",{"name":"twitter:title","content":"Comment lire les variables d'environnement dans Node.js | Node.js - iDoc.dev"}],["meta",{"name":"twitter:description","content":"Découvrez comment accéder aux variables d'environnement dans Node.js en utilisant la propriété process.env et les fichiers .env."}],["link",{"rel":"canonical","href":"https://idoc.dev/fr/nodejs/guide/how-to-read-environment-variables-from-nodejs"}],["meta",{"property":"og:url","content":"https://idoc.dev/fr/nodejs/guide/how-to-read-environment-variables-from-nodejs"}]]},"headers":[],"relativePath":"fr/nodejs/guide/how-to-read-environment-variables-from-nodejs.md","filePath":"fr/nodejs/guide/how-to-read-environment-variables-from-nodejs.md","lastUpdated":null}`),a={name:`fr/nodejs/guide/how-to-read-environment-variables-from-nodejs.md`};function o(e,i,a,o,s,c){return r(),t(`div`,null,i[0]||=[n(`<h1 id="comment-lire-les-variables-d-environnement-depuis-node-js" tabindex="-1">Comment lire les variables d&#39;environnement depuis Node.js <a class="header-anchor" href="#comment-lire-les-variables-d-environnement-depuis-node-js" aria-label="Permalink to “Comment lire les variables d&#39;environnement depuis Node.js”">​</a></h1><p>Le module central <code>process</code> de Node.js fournit la propriété <code>env</code> qui héberge toutes les variables d&#39;environnement qui ont été définies au moment où le processus a été démarré.</p><p>Le code ci-dessous exécute <code>app.js</code> et définit <code>USER_ID</code> et <code>USER_KEY</code>.</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">USER_ID</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">239482</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> USER_KEY</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">foobar</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> node</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> app.js</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Cela passera l&#39;utilisateur <code>USER_ID</code> comme 239482 et la <code>USER_KEY</code> comme foobar. Ceci est approprié pour les tests, cependant pour la production, vous configurerez probablement des scripts bash pour exporter les variables.</p><div class="tip custom-block"><p class="custom-block-title">NOTE</p><p><code>process</code> ne nécessite pas de <code>&quot;require&quot;</code>, il est automatiquement disponible.</p></div><p>Voici un exemple qui accède aux variables d&#39;environnement <code>USER_ID</code> et <code>USER_KEY</code>, que nous avons définies dans le code ci-dessus.</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">process.env.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">USER_ID</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &quot;239482</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">process.env.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">USER_KEY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &quot;foobar</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>De la même manière, vous pouvez accéder à n&#39;importe quelle variable d&#39;environnement personnalisée que vous définissez. Node.js 20 a introduit un <a href="/fr/nodejs/api/cli#env-file-config">support expérimental pour les fichiers .env</a>.</p><p>Maintenant, vous pouvez utiliser l&#39;option <code>--env-file</code> pour spécifier un fichier d&#39;environnement lors de l&#39;exécution de votre application Node.js. Voici un exemple de fichier <code>.env</code> et comment accéder à ses variables en utilisant <code>process.env</code>.</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.env</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> file</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">PORT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">3000</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>Dans votre fichier js</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">process.env.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PORT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 3000</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Exécutez le fichier <code>app.js</code> avec les variables d&#39;environnement définies dans le fichier <code>.env</code>.</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">node </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">env</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">file</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.env app.js</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Cette commande charge toutes les variables d&#39;environnement du fichier <code>.env</code>, les rendant disponibles à l&#39;application sur <code>process.env</code>. De plus, vous pouvez passer plusieurs arguments --env-file. Les fichiers suivants remplacent les variables préexistantes définies dans les fichiers précédents.</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">node</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --env-file=.env</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --env-file=.development.env</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> app.js</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="tip custom-block"><p class="custom-block-title">NOTE</p><p>si la même variable est définie dans l&#39;environnement et dans le fichier, la valeur de l&#39;environnement est prioritaire.</p></div>`,18)])}var s=e(a,[[`render`,o]]);export{i as __pageData,s as default};