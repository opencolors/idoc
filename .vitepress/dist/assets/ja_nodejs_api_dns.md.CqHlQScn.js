import{__plugin_vue_export_helper_default as e,createElementBlock as t,createStaticVNode as n,openBlock as r}from"./chunks/plugin-vue_export-helper.Bts1mPc7.js";const i=JSON.parse(`{"title":"Node.js ドキュメント - DNS","description":"Node.jsのこのドキュメントセクションでは、非同期ネットワーク名解決機能を提供するDNS（ドメインネームシステム）モジュールについて説明しています。ドメイン名をIPアドレスに解決する方法、逆引き、およびDNSレコードのクエリを含みます。","frontmatter":{"title":"Node.js ドキュメント - DNS","description":"Node.jsのこのドキュメントセクションでは、非同期ネットワーク名解決機能を提供するDNS（ドメインネームシステム）モジュールについて説明しています。ドメイン名をIPアドレスに解決する方法、逆引き、およびDNSレコードのクエリを含みます。","head":[["meta",{"name":"og:title","content":"Node.js ドキュメント - DNS | Node.js - iDoc.dev"}],["meta",{"name":"og:description","content":"Node.jsのこのドキュメントセクションでは、非同期ネットワーク名解決機能を提供するDNS（ドメインネームシステム）モジュールについて説明しています。ドメイン名をIPアドレスに解決する方法、逆引き、およびDNSレコードのクエリを含みます。"}],["meta",{"name":"twitter:title","content":"Node.js ドキュメント - DNS | Node.js - iDoc.dev"}],["meta",{"name":"twitter:description","content":"Node.jsのこのドキュメントセクションでは、非同期ネットワーク名解決機能を提供するDNS（ドメインネームシステム）モジュールについて説明しています。ドメイン名をIPアドレスに解決する方法、逆引き、およびDNSレコードのクエリを含みます。"}],["link",{"rel":"canonical","href":"https://idoc.dev/ja/nodejs/api/dns"}],["meta",{"property":"og:url","content":"https://idoc.dev/ja/nodejs/api/dns"}]]},"headers":[],"relativePath":"ja/nodejs/api/dns.md","filePath":"ja/nodejs/api/dns.md","lastUpdated":null}`),a={name:`ja/nodejs/api/dns.md`};function o(e,i,a,o,s,c){return r(),t(`div`,null,i[0]||=[n(`<h1 id="dns" tabindex="-1">DNS <a class="header-anchor" href="#dns" aria-label="Permalink to “DNS”">​</a></h1><div class="tip custom-block"><p class="custom-block-title">[Stable: 2 - 安定版]</p><p><a href="/ja/nodejs/api/documentation#stability-index">Stable: 2</a> <a href="/ja/nodejs/api/documentation#stability-index">Stability: 2</a> - 安定版</p></div><p><strong>ソースコード:</strong> <a href="https://github.com/nodejs/node/blob/v23.5.0/lib/dns.js" target="_blank" rel="noreferrer">lib/dns.js</a></p><p><code>node:dns</code>モジュールは名前解決を可能にします。例えば、ホスト名のIPアドレスを調べるために使用します。</p><p><a href="https://en.wikipedia.org/wiki/Domain_Name_System" target="_blank" rel="noreferrer">ドメインネームシステム (DNS)</a> の名前が付けられていますが、名前解決に常に DNS プロトコルを使用するとは限りません。<a href="/ja/nodejs/api/dns#dnslookuphostname-options-callback"><code>dns.lookup()</code></a> は、オペレーティングシステムの機能を使用して名前解決を実行します。ネットワーク通信を実行する必要がない場合があります。同じシステムの他のアプリケーションと同様に名前解決を実行するには、<a href="/ja/nodejs/api/dns#dnslookuphostname-options-callback"><code>dns.lookup()</code></a> を使用します。</p><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-17" id="tab-18" checked><label data-title="ESM" for="tab-18">ESM</label><input type="radio" name="group-17" id="tab-19"><label data-title="CJS" for="tab-19">CJS</label></div><div class="blocks"><div class="language-js active line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> dns </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;node:dns&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dns.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lookup</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;example.org&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">err</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">address</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">family</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;address: %j family: IPv%s&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, address, family);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// address: &quot;2606:2800:21f:cb07:6820:80da:af6b:8b2c&quot; family: IPv6</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> dns</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;node:dns&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dns.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lookup</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;example.org&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">err</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">address</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">family</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;address: %j family: IPv%s&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, address, family);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// address: &quot;2606:2800:21f:cb07:6820:80da:af6b:8b2c&quot; family: IPv6</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div></div></div><p><code>node:dns</code>モジュールの他のすべての関数は、名前解決を実行するために実際のDNSサーバーに接続します。それらは常にネットワークを使用してDNSクエリを実行します。これらの関数は、<a href="/ja/nodejs/api/dns#dnslookuphostname-options-callback"><code>dns.lookup()</code></a> (例: <code>/etc/hosts</code>)で使用されるのと同じ構成ファイルセットを使用しません。常にDNSクエリを実行し、他の名前解決機能をバイパスするには、これらの関数を使用します。</p><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-24" id="tab-25" checked><label data-title="ESM" for="tab-25">ESM</label><input type="radio" name="group-24" id="tab-26"><label data-title="CJS" for="tab-26">CJS</label></div><div class="blocks"><div class="language-js active line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> dns </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;node:dns&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dns.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">resolve4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;archive.org&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">err</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">addresses</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (err) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">throw</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> err;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`addresses: \${</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">JSON</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">stringify</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">addresses</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">)</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  addresses.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">forEach</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">a</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    dns.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">reverse</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(a, (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">err</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">hostnames</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (err) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        throw</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> err;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`reverse for \${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">a</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}: \${</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">JSON</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">stringify</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">hostnames</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">)</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> dns</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;node:dns&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dns.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">resolve4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;archive.org&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">err</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">addresses</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (err) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">throw</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> err;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`addresses: \${</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">JSON</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">stringify</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">addresses</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">)</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  addresses.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">forEach</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">a</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    dns.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">reverse</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(a, (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">err</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">hostnames</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (err) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        throw</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> err;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`reverse for \${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">a</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}: \${</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">JSON</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">stringify</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">hostnames</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">)</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div></div></div><p>詳細については、<a href="/ja/nodejs/api/dns#implementation-considerations">実装に関する考慮事項のセクション</a>を参照してください。</p><h2 id="class-dnsresolver" tabindex="-1">クラス: <code>dns.Resolver</code> <a class="header-anchor" href="#class-dnsresolver" aria-label="Permalink to “クラス: dns.Resolver”">​</a></h2><p><strong>追加: v8.3.0</strong></p><p>DNSリクエストのための独立したリゾルバー。</p><p>新しいリゾルバーを作成すると、デフォルトのサーバー設定が使用されます。<a href="/ja/nodejs/api/dns#dnssetserversservers"><code>resolver.setServers()</code></a> を使用してリゾルバーに使用するサーバーを設定しても、他のリゾルバーには影響しません。</p><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-43" id="tab-44" checked><label data-title="ESM" for="tab-44">ESM</label><input type="radio" name="group-43" id="tab-45"><label data-title="CJS" for="tab-45">CJS</label></div><div class="blocks"><div class="language-js active line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { Resolver } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;node:dns&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> resolver</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Resolver</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">resolver.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setServers</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;4.4.4.4&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// このリクエストは、グローバル設定とは独立して、4.4.4.4のサーバーを使用します。</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">resolver.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">resolve4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;example.org&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">err</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">addresses</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Resolver</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;node:dns&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> resolver</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Resolver</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">resolver.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setServers</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;4.4.4.4&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// このリクエストは、グローバル設定とは独立して、4.4.4.4のサーバーを使用します。</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">resolver.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">resolve4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;example.org&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">err</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">addresses</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div></div></div><p><code>node:dns</code> モジュールの以下のメソッドが利用可能です。</p><ul><li><a href="/ja/nodejs/api/dns#dnsgetservers"><code>resolver.getServers()</code></a></li><li><a href="/ja/nodejs/api/dns#dnsresolvehostname-rrtype-callback"><code>resolver.resolve()</code></a></li><li><a href="/ja/nodejs/api/dns#dnsresolve4hostname-options-callback"><code>resolver.resolve4()</code></a></li><li><a href="/ja/nodejs/api/dns#dnsresolve6hostname-options-callback"><code>resolver.resolve6()</code></a></li><li><a href="/ja/nodejs/api/dns#dnsresolveanyhostname-callback"><code>resolver.resolveAny()</code></a></li><li><a href="/ja/nodejs/api/dns#dnsresolvecaahostname-callback"><code>resolver.resolveCaa()</code></a></li><li><a href="/ja/nodejs/api/dns#dnsresolvecnamehostname-callback"><code>resolver.resolveCname()</code></a></li><li><a href="/ja/nodejs/api/dns#dnsresolvemxhostname-callback"><code>resolver.resolveMx()</code></a></li><li><a href="/ja/nodejs/api/dns#dnsresolvenaptrhostname-callback"><code>resolver.resolveNaptr()</code></a></li><li><a href="/ja/nodejs/api/dns#dnsresolvenshostname-callback"><code>resolver.resolveNs()</code></a></li><li><a href="/ja/nodejs/api/dns#dnsresolveptrhostname-callback"><code>resolver.resolvePtr()</code></a></li><li><a href="/ja/nodejs/api/dns#dnsresolvesoahostname-callback"><code>resolver.resolveSoa()</code></a></li><li><a href="/ja/nodejs/api/dns#dnsresolvesrvhostname-callback"><code>resolver.resolveSrv()</code></a></li><li><a href="/ja/nodejs/api/dns#dnsresolvetxthostname-callback"><code>resolver.resolveTxt()</code></a></li><li><a href="/ja/nodejs/api/dns#dnsreverseip-callback"><code>resolver.reverse()</code></a></li><li><a href="/ja/nodejs/api/dns#dnssetserversservers"><code>resolver.setServers()</code></a></li></ul><h3 id="resolveroptions" tabindex="-1"><code>Resolver([options])</code> <a class="header-anchor" href="#resolveroptions" aria-label="Permalink to “Resolver([options])”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[履歴]</p><table tabindex="0"><thead><tr><th>バージョン</th><th>変更点</th></tr></thead><tbody><tr><td>v16.7.0, v14.18.0</td><td><code>options</code> オブジェクトで <code>tries</code> オプションを受け入れるようになりました。</td></tr><tr><td>v12.18.3</td><td>コンストラクタで <code>options</code> オブジェクトを受け入れるようになりました。唯一サポートされるオプションは <code>timeout</code> です。</td></tr><tr><td>v8.3.0</td><td>追加: v8.3.0</td></tr></tbody></table></div><p>新しいリゾルバーを作成します。</p><ul><li><code>options</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object&gt;</a><ul><li><code>timeout</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type" target="_blank" rel="noreferrer">&lt;integer&gt;</a> クエリのタイムアウト（ミリ秒単位）。デフォルトのタイムアウトを使用する場合は <code>-1</code>。</li><li><code>tries</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type" target="_blank" rel="noreferrer">&lt;integer&gt;</a> リゾルバーが各ネームサーバーへの接続を試行する回数。あきらめるまでの回数。<strong>デフォルト:</strong> <code>4</code></li></ul></li></ul><h3 id="resolvercancel" tabindex="-1"><code>resolver.cancel()</code> <a class="header-anchor" href="#resolvercancel" aria-label="Permalink to “resolver.cancel()”">​</a></h3><p><strong>追加:</strong> v8.3.0</p><p>このリゾルバーによって行われたすべての未解決のDNSクエリをキャンセルします。対応するコールバックは、コード<code>ECANCELLED</code>のエラーで呼び出されます。</p><h3 id="resolversetlocaladdressipv4-ipv6" tabindex="-1"><code>resolver.setLocalAddress([ipv4][, ipv6])</code> <a class="header-anchor" href="#resolversetlocaladdressipv4-ipv6" aria-label="Permalink to “resolver.setLocalAddress([ipv4][, ipv6])”">​</a></h3><p><strong>追加:</strong> v15.1.0, v14.17.0</p><ul><li><code>ipv4</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> IPv4アドレスの文字列表現。<strong>デフォルト:</strong> <code>&#39;0.0.0.0&#39;</code></li><li><code>ipv6</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> IPv6アドレスの文字列表現。<strong>デフォルト:</strong> <code>&#39;::0&#39;</code></li></ul><p>リゾルバーインスタンスは、指定されたIPアドレスからリクエストを送信します。これにより、プログラムは、マルチホームシステムで使用する場合にアウトバウンドインターフェースを指定できます。</p><p>v4またはv6アドレスが指定されていない場合、デフォルトに設定され、オペレーティングシステムがローカルアドレスを自動的に選択します。</p><p>リゾルバーは、IPv4 DNSサーバーにリクエストを行う場合はv4ローカルアドレスを使用し、IPv6 DNSサーバーにリクエストを行う場合はv6ローカルアドレスを使用します。解決リクエストの<code>rrtype</code>は、使用されるローカルアドレスに影響を与えません。</p><h2 id="dnsgetservers" tabindex="-1"><code>dns.getServers()</code> <a class="header-anchor" href="#dnsgetservers" aria-label="Permalink to “dns.getServers()”">​</a></h2><p><strong>追加:</strong> v0.11.3</p><ul><li>戻り値: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string[]&gt;</a></li></ul><p>現在DNS解決用に設定されているIPアドレス文字列の配列を、<a href="https://tools.ietf.org/html/rfc5952#section-6" target="_blank" rel="noreferrer">RFC 5952</a>に従ってフォーマットして返します。文字列には、カスタムポートが使用されている場合、ポートセクションが含まれます。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &#39;8.8.8.8&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &#39;2001:4860:4860::8888&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &#39;8.8.8.8:1053&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &#39;[2001:4860:4860::8888]:1053&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="dnslookuphostname-options-callback" tabindex="-1"><code>dns.lookup(hostname[, options], callback)</code> <a class="header-anchor" href="#dnslookuphostname-options-callback" aria-label="Permalink to “dns.lookup(hostname[, options], callback)”">​</a></h2><div class="info custom-block"><p class="custom-block-title">[履歴]</p><table tabindex="0"><thead><tr><th>バージョン</th><th>変更点</th></tr></thead><tbody><tr><td>v22.1.0, v20.13.0</td><td><code>verbatim</code>オプションは非推奨となり、新しい<code>order</code>オプションが推奨されるようになりました。</td></tr><tr><td>v18.4.0</td><td><code>node:net</code>との互換性のため、オプションオブジェクトを渡す場合、<code>family</code>オプションは文字列<code>&#39;IPv4&#39;</code>または文字列<code>&#39;IPv6&#39;</code>にすることができます。</td></tr><tr><td>v18.0.0</td><td>無効なコールバックを<code>callback</code>引数に渡すと、<code>ERR_INVALID_CALLBACK</code>ではなく<code>ERR_INVALID_ARG_TYPE</code>がスローされるようになりました。</td></tr><tr><td>v17.0.0</td><td><code>verbatim</code>オプションのデフォルト値が<code>true</code>になりました。</td></tr><tr><td>v8.5.0</td><td><code>verbatim</code>オプションがサポートされるようになりました。</td></tr><tr><td>v1.2.0</td><td><code>all</code>オプションがサポートされるようになりました。</td></tr><tr><td>v0.1.90</td><td>追加: v0.1.90</td></tr></tbody></table></div><ul><li><p><code>hostname</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a></p></li><li><p><code>options</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type" target="_blank" rel="noreferrer">&lt;integer&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object&gt;</a></p><ul><li><code>family</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type" target="_blank" rel="noreferrer">&lt;integer&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> レコードファミリー。<code>4</code>、<code>6</code>、または<code>0</code>である必要があります。下位互換性の理由から、<code>&#39;IPv4&#39;</code>および<code>&#39;IPv6&#39;</code>はそれぞれ<code>4</code>および<code>6</code>として解釈されます。値<code>0</code>は、IPv4またはIPv6アドレスのいずれかが返されることを示します。値<code>0</code>が<code>{ all: true }</code>（下記参照）とともに使用される場合、システムのDNSリゾルバーに応じて、IPv4アドレスとIPv6アドレスの一方または両方が返されます。<strong>デフォルト:</strong> <code>0</code>。</li><li><code>hints</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type" target="_blank" rel="noreferrer">&lt;number&gt;</a> 1つ以上の<a href="/ja/nodejs/api/dns#supported-getaddrinfo-flags">サポートされている<code>getaddrinfo</code>フラグ</a>。複数のフラグは、それらの値をビット単位の<code>OR</code>で渡すことができます。</li><li><code>all</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type" target="_blank" rel="noreferrer">&lt;boolean&gt;</a> <code>true</code>の場合、コールバックは解決されたすべてのアドレスを配列で返します。それ以外の場合は、単一のアドレスを返します。<strong>デフォルト:</strong> <code>false</code>。</li><li><code>order</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> <code>verbatim</code>の場合、解決されたアドレスはソートされずに返されます。<code>ipv4first</code>の場合、解決されたアドレスはIPv6アドレスの前にIPv4アドレスを配置するようにソートされます。<code>ipv6first</code>の場合、解決されたアドレスはIPv4アドレスの前にIPv6アドレスを配置するようにソートされます。<strong>デフォルト:</strong> <code>verbatim</code>（アドレスは並べ替えられません）。デフォルト値は、<a href="/ja/nodejs/api/dns#dnssetdefaultresultorderorder"><code>dns.setDefaultResultOrder()</code></a>または<a href="/ja/nodejs/api/cli#dns-result-orderorder"><code>--dns-result-order</code></a>を使用して構成できます。</li><li><code>verbatim</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type" target="_blank" rel="noreferrer">&lt;boolean&gt;</a> <code>true</code>の場合、コールバックはDNSリゾルバーが返した順序でIPv4アドレスとIPv6アドレスを受信します。<code>false</code>の場合、IPv4アドレスはIPv6アドレスの前に配置されます。このオプションは<code>order</code>に移行し非推奨となります。両方が指定されている場合、<code>order</code>が優先されます。新しいコードでは、<code>order</code>のみを使用する必要があります。<strong>デフォルト:</strong> <code>true</code>（アドレスは並べ替えられません）。デフォルト値は、<a href="/ja/nodejs/api/dns#dnssetdefaultresultorderorder"><code>dns.setDefaultResultOrder()</code></a>または<a href="/ja/nodejs/api/cli#dns-result-orderorder"><code>--dns-result-order</code></a>を使用して構成できます。</li></ul></li><li><p><code>callback</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function" target="_blank" rel="noreferrer">&lt;Function&gt;</a></p><ul><li><code>err</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error" target="_blank" rel="noreferrer">&lt;Error&gt;</a></li><li><code>address</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> IPv4またはIPv6アドレスの文字列表現。</li><li><code>family</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type" target="_blank" rel="noreferrer">&lt;integer&gt;</a> <code>address</code>のファミリーを示す<code>4</code>または<code>6</code>、またはアドレスがIPv4またはIPv6アドレスでない場合は<code>0</code>。<code>0</code>は、オペレーティングシステムで使用されている名前解決サービスにバグがある可能性を示すものです。</li></ul></li></ul><p>ホスト名（例：<code>&#39;nodejs.org&#39;</code>）を最初に見つかったA（IPv4）またはAAAA（IPv6）レコードに解決します。すべての<code>option</code>プロパティはオプションです。<code>options</code>が整数の場合、<code>4</code>または<code>6</code>である必要があります。<code>options</code>が指定されていない場合は、IPv4アドレスまたはIPv6アドレス、あるいはその両方が見つかった場合に返されます。</p><p><code>all</code>オプションが<code>true</code>に設定されている場合、<code>callback</code>の引数は<code>(err, addresses)</code>に変更され、<code>addresses</code>はプロパティ<code>address</code>と<code>family</code>を持つオブジェクトの配列になります。</p><p>エラーが発生した場合、<code>err</code>は<a href="/ja/nodejs/api/errors#class-error"><code>Error</code></a>オブジェクトであり、<code>err.code</code>はエラーコードです。ホスト名が存在しない場合だけでなく、利用可能なファイルディスクリプタがないなど、ルックアップが他の方法で失敗した場合にも、<code>err.code</code>が<code>&#39;ENOTFOUND&#39;</code>に設定されることに注意してください。</p><p><code>dns.lookup()</code>は、必ずしもDNSプロトコルと関係があるわけではありません。実装は、名前をアドレスと関連付けたり、その逆を行うことができるオペレーティングシステムの機能を使用します。この実装は、Node.jsプログラムの動作に微妙ながら重要な影響を与える可能性があります。<code>dns.lookup()</code>を使用する前に、<a href="/ja/nodejs/api/dns#implementation-considerations">実装に関する考慮事項のセクション</a>を参照してください。</p><p>使用例：</p><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-401" id="tab-402" checked><label data-title="ESM" for="tab-402">ESM</label><input type="radio" name="group-401" id="tab-403"><label data-title="CJS" for="tab-403">CJS</label></div><div class="blocks"><div class="language-js active line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> dns </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;node:dns&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> options</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  family: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  hints: dns.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ADDRCONFIG</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> dns.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">V4MAPPED</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dns.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lookup</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;example.org&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, options, (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">err</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">address</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">family</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;address: %j family: IPv%s&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, address, family));</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// address: &quot;2606:2800:21f:cb07:6820:80da:af6b:8b2c&quot; family: IPv6</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// When options.all is true, the result will be an Array.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">options.all </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dns.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lookup</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;example.org&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, options, (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">err</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">addresses</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;addresses: %j&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, addresses));</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// addresses: [{&quot;address&quot;:&quot;2606:2800:21f:cb07:6820:80da:af6b:8b2c&quot;,&quot;family&quot;:6}]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> dns</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;node:dns&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> options</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  family: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  hints: dns.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ADDRCONFIG</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> dns.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">V4MAPPED</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dns.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lookup</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;example.org&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, options, (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">err</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">address</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">family</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;address: %j family: IPv%s&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, address, family));</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// address: &quot;2606:2800:21f:cb07:6820:80da:af6b:8b2c&quot; family: IPv6</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// When options.all is true, the result will be an Array.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">options.all </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dns.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lookup</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;example.org&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, options, (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">err</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">addresses</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;addresses: %j&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, addresses));</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// addresses: [{&quot;address&quot;:&quot;2606:2800:21f:cb07:6820:80da:af6b:8b2c&quot;,&quot;family&quot;:6}]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div></div></div><p>このメソッドが<a href="/ja/nodejs/api/util#utilpromisifyoriginal"><code>util.promisify()</code></a>されたバージョンとして呼び出され、<code>all</code>が<code>true</code>に設定されていない場合、<code>address</code>および<code>family</code>プロパティを持つ<code>Object</code>の<code>Promise</code>を返します。</p><h3 id="supported-getaddrinfo-flags" tabindex="-1">サポートされる getaddrinfo フラグ <a class="header-anchor" href="#supported-getaddrinfo-flags" aria-label="Permalink to “サポートされる getaddrinfo フラグ”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[履歴]</p><table tabindex="0"><thead><tr><th>バージョン</th><th>変更</th></tr></thead><tbody><tr><td>v13.13.0, v12.17.0</td><td><code>dns.ALL</code> フラグのサポートが追加されました。</td></tr></tbody></table></div><p>以下のフラグは、ヒントとして<a href="/ja/nodejs/api/dns#dnslookuphostname-options-callback"><code>dns.lookup()</code></a>に渡すことができます。</p><ul><li><code>dns.ADDRCONFIG</code>: 返されるアドレスの種類を、システムで構成されている非ループバックアドレスの種類に制限します。たとえば、現在のシステムに少なくとも1つのIPv4アドレスが構成されている場合にのみ、IPv4アドレスが返されます。</li><li><code>dns.V4MAPPED</code>: IPv6ファミリが指定されたが、IPv6アドレスが見つからなかった場合、IPv4マップされたIPv6アドレスを返します。一部のオペレーティングシステム（例：FreeBSD 10.1）ではサポートされていません。</li><li><code>dns.ALL</code>: <code>dns.V4MAPPED</code> が指定されている場合、解決されたIPv6アドレスだけでなく、IPv4マップされたIPv6アドレスも返します。</li></ul><h2 id="dnslookupserviceaddress-port-callback" tabindex="-1"><code>dns.lookupService(address, port, callback)</code> <a class="header-anchor" href="#dnslookupserviceaddress-port-callback" aria-label="Permalink to “dns.lookupService(address, port, callback)”">​</a></h2><div class="info custom-block"><p class="custom-block-title">[履歴]</p><table tabindex="0"><thead><tr><th>バージョン</th><th>変更</th></tr></thead><tbody><tr><td>v18.0.0</td><td><code>callback</code> 引数に無効なコールバックを渡すと、<code>ERR_INVALID_CALLBACK</code>ではなく<code>ERR_INVALID_ARG_TYPE</code>がスローされるようになりました。</td></tr><tr><td>v0.11.14</td><td>追加: v0.11.14</td></tr></tbody></table></div><ul><li><code>address</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a></li><li><code>port</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type" target="_blank" rel="noreferrer">&lt;number&gt;</a></li><li><code>callback</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function" target="_blank" rel="noreferrer">&lt;Function&gt;</a><ul><li><code>err</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error" target="_blank" rel="noreferrer">&lt;Error&gt;</a></li><li><code>hostname</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> 例: <code>example.com</code></li><li><code>service</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> 例: <code>http</code></li></ul></li></ul><p>指定された <code>address</code> および <code>port</code> を、オペレーティングシステムの基盤となる <code>getnameinfo</code> 実装を使用して、ホスト名とサービスに解決します。</p><p><code>address</code> が有効なIPアドレスでない場合、<code>TypeError</code> がスローされます。 <code>port</code> は数値に強制変換されます。 有効なポートでない場合、<code>TypeError</code> がスローされます。</p><p>エラーが発生した場合、<code>err</code> は <a href="/ja/nodejs/api/errors#class-error"><code>Error</code></a> オブジェクトであり、<code>err.code</code> はエラーコードです。</p><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-533" id="tab-534" checked><label data-title="ESM" for="tab-534">ESM</label><input type="radio" name="group-533" id="tab-535"><label data-title="CJS" for="tab-535">CJS</label></div><div class="blocks"><div class="language-js active line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> dns </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;node:dns&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dns.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lookupService</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;127.0.0.1&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">22</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">err</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">hostname</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">service</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(hostname, service);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // Prints: localhost ssh</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> dns</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;node:dns&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dns.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lookupService</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;127.0.0.1&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">22</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">err</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">hostname</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">service</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(hostname, service);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // Prints: localhost ssh</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></div></div><p>このメソッドが <a href="/ja/nodejs/api/util#utilpromisifyoriginal"><code>util.promisify()</code></a> されたバージョンとして呼び出された場合、<code>hostname</code> および <code>service</code> プロパティを持つ <code>Object</code> の <code>Promise</code> を返します。</p><h2 id="dnsresolvehostname-rrtype-callback" tabindex="-1"><code>dns.resolve(hostname[, rrtype], callback)</code> <a class="header-anchor" href="#dnsresolvehostname-rrtype-callback" aria-label="Permalink to “dns.resolve(hostname[, rrtype], callback)”">​</a></h2><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v18.0.0</td><td><code>callback</code> 引数に無効なコールバックを渡すと、<code>ERR_INVALID_CALLBACK</code> ではなく <code>ERR_INVALID_ARG_TYPE</code> がスローされるようになりました。</td></tr><tr><td>v0.1.27</td><td>Added in: v0.1.27</td></tr></tbody></table></div><ul><li><code>hostname</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> 解決するホスト名。</li><li><code>rrtype</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> リソースレコードタイプ。<strong>デフォルト:</strong> <code>&#39;A&#39;</code>。</li><li><code>callback</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function" target="_blank" rel="noreferrer">&lt;Function&gt;</a><ul><li><code>err</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error" target="_blank" rel="noreferrer">&lt;Error&gt;</a></li><li><code>records</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string[]&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object[]&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object&gt;</a></li></ul></li></ul><p>DNSプロトコルを使用して、ホスト名 (例: <code>&#39;nodejs.org&#39;</code>) をリソースレコードの配列に解決します。 <code>callback</code> 関数は <code>(err, records)</code> の引数を持ちます。 成功すると、<code>records</code> はリソースレコードの配列になります。 個々の結果のタイプと構造は、<code>rrtype</code> によって異なります。</p><table tabindex="0"><thead><tr><th><code>rrtype</code></th><th><code>records</code> に含まれるもの</th><th>結果の型</th><th>短縮メソッド</th></tr></thead><tbody><tr><td><code>&#39;A&#39;</code></td><td>IPv4 アドレス (デフォルト)</td><td><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a></td><td><a href="/ja/nodejs/api/dns#dnsresolve4hostname-options-callback"><code>dns.resolve4()</code></a></td></tr><tr><td><code>&#39;AAAA&#39;</code></td><td>IPv6 アドレス</td><td><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a></td><td><a href="/ja/nodejs/api/dns#dnsresolve6hostname-options-callback"><code>dns.resolve6()</code></a></td></tr><tr><td><code>&#39;ANY&#39;</code></td><td>すべてのレコード</td><td><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object&gt;</a></td><td><a href="/ja/nodejs/api/dns#dnsresolveanyhostname-callback"><code>dns.resolveAny()</code></a></td></tr><tr><td><code>&#39;CAA&#39;</code></td><td>CA 認証レコード</td><td><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object&gt;</a></td><td><a href="/ja/nodejs/api/dns#dnsresolvecaahostname-callback"><code>dns.resolveCaa()</code></a></td></tr><tr><td><code>&#39;CNAME&#39;</code></td><td>正規名レコード</td><td><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a></td><td><a href="/ja/nodejs/api/dns#dnsresolvecnamehostname-callback"><code>dns.resolveCname()</code></a></td></tr><tr><td><code>&#39;MX&#39;</code></td><td>メール交換レコード</td><td><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object&gt;</a></td><td><a href="/ja/nodejs/api/dns#dnsresolvemxhostname-callback"><code>dns.resolveMx()</code></a></td></tr><tr><td><code>&#39;NAPTR&#39;</code></td><td>名前権限ポインタレコード</td><td><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object&gt;</a></td><td><a href="/ja/nodejs/api/dns#dnsresolvenaptrhostname-callback"><code>dns.resolveNaptr()</code></a></td></tr><tr><td><code>&#39;NS&#39;</code></td><td>ネームサーバレコード</td><td><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a></td><td><a href="/ja/nodejs/api/dns#dnsresolvenshostname-callback"><code>dns.resolveNs()</code></a></td></tr><tr><td><code>&#39;PTR&#39;</code></td><td>ポインタレコード</td><td><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a></td><td><a href="/ja/nodejs/api/dns#dnsresolveptrhostname-callback"><code>dns.resolvePtr()</code></a></td></tr><tr><td><code>&#39;SOA&#39;</code></td><td>権威レコードの開始</td><td><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object&gt;</a></td><td><a href="/ja/nodejs/api/dns#dnsresolvesoahostname-callback"><code>dns.resolveSoa()</code></a></td></tr><tr><td><code>&#39;SRV&#39;</code></td><td>サービスレコード</td><td><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object&gt;</a></td><td><a href="/ja/nodejs/api/dns#dnsresolvesrvhostname-callback"><code>dns.resolveSrv()</code></a></td></tr><tr><td><code>&#39;TXT&#39;</code></td><td>テキストレコード</td><td><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string[]&gt;</a></td><td><a href="/ja/nodejs/api/dns#dnsresolvetxthostname-callback"><code>dns.resolveTxt()</code></a></td></tr></tbody></table><p>エラーが発生した場合、<code>err</code> は <a href="/ja/nodejs/api/errors#class-error"><code>Error</code></a> オブジェクトとなり、<code>err.code</code> は <a href="/ja/nodejs/api/dns#error-codes">DNS エラーコード</a> のいずれかになります。</p><h2 id="dnsresolve4hostname-options-callback" tabindex="-1"><code>dns.resolve4(hostname[, options], callback)</code> <a class="header-anchor" href="#dnsresolve4hostname-options-callback" aria-label="Permalink to “dns.resolve4(hostname[, options], callback)”">​</a></h2><div class="info custom-block"><p class="custom-block-title">[履歴]</p><table tabindex="0"><thead><tr><th>Version</th><th>変更点</th></tr></thead><tbody><tr><td>v18.0.0</td><td><code>callback</code>引数に無効なコールバックを渡すと、<code>ERR_INVALID_CALLBACK</code>ではなく<code>ERR_INVALID_ARG_TYPE</code>がスローされるようになりました。</td></tr><tr><td>v7.2.0</td><td>このメソッドは<code>options</code>、特に<code>options.ttl</code>の引き渡しをサポートするようになりました。</td></tr><tr><td>v0.1.16</td><td>Added in: v0.1.16</td></tr></tbody></table></div><ul><li><p><code>hostname</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> 解決するホスト名。</p></li><li><p><code>options</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object&gt;</a></p><ul><li><code>ttl</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type" target="_blank" rel="noreferrer">&lt;boolean&gt;</a> 各レコードの Time-To-Live 値（TTL）を取得します。 <code>true</code>の場合、コールバックは文字列の配列ではなく、<code>{ address: &#39;1.2.3.4&#39;, ttl: 60 }</code>オブジェクトの配列をTTLを秒単位で表して受け取ります。</li></ul></li><li><p><code>callback</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function" target="_blank" rel="noreferrer">&lt;Function&gt;</a></p><ul><li><code>err</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error" target="_blank" rel="noreferrer">&lt;Error&gt;</a></li><li><code>addresses</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string[]&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object[]&gt;</a></li></ul></li></ul><p>DNS プロトコルを使用して、<code>hostname</code> の IPv4 アドレス (<code>A</code> レコード) を解決します。 <code>callback</code> 関数に渡される <code>addresses</code> 引数には、IPv4 アドレスの配列が含まれます (例: <code>[&#39;74.125.79.104&#39;, &#39;74.125.79.105&#39;, &#39;74.125.79.106&#39;]</code>)。</p><h2 id="dnsresolve6hostname-options-callback" tabindex="-1"><code>dns.resolve6(hostname[, options], callback)</code> <a class="header-anchor" href="#dnsresolve6hostname-options-callback" aria-label="Permalink to “dns.resolve6(hostname[, options], callback)”">​</a></h2><div class="info custom-block"><p class="custom-block-title">[履歴]</p><table tabindex="0"><thead><tr><th>Version</th><th>変更点</th></tr></thead><tbody><tr><td>v18.0.0</td><td><code>callback</code>引数に無効なコールバックを渡すと、<code>ERR_INVALID_CALLBACK</code>ではなく<code>ERR_INVALID_ARG_TYPE</code>がスローされるようになりました。</td></tr><tr><td>v7.2.0</td><td>このメソッドは<code>options</code>、特に<code>options.ttl</code>の引き渡しをサポートするようになりました。</td></tr><tr><td>v0.1.16</td><td>Added in: v0.1.16</td></tr></tbody></table></div><ul><li><p><code>hostname</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> 解決するホスト名。</p></li><li><p><code>options</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object&gt;</a></p><ul><li><code>ttl</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type" target="_blank" rel="noreferrer">&lt;boolean&gt;</a> 各レコードの Time-To-Live 値（TTL）を取得します。 <code>true</code>の場合、コールバックは文字列の配列ではなく、<code>{ address: &#39;0:1:2:3:4:5:6:7&#39;, ttl: 60 }</code>オブジェクトの配列をTTLを秒単位で表して受け取ります。</li></ul></li><li><p><code>callback</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function" target="_blank" rel="noreferrer">&lt;Function&gt;</a></p><ul><li><code>err</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error" target="_blank" rel="noreferrer">&lt;Error&gt;</a></li><li><code>addresses</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string[]&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object[]&gt;</a></li></ul></li></ul><p>DNS プロトコルを使用して、<code>hostname</code> の IPv6 アドレス (<code>AAAA</code> レコード) を解決します。 <code>callback</code> 関数に渡される <code>addresses</code> 引数には、IPv6 アドレスの配列が含まれます。</p><h2 id="dnsresolveanyhostname-callback" tabindex="-1"><code>dns.resolveAny(hostname, callback)</code> <a class="header-anchor" href="#dnsresolveanyhostname-callback" aria-label="Permalink to “dns.resolveAny(hostname, callback)”">​</a></h2><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>バージョン</th><th>変更</th></tr></thead><tbody><tr><td>v18.0.0</td><td><code>callback</code> 引数に無効なコールバックを渡すと、<code>ERR_INVALID_CALLBACK</code> の代わりに <code>ERR_INVALID_ARG_TYPE</code> がスローされるようになりました。</td></tr></tbody></table></div><ul><li><code>hostname</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a></li><li><code>callback</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function" target="_blank" rel="noreferrer">&lt;Function&gt;</a><ul><li><code>err</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error" target="_blank" rel="noreferrer">&lt;Error&gt;</a></li><li><code>ret</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object[]&gt;</a></li></ul></li></ul><p>DNSプロトコルを使用して、すべてのレコード（<code>ANY</code>または<code>*</code>クエリとも呼ばれます）を解決します。<code>callback</code>関数に渡される<code>ret</code>引数は、さまざまなタイプのレコードを含む配列になります。各オブジェクトには、現在のレコードのタイプを示す <code>type</code> プロパティがあります。また、<code>type</code> によって、オブジェクトに追加のプロパティが存在します。</p><table tabindex="0"><thead><tr><th>タイプ</th><th>プロパティ</th></tr></thead><tbody><tr><td><code>&#39;A&#39;</code></td><td><code>address</code> / <code>ttl</code></td></tr><tr><td><code>&#39;AAAA&#39;</code></td><td><code>address</code> / <code>ttl</code></td></tr><tr><td><code>&#39;CNAME&#39;</code></td><td><code>value</code></td></tr><tr><td><code>&#39;MX&#39;</code></td><td><a href="/ja/nodejs/api/dns#dnsresolvemxhostname-callback"><code>dns.resolveMx()</code></a> を参照してください。</td></tr><tr><td><code>&#39;NAPTR&#39;</code></td><td><a href="/ja/nodejs/api/dns#dnsresolvenaptrhostname-callback"><code>dns.resolveNaptr()</code></a> を参照してください。</td></tr><tr><td><code>&#39;NS&#39;</code></td><td><code>value</code></td></tr><tr><td><code>&#39;PTR&#39;</code></td><td><code>value</code></td></tr><tr><td><code>&#39;SOA&#39;</code></td><td><a href="/ja/nodejs/api/dns#dnsresolvesoahostname-callback"><code>dns.resolveSoa()</code></a> を参照してください。</td></tr><tr><td><code>&#39;SRV&#39;</code></td><td><a href="/ja/nodejs/api/dns#dnsresolvesrvhostname-callback"><code>dns.resolveSrv()</code></a> を参照してください。</td></tr><tr><td><code>&#39;TXT&#39;</code></td><td>このタイプのレコードには、<a href="/ja/nodejs/api/dns#dnsresolvetxthostname-callback"><code>dns.resolveTxt()</code></a> を参照する <code>entries</code> という配列プロパティが含まれています。例：<code>{ entries: [&#39;...&#39;], type: &#39;TXT&#39; }</code></td></tr></tbody></table><p>以下は、コールバックに渡される <code>ret</code> オブジェクトの例です。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[ { type: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;A&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, address: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;127.0.0.1&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, ttl: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">299</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  { type: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;CNAME&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, value: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;example.com&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  { type: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;MX&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, exchange: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;alt4.aspmx.l.example.com&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, priority: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">50</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  { type: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;NS&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, value: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;ns1.example.com&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  { type: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;TXT&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, entries: [ </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;v=spf1 include:_spf.example.com ~all&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ] },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  { type: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;SOA&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    nsname: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;ns1.example.com&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    hostmaster: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;admin.example.com&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    serial: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">156696742</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    refresh: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">900</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    retry: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">900</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    expire: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1800</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    minttl: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">60</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } ]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>DNSサーバのオペレーターは、<code>ANY</code>クエリに応答しないことを選択できます。<a href="/ja/nodejs/api/dns#dnsresolve4hostname-options-callback"><code>dns.resolve4()</code></a>, <a href="/ja/nodejs/api/dns#dnsresolvemxhostname-callback"><code>dns.resolveMx()</code></a> などの個々のメソッドを呼び出す方が良い場合があります。詳細については、<a href="https://tools.ietf.org/html/rfc8482" target="_blank" rel="noreferrer">RFC 8482</a> を参照してください。</p><h2 id="dnsresolvecnamehostname-callback" tabindex="-1"><code>dns.resolveCname(hostname, callback)</code> <a class="header-anchor" href="#dnsresolvecnamehostname-callback" aria-label="Permalink to “dns.resolveCname(hostname, callback)”">​</a></h2><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v18.0.0</td><td><code>callback</code> 引数に無効なコールバックを渡すと、<code>ERR_INVALID_CALLBACK</code> ではなく <code>ERR_INVALID_ARG_TYPE</code> がスローされるようになりました。</td></tr><tr><td>v0.3.2</td><td>Added in: v0.3.2</td></tr></tbody></table></div><ul><li><code>hostname</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a></li><li><code>callback</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function" target="_blank" rel="noreferrer">&lt;Function&gt;</a><ul><li><code>err</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error" target="_blank" rel="noreferrer">&lt;Error&gt;</a></li><li><code>addresses</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string[]&gt;</a></li></ul></li></ul><p>DNSプロトコルを使用して、<code>hostname</code> の <code>CNAME</code> レコードを解決します。<code>callback</code> 関数に渡される <code>addresses</code> 引数には、<code>hostname</code> で利用可能な正規名レコードの配列が含まれます (例: <code>[&#39;bar.example.com&#39;]</code>)。</p><h2 id="dnsresolvecaahostname-callback" tabindex="-1"><code>dns.resolveCaa(hostname, callback)</code> <a class="header-anchor" href="#dnsresolvecaahostname-callback" aria-label="Permalink to “dns.resolveCaa(hostname, callback)”">​</a></h2><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v18.0.0</td><td><code>callback</code> 引数に無効なコールバックを渡すと、<code>ERR_INVALID_CALLBACK</code> ではなく <code>ERR_INVALID_ARG_TYPE</code> がスローされるようになりました。</td></tr><tr><td>v15.0.0, v14.17.0</td><td>Added in: v15.0.0, v14.17.0</td></tr></tbody></table></div><ul><li><code>hostname</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a></li><li><code>callback</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function" target="_blank" rel="noreferrer">&lt;Function&gt;</a><ul><li><code>err</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error" target="_blank" rel="noreferrer">&lt;Error&gt;</a></li><li><code>records</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object[]&gt;</a></li></ul></li></ul><p>DNSプロトコルを使用して、<code>hostname</code> の <code>CAA</code> レコードを解決します。<code>callback</code> 関数に渡される <code>addresses</code> 引数には、<code>hostname</code> で利用可能な認証局承認レコードの配列が含まれます (例: <code>[{critical: 0, iodef: &#39;mailto:pki@example.com&#39;}, {critical: 128, issue: &#39;pki.example.com&#39;}]</code>)。</p><h2 id="dnsresolvemxhostname-callback" tabindex="-1"><code>dns.resolveMx(hostname, callback)</code> <a class="header-anchor" href="#dnsresolvemxhostname-callback" aria-label="Permalink to “dns.resolveMx(hostname, callback)”">​</a></h2><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v18.0.0</td><td><code>callback</code>引数への無効なコールバックの渡しは、<code>ERR_INVALID_CALLBACK</code>の代わりに<code>ERR_INVALID_ARG_TYPE</code>をスローするようになりました。</td></tr><tr><td>v0.1.27</td><td>Added in: v0.1.27</td></tr></tbody></table></div><ul><li><code>hostname</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a></li><li><code>callback</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function" target="_blank" rel="noreferrer">&lt;Function&gt;</a><ul><li><code>err</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error" target="_blank" rel="noreferrer">&lt;Error&gt;</a></li><li><code>addresses</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object[]&gt;</a></li></ul></li></ul><p>DNSプロトコルを使用して、<code>hostname</code>のメール交換レコード（<code>MX</code>レコード）を解決します。 <code>callback</code>関数に渡される<code>addresses</code>引数には、<code>priority</code>と<code>exchange</code>プロパティの両方を含むオブジェクトの配列が含まれます（例：<code>[{priority: 10, exchange: &#39;mx.example.com&#39;}, ...]</code>）。</p><h2 id="dnsresolvenaptrhostname-callback" tabindex="-1"><code>dns.resolveNaptr(hostname, callback)</code> <a class="header-anchor" href="#dnsresolvenaptrhostname-callback" aria-label="Permalink to “dns.resolveNaptr(hostname, callback)”">​</a></h2><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v18.0.0</td><td><code>callback</code>引数への無効なコールバックの渡しは、<code>ERR_INVALID_CALLBACK</code>の代わりに<code>ERR_INVALID_ARG_TYPE</code>をスローするようになりました。</td></tr><tr><td>v0.9.12</td><td>Added in: v0.9.12</td></tr></tbody></table></div><ul><li><code>hostname</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a></li><li><code>callback</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function" target="_blank" rel="noreferrer">&lt;Function&gt;</a><ul><li><code>err</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error" target="_blank" rel="noreferrer">&lt;Error&gt;</a></li><li><code>addresses</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object[]&gt;</a></li></ul></li></ul><p>DNSプロトコルを使用して、<code>hostname</code>の正規表現ベースのレコード（<code>NAPTR</code>レコード）を解決します。 <code>callback</code>関数に渡される<code>addresses</code>引数には、次のプロパティを持つオブジェクトの配列が含まれます。</p><ul><li><code>flags</code></li><li><code>service</code></li><li><code>regexp</code></li><li><code>replacement</code></li><li><code>order</code></li><li><code>preference</code></li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  flags</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;s&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  service</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;SIP+D2U&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  regexp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  replacement</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;_sip._udp.example.com&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  order</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">30</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  preference</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="dnsresolvenshostname-callback" tabindex="-1"><code>dns.resolveNs(hostname, callback)</code> <a class="header-anchor" href="#dnsresolvenshostname-callback" aria-label="Permalink to “dns.resolveNs(hostname, callback)”">​</a></h2><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v18.0.0</td><td><code>callback</code>引数に無効なコールバックを渡すと、<code>ERR_INVALID_CALLBACK</code>ではなく<code>ERR_INVALID_ARG_TYPE</code>をスローするようになりました。</td></tr><tr><td>v0.1.90</td><td>Added in: v0.1.90</td></tr></tbody></table></div><ul><li><code>hostname</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a></li><li><code>callback</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function" target="_blank" rel="noreferrer">&lt;Function&gt;</a><ul><li><code>err</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error" target="_blank" rel="noreferrer">&lt;Error&gt;</a></li><li><code>addresses</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string[]&gt;</a></li></ul></li></ul><p>DNSプロトコルを使用して、<code>hostname</code>の名前サーバレコード（<code>NS</code>レコード）を解決します。<code>callback</code>関数に渡される<code>addresses</code>引数には、<code>hostname</code>で利用可能な名前サーバレコードの配列が含まれます（例：<code>[&#39;ns1.example.com&#39;, &#39;ns2.example.com&#39;]</code>）。</p><h2 id="dnsresolveptrhostname-callback" tabindex="-1"><code>dns.resolvePtr(hostname, callback)</code> <a class="header-anchor" href="#dnsresolveptrhostname-callback" aria-label="Permalink to “dns.resolvePtr(hostname, callback)”">​</a></h2><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v18.0.0</td><td><code>callback</code>引数に無効なコールバックを渡すと、<code>ERR_INVALID_CALLBACK</code>ではなく<code>ERR_INVALID_ARG_TYPE</code>をスローするようになりました。</td></tr><tr><td>v6.0.0</td><td>Added in: v6.0.0</td></tr></tbody></table></div><ul><li><code>hostname</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a></li><li><code>callback</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function" target="_blank" rel="noreferrer">&lt;Function&gt;</a><ul><li><code>err</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error" target="_blank" rel="noreferrer">&lt;Error&gt;</a></li><li><code>addresses</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string[]&gt;</a></li></ul></li></ul><p>DNSプロトコルを使用して、<code>hostname</code>のポインタレコード（<code>PTR</code>レコード）を解決します。<code>callback</code>関数に渡される<code>addresses</code>引数は、応答レコードを含む文字列の配列になります。</p><h2 id="dnsresolvesoahostname-callback" tabindex="-1"><code>dns.resolveSoa(hostname, callback)</code> <a class="header-anchor" href="#dnsresolvesoahostname-callback" aria-label="Permalink to “dns.resolveSoa(hostname, callback)”">​</a></h2><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v18.0.0</td><td><code>callback</code>引数に無効なコールバックを渡すと、<code>ERR_INVALID_CALLBACK</code>ではなく<code>ERR_INVALID_ARG_TYPE</code>をスローするようになりました。</td></tr><tr><td>v0.11.10</td><td>Added in: v0.11.10</td></tr></tbody></table></div><ul><li><code>hostname</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a></li><li><code>callback</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function" target="_blank" rel="noreferrer">&lt;Function&gt;</a><ul><li><code>err</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error" target="_blank" rel="noreferrer">&lt;Error&gt;</a></li><li><code>address</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object&gt;</a></li></ul></li></ul><p>DNSプロトコルを使用して、<code>hostname</code>の権威の開始レコード（<code>SOA</code>レコード）を解決します。<code>callback</code>関数に渡される<code>address</code>引数は、次のプロパティを持つオブジェクトになります。</p><ul><li><code>nsname</code></li><li><code>hostmaster</code></li><li><code>serial</code></li><li><code>refresh</code></li><li><code>retry</code></li><li><code>expire</code></li><li><code>minttl</code></li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  nsname</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;ns.example.com&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  hostmaster</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;root.example.com&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  serial</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2013101809</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  refresh</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  retry</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2400</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  expire</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">604800</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  minttl</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3600</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h2 id="dnsresolvesrvhostname-callback" tabindex="-1"><code>dns.resolveSrv(hostname, callback)</code> <a class="header-anchor" href="#dnsresolvesrvhostname-callback" aria-label="Permalink to “dns.resolveSrv(hostname, callback)”">​</a></h2><div class="info custom-block"><p class="custom-block-title">[履歴]</p><table tabindex="0"><thead><tr><th>バージョン</th><th>変更点</th></tr></thead><tbody><tr><td>v18.0.0</td><td><code>callback</code> 引数に無効なコールバックを渡すと、<code>ERR_INVALID_CALLBACK</code> ではなく <code>ERR_INVALID_ARG_TYPE</code> がスローされるようになりました。</td></tr><tr><td>v0.1.27</td><td>追加: v0.1.27</td></tr></tbody></table></div><ul><li><code>hostname</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a></li><li><code>callback</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function" target="_blank" rel="noreferrer">&lt;Function&gt;</a><ul><li><code>err</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error" target="_blank" rel="noreferrer">&lt;Error&gt;</a></li><li><code>addresses</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object[]&gt;</a></li></ul></li></ul><p>DNSプロトコルを使用して、<code>hostname</code> のサービスレコード（<code>SRV</code> レコード）を解決します。<code>callback</code> 関数に渡される <code>addresses</code> 引数は、次のプロパティを持つオブジェクトの配列になります。</p><ul><li><code>priority</code></li><li><code>weight</code></li><li><code>port</code></li><li><code>name</code></li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  priority</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  weight</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  port</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">21223</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;service.example.com&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="dnsresolvetxthostname-callback" tabindex="-1"><code>dns.resolveTxt(hostname, callback)</code> <a class="header-anchor" href="#dnsresolvetxthostname-callback" aria-label="Permalink to “dns.resolveTxt(hostname, callback)”">​</a></h2><div class="info custom-block"><p class="custom-block-title">[履歴]</p><table tabindex="0"><thead><tr><th>バージョン</th><th>変更点</th></tr></thead><tbody><tr><td>v18.0.0</td><td><code>callback</code> 引数に無効なコールバックを渡すと、<code>ERR_INVALID_CALLBACK</code> ではなく <code>ERR_INVALID_ARG_TYPE</code> がスローされるようになりました。</td></tr><tr><td>v0.1.27</td><td>追加: v0.1.27</td></tr></tbody></table></div><ul><li><code>hostname</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a></li><li><code>callback</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function" target="_blank" rel="noreferrer">&lt;Function&gt;</a><ul><li><code>err</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error" target="_blank" rel="noreferrer">&lt;Error&gt;</a></li><li><code>records</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string[][]&gt;</a></li></ul></li></ul><p>DNSプロトコルを使用して、<code>hostname</code> のテキストクエリ（<code>TXT</code> レコード）を解決します。<code>callback</code> 関数に渡される <code>records</code> 引数は、<code>hostname</code> で利用可能なテキストレコードの2次元配列です（例：<code>[ [&#39;v=spf1 ip4:0.0.0.0 &#39;, &#39;~all&#39; ] ]</code>）。各サブ配列には、1つのレコードのTXTチャンクが含まれています。ユースケースに応じて、これらを結合することも、個別に処理することもできます。</p><h2 id="dnsreverseip-callback" tabindex="-1"><code>dns.reverse(ip, callback)</code> <a class="header-anchor" href="#dnsreverseip-callback" aria-label="Permalink to “dns.reverse(ip, callback)”">​</a></h2><p><strong>Added in: v0.1.16</strong></p><ul><li><code>ip</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a></li><li><code>callback</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function" target="_blank" rel="noreferrer">&lt;Function&gt;</a><ul><li><code>err</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error" target="_blank" rel="noreferrer">&lt;Error&gt;</a></li><li><code>hostnames</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string[]&gt;</a></li></ul></li></ul><p>IPv4またはIPv6アドレスをホスト名の配列に解決する逆引きDNSクエリを実行します。</p><p>エラーが発生した場合、<code>err</code>は<a href="/ja/nodejs/api/errors#class-error"><code>Error</code></a>オブジェクトで、<code>err.code</code>は<a href="/ja/nodejs/api/dns#error-codes">DNSエラーコード</a>のいずれかです。</p><h2 id="dnssetdefaultresultorderorder" tabindex="-1"><code>dns.setDefaultResultOrder(order)</code> <a class="header-anchor" href="#dnssetdefaultresultorderorder" aria-label="Permalink to “dns.setDefaultResultOrder(order)”">​</a></h2><div class="info custom-block"><p class="custom-block-title">[履歴]</p><table tabindex="0"><thead><tr><th>バージョン</th><th>変更点</th></tr></thead><tbody><tr><td>v22.1.0, v20.13.0</td><td><code>ipv6first</code>値がサポートされるようになりました。</td></tr><tr><td>v17.0.0</td><td>デフォルト値を <code>verbatim</code> に変更しました。</td></tr><tr><td>v16.4.0, v14.18.0</td><td>Added in: v16.4.0, v14.18.0</td></tr></tbody></table></div><ul><li><code>order</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> は、<code>&#39;ipv4first&#39;</code>、<code>&#39;ipv6first&#39;</code>、または <code>&#39;verbatim&#39;</code> である必要があります。</li></ul><p><a href="/ja/nodejs/api/dns#dnslookuphostname-options-callback"><code>dns.lookup()</code></a> および <a href="/ja/nodejs/api/dns#dnspromiseslookuphostname-options"><code>dnsPromises.lookup()</code></a> の <code>order</code> のデフォルト値を設定します。値は次のいずれかになります。</p><ul><li><code>ipv4first</code>: デフォルトの <code>order</code> を <code>ipv4first</code> に設定します。</li><li><code>ipv6first</code>: デフォルトの <code>order</code> を <code>ipv6first</code> に設定します。</li><li><code>verbatim</code>: デフォルトの <code>order</code> を <code>verbatim</code> に設定します。</li></ul><p>デフォルトは <code>verbatim</code> であり、<a href="/ja/nodejs/api/dns#dnssetdefaultresultorderorder"><code>dns.setDefaultResultOrder()</code></a> は <a href="/ja/nodejs/api/cli#dns-result-orderorder"><code>--dns-result-order</code></a> よりも優先度が高くなります。<a href="/ja/nodejs/api/worker_threads">ワーカー スレッド</a> を使用する場合、メイン スレッドからの <a href="/ja/nodejs/api/dns#dnssetdefaultresultorderorder"><code>dns.setDefaultResultOrder()</code></a> はワーカーのデフォルトの DNS 順序には影響しません。</p><h2 id="dnsgetdefaultresultorder" tabindex="-1"><code>dns.getDefaultResultOrder()</code> <a class="header-anchor" href="#dnsgetdefaultresultorder" aria-label="Permalink to “dns.getDefaultResultOrder()”">​</a></h2><div class="info custom-block"><p class="custom-block-title">[履歴]</p><table tabindex="0"><thead><tr><th>バージョン</th><th>変更点</th></tr></thead><tbody><tr><td>v22.1.0, v20.13.0</td><td><code>ipv6first</code>値がサポートされるようになりました。</td></tr><tr><td>v20.1.0, v18.17.0</td><td>Added in: v20.1.0, v18.17.0</td></tr></tbody></table></div><p><a href="/ja/nodejs/api/dns#dnslookuphostname-options-callback"><code>dns.lookup()</code></a> および <a href="/ja/nodejs/api/dns#dnspromiseslookuphostname-options"><code>dnsPromises.lookup()</code></a> の <code>order</code> のデフォルト値を取得します。値は次のいずれかになります。</p><ul><li><code>ipv4first</code>: <code>order</code> のデフォルトが <code>ipv4first</code> である場合。</li><li><code>ipv6first</code>: <code>order</code> のデフォルトが <code>ipv6first</code> である場合。</li><li><code>verbatim</code>: <code>order</code> のデフォルトが <code>verbatim</code> である場合。</li></ul><h2 id="dnssetserversservers" tabindex="-1"><code>dns.setServers(servers)</code> <a class="header-anchor" href="#dnssetserversservers" aria-label="Permalink to “dns.setServers(servers)”">​</a></h2><p><strong>追加:</strong> v0.11.3</p><ul><li><code>servers</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string[]&gt;</a> <a href="https://tools.ietf.org/html/rfc5952#section-6" target="_blank" rel="noreferrer">RFC 5952</a>形式のアドレスの配列</li></ul><p>DNS解決の実行時に使用するサーバーのIPアドレスとポートを設定します。<code>servers</code>引数は、<a href="https://tools.ietf.org/html/rfc5952#section-6" target="_blank" rel="noreferrer">RFC 5952</a>形式のアドレスの配列です。ポートがIANAのデフォルトDNSポート（53）である場合、省略できます。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dns.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setServers</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &#39;8.8.8.8&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &#39;[2001:4860:4860::8888]&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &#39;8.8.8.8:1053&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &#39;[2001:4860:4860::8888]:1053&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>無効なアドレスが指定された場合、エラーがスローされます。</p><p><code>dns.setServers()</code>メソッドは、DNSクエリが進行中の場合は呼び出さないでください。</p><p><a href="/ja/nodejs/api/dns#dnssetserversservers"><code>dns.setServers()</code></a>メソッドは、<a href="/ja/nodejs/api/dns#dnsresolvehostname-rrtype-callback"><code>dns.resolve()</code></a>、<code>dns.resolve*()</code>、および<a href="/ja/nodejs/api/dns#dnsreverseip-callback"><code>dns.reverse()</code></a>にのみ影響します（特に、<a href="/ja/nodejs/api/dns#dnslookuphostname-options-callback"><code>dns.lookup()</code></a>には影響しません）。</p><p>このメソッドは、<a href="https://man7.org/linux/man-pages/man5/resolv.conf.5" target="_blank" rel="noreferrer">resolve.conf</a>によく似た働きをします。つまり、提供された最初のサーバーでの解決を試みた結果、<code>NOTFOUND</code>エラーが発生した場合、<code>resolve()</code>メソッドは、提供された後続のサーバーでの解決を試みません。フォールバックDNSサーバーは、以前のサーバーがタイムアウトするか、その他のエラーが発生した場合にのみ使用されます。</p><h2 id="dns-promises-api" tabindex="-1">DNS promises API <a class="header-anchor" href="#dns-promises-api" aria-label="Permalink to “DNS promises API”">​</a></h2><div class="info custom-block"><p class="custom-block-title">[履歴]</p><table tabindex="0"><thead><tr><th>バージョン</th><th>変更点</th></tr></thead><tbody><tr><td>v15.0.0</td><td><code>require(&#39;dns/promises&#39;)</code>として公開。</td></tr><tr><td>v11.14.0, v10.17.0</td><td>このAPIは実験的ではなくなりました。</td></tr><tr><td>v10.6.0</td><td>追加: v10.6.0</td></tr></tbody></table></div><p><code>dns.promises</code> APIは、コールバックを使用する代わりに<code>Promise</code>オブジェクトを返す、代替の非同期DNSメソッドのセットを提供します。APIには、<code>require(&#39;node:dns&#39;).promises</code>または<code>require(&#39;node:dns/promises&#39;)</code>を介してアクセスできます。</p><h3 id="class-dnspromisesresolver" tabindex="-1">クラス: <code>dnsPromises.Resolver</code> <a class="header-anchor" href="#class-dnspromisesresolver" aria-label="Permalink to “クラス: dnsPromises.Resolver”">​</a></h3><p><strong>追加:</strong> v10.6.0</p><p>DNSリクエストのための独立したリゾルバー。</p><p>新しいリゾルバーを作成すると、デフォルトのサーバー設定が使用されます。<a href="/ja/nodejs/api/dns#dnspromisessetserversservers"><code>resolver.setServers()</code></a>を使用してリゾルバーに使用するサーバーを設定しても、他のリゾルバーには影響しません。</p><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-2020" id="tab-2021" checked><label data-title="ESM" for="tab-2021">ESM</label><input type="radio" name="group-2020" id="tab-2022"><label data-title="CJS" for="tab-2022">CJS</label></div><div class="blocks"><div class="language-js active line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { Resolver } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;node:dns/promises&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> resolver</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Resolver</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">resolver.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setServers</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;4.4.4.4&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// このリクエストは、グローバル設定とは無関係に、4.4.4.4のサーバーを使用します。</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> addresses</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> resolver.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">resolve4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;example.org&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Resolver</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;node:dns&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).promises;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> resolver</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Resolver</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">resolver.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setServers</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;4.4.4.4&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// このリクエストは、グローバル設定とは無関係に、4.4.4.4のサーバーを使用します。</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">resolver.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">resolve4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;example.org&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">then</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">addresses</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// または、同じコードをasync-awaitスタイルで記述できます。</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> addresses</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> resolver.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">resolve4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;example.org&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})();</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div></div></div><p><code>dnsPromises</code> APIの次のメソッドが利用可能です。</p><ul><li><a href="/ja/nodejs/api/dns#dnspromisesgetservers"><code>resolver.getServers()</code></a></li><li><a href="/ja/nodejs/api/dns#dnspromisesresolvehostname-rrtype"><code>resolver.resolve()</code></a></li><li><a href="/ja/nodejs/api/dns#dnspromisesresolve4hostname-options"><code>resolver.resolve4()</code></a></li><li><a href="/ja/nodejs/api/dns#dnspromisesresolve6hostname-options"><code>resolver.resolve6()</code></a></li><li><a href="/ja/nodejs/api/dns#dnspromisesresolveanyhostname"><code>resolver.resolveAny()</code></a></li><li><a href="/ja/nodejs/api/dns#dnspromisesresolvecaahostname"><code>resolver.resolveCaa()</code></a></li><li><a href="/ja/nodejs/api/dns#dnspromisesresolvecnamehostname"><code>resolver.resolveCname()</code></a></li><li><a href="/ja/nodejs/api/dns#dnspromisesresolvemxhostname"><code>resolver.resolveMx()</code></a></li><li><a href="/ja/nodejs/api/dns#dnspromisesresolvenaptrhostname"><code>resolver.resolveNaptr()</code></a></li><li><a href="/ja/nodejs/api/dns#dnspromisesresolvenshostname"><code>resolver.resolveNs()</code></a></li><li><a href="/ja/nodejs/api/dns#dnspromisesresolveptrhostname"><code>resolver.resolvePtr()</code></a></li><li><a href="/ja/nodejs/api/dns#dnspromisesresolvesoahostname"><code>resolver.resolveSoa()</code></a></li><li><a href="/ja/nodejs/api/dns#dnspromisesresolvesrvhostname"><code>resolver.resolveSrv()</code></a></li><li><a href="/ja/nodejs/api/dns#dnspromisesresolvetxthostname"><code>resolver.resolveTxt()</code></a></li><li><a href="/ja/nodejs/api/dns#dnspromisesreverseip"><code>resolver.reverse()</code></a></li><li><a href="/ja/nodejs/api/dns#dnspromisessetserversservers"><code>resolver.setServers()</code></a></li></ul><h3 id="resolvercancel_1" tabindex="-1"><code>resolver.cancel()</code> <a class="header-anchor" href="#resolvercancel_1" aria-label="Permalink to “resolver.cancel()”">​</a></h3><p><strong>追加:</strong> v15.3.0, v14.17.0</p><p>このリゾルバーによって行われた未処理の DNS クエリをすべてキャンセルします。対応する Promise は、コード <code>ECANCELLED</code> のエラーで reject されます。</p><h3 id="dnspromisesgetservers" tabindex="-1"><code>dnsPromises.getServers()</code> <a class="header-anchor" href="#dnspromisesgetservers" aria-label="Permalink to “dnsPromises.getServers()”">​</a></h3><p><strong>追加:</strong> v10.6.0</p><ul><li>戻り値: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string[]&gt;</a></li></ul><p>現在 DNS 解決に設定されている IP アドレスの文字列の配列を、<a href="https://tools.ietf.org/html/rfc5952#section-6" target="_blank" rel="noreferrer">RFC 5952</a> に従ってフォーマットして返します。カスタムポートが使用されている場合、文字列にはポートセクションが含まれます。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &#39;8.8.8.8&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &#39;2001:4860:4860::8888&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &#39;8.8.8.8:1053&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &#39;[2001:4860:4860::8888]:1053&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="dnspromiseslookuphostname-options" tabindex="-1"><code>dnsPromises.lookup(hostname[, options])</code> <a class="header-anchor" href="#dnspromiseslookuphostname-options" aria-label="Permalink to “dnsPromises.lookup(hostname[, options])”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[履歴]</p><table tabindex="0"><thead><tr><th>バージョン</th><th>変更点</th></tr></thead><tbody><tr><td>v22.1.0, v20.13.0</td><td><code>verbatim</code> オプションは非推奨となり、新しい <code>order</code> オプションが推奨されるようになりました。</td></tr><tr><td>v10.6.0</td><td>追加: v10.6.0</td></tr></tbody></table></div><ul><li><code>hostname</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a></li><li><code>options</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type" target="_blank" rel="noreferrer">&lt;integer&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object&gt;</a><ul><li><code>family</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type" target="_blank" rel="noreferrer">&lt;integer&gt;</a> レコードファミリ。 <code>4</code>、<code>6</code>、または <code>0</code> である必要があります。 値 <code>0</code> は、IPv4 または IPv6 アドレスのいずれかが返されることを示します。 値 <code>0</code> が <code>{ all: true }</code> (下記参照) と共に使用される場合、システムの DNS リゾルバーに応じて、IPv4 と IPv6 アドレスのいずれかまたは両方が返されます。 <strong>デフォルト:</strong> <code>0</code>。</li><li><code>hints</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type" target="_blank" rel="noreferrer">&lt;number&gt;</a> 1 つ以上の <a href="/ja/nodejs/api/dns#supported-getaddrinfo-flags">サポートされている <code>getaddrinfo</code> フラグ</a>。 複数のフラグを渡すには、それらの値をビット単位で <code>OR</code> します。</li><li><code>all</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type" target="_blank" rel="noreferrer">&lt;boolean&gt;</a> <code>true</code> の場合、<code>Promise</code> は配列内のすべてのアドレスで解決されます。 それ以外の場合は、単一のアドレスを返します。 <strong>デフォルト:</strong> <code>false</code>。</li><li><code>order</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> <code>verbatim</code> の場合、<code>Promise</code> は DNS リゾルバーが返した順序で IPv4 および IPv6 アドレスで解決されます。 <code>ipv4first</code> の場合、IPv4 アドレスは IPv6 アドレスの前に配置されます。 <code>ipv6first</code> の場合、IPv6 アドレスは IPv4 アドレスの前に配置されます。 <strong>デフォルト:</strong> <code>verbatim</code> (アドレスは並べ替えられません)。 デフォルト値は、<a href="/ja/nodejs/api/dns#dnssetdefaultresultorderorder"><code>dns.setDefaultResultOrder()</code></a> または <a href="/ja/nodejs/api/cli#dns-result-orderorder"><code>--dns-result-order</code></a> を使用して構成できます。 新しいコードでは、<code>{ order: &#39;verbatim&#39; }</code> を使用する必要があります。</li><li><code>verbatim</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type" target="_blank" rel="noreferrer">&lt;boolean&gt;</a> <code>true</code> の場合、<code>Promise</code> は DNS リゾルバーが返した順序で IPv4 および IPv6 アドレスで解決されます。 <code>false</code> の場合、IPv4 アドレスは IPv6 アドレスの前に配置されます。 このオプションは非推奨となり、<code>order</code> が推奨されるようになります。 両方が指定されている場合、<code>order</code> の方が優先されます。 新しいコードでは、<code>order</code> のみを使用する必要があります。 <strong>デフォルト:</strong> 現在は <code>false</code> (アドレスは並べ替えられます) ですが、そう遠くない将来に変更される予定です。 デフォルト値は、<a href="/ja/nodejs/api/dns#dnssetdefaultresultorderorder"><code>dns.setDefaultResultOrder()</code></a> または <a href="/ja/nodejs/api/cli#dns-result-orderorder"><code>--dns-result-order</code></a> を使用して構成できます。</li></ul></li></ul><p>ホスト名 (例: <code>&#39;nodejs.org&#39;</code>) を最初に見つかった A (IPv4) または AAAA (IPv6) レコードに解決します。 すべての <code>option</code> プロパティはオプションです。 <code>options</code> が整数の場合、<code>4</code> または <code>6</code> である必要があります。<code>options</code> が提供されていない場合は、IPv4 または IPv6 アドレス、またはその両方が見つかった場合に返されます。</p><p><code>all</code> オプションが <code>true</code> に設定されている場合、<code>Promise</code> は <code>addresses</code> が <code>address</code> および <code>family</code> プロパティを持つオブジェクトの配列である状態で解決されます。</p><p>エラーが発生した場合、<code>Promise</code> は <a href="/ja/nodejs/api/errors#class-error"><code>Error</code></a> オブジェクトで reject されます。ここで、<code>err.code</code> はエラーコードです。 ホスト名が存在しない場合だけでなく、使用可能なファイル記述子がないなど、ルックアップが他の方法で失敗した場合にも、<code>err.code</code> が <code>&#39;ENOTFOUND&#39;</code> に設定されることに注意してください。</p><p><a href="/ja/nodejs/api/dns#dnspromiseslookuphostname-options"><code>dnsPromises.lookup()</code></a> は、必ずしも DNS プロトコルと何らかの関係があるとは限りません。 この実装では、名前をアドレスに関連付けたり、その逆を行ったりできるオペレーティングシステムの機能を使用します。 この実装は、Node.js プログラムの動作に微妙ではあるものの重要な影響を与える可能性があります。 <code>dnsPromises.lookup()</code> を使用する前に、<a href="/ja/nodejs/api/dns#implementation-considerations">実装に関する考慮事項</a>のセクションを参照してください。</p><p>使用例:</p><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-2224" id="tab-2225" checked><label data-title="ESM" for="tab-2225">ESM</label><input type="radio" name="group-2224" id="tab-2226"><label data-title="CJS" for="tab-2226">CJS</label></div><div class="blocks"><div class="language-js active line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> dns </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;node:dns&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> dnsPromises</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> dns.promises;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> options</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  family: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  hints: dns.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ADDRCONFIG</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> dns.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">V4MAPPED</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> dnsPromises.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lookup</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;example.org&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, options).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">then</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">result</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;address: %j family: IPv%s&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, result.address, result.family);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // address: &quot;2606:2800:21f:cb07:6820:80da:af6b:8b2c&quot; family: IPv6</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// When options.all is true, the result will be an Array.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">options.all </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> dnsPromises.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lookup</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;example.org&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, options).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">then</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">result</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;addresses: %j&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, result);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // addresses: [{&quot;address&quot;:&quot;2606:2800:21f:cb07:6820:80da:af6b:8b2c&quot;,&quot;family&quot;:6}]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> dns</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;node:dns&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> dnsPromises</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> dns.promises;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> options</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  family: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  hints: dns.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ADDRCONFIG</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> dns.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">V4MAPPED</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dnsPromises.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lookup</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;example.org&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, options).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">then</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">result</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;address: %j family: IPv%s&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, result.address, result.family);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // address: &quot;2606:2800:21f:cb07:6820:80da:af6b:8b2c&quot; family: IPv6</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// When options.all is true, the result will be an Array.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">options.all </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dnsPromises.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lookup</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;example.org&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, options).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">then</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">result</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;addresses: %j&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, result);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // addresses: [{&quot;address&quot;:&quot;2606:2800:21f:cb07:6820:80da:af6b:8b2c&quot;,&quot;family&quot;:6}]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div></div></div><h3 id="dnspromiseslookupserviceaddress-port" tabindex="-1"><code>dnsPromises.lookupService(address, port)</code> <a class="header-anchor" href="#dnspromiseslookupserviceaddress-port" aria-label="Permalink to “dnsPromises.lookupService(address, port)”">​</a></h3><p><strong>Added in: v10.6.0</strong></p><ul><li><code>address</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a></li><li><code>port</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type" target="_blank" rel="noreferrer">&lt;number&gt;</a></li></ul><p>オペレーティングシステムの基盤となる <code>getnameinfo</code> 実装を使用して、指定された <code>address</code> と <code>port</code> をホスト名とサービスに解決します。</p><p><code>address</code> が有効なIPアドレスでない場合、<code>TypeError</code> がスローされます。<code>port</code> は数値に強制変換されます。それが有効なポートでない場合、<code>TypeError</code> がスローされます。</p><p>エラーが発生した場合、<code>Promise</code> は <a href="/ja/nodejs/api/errors#class-error"><code>Error</code></a> オブジェクトで拒否され、<code>err.code</code> はエラーコードになります。</p><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-2255" id="tab-2256" checked><label data-title="ESM" for="tab-2256">ESM</label><input type="radio" name="group-2255" id="tab-2257"><label data-title="CJS" for="tab-2257">CJS</label></div><div class="blocks"><div class="language-js active line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> dnsPromises </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;node:dns/promises&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> result</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> dnsPromises.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lookupService</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;127.0.0.1&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">22</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(result.hostname, result.service); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Prints: localhost ssh</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> dnsPromises</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;node:dns&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).promises;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dnsPromises.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lookupService</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;127.0.0.1&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">22</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">then</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">result</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(result.hostname, result.service);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // Prints: localhost ssh</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></div></div><h3 id="dnspromisesresolvehostname-rrtype" tabindex="-1"><code>dnsPromises.resolve(hostname[, rrtype])</code> <a class="header-anchor" href="#dnspromisesresolvehostname-rrtype" aria-label="Permalink to “dnsPromises.resolve(hostname[, rrtype])”">​</a></h3><p><strong>Added in: v10.6.0</strong></p><ul><li><code>hostname</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> 解決するホスト名。</li><li><code>rrtype</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> リソースレコードタイプ。<strong>デフォルト:</strong> <code>&#39;A&#39;</code>。</li></ul><p>DNSプロトコルを使用して、ホスト名（例：<code>&#39;nodejs.org&#39;</code>）をリソースレコードの配列に解決します。成功すると、<code>Promise</code> はリソースレコードの配列で解決されます。個々の結果の型と構造は、<code>rrtype</code> に基づいて異なります。</p><table tabindex="0"><thead><tr><th><code>rrtype</code></th><th><code>records</code> に含まれるもの</th><th>結果の型</th><th>短縮メソッド</th></tr></thead><tbody><tr><td><code>&#39;A&#39;</code></td><td>IPv4アドレス（デフォルト）</td><td><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a></td><td><a href="/ja/nodejs/api/dns#dnspromisesresolve4hostname-options"><code>dnsPromises.resolve4()</code></a></td></tr><tr><td><code>&#39;AAAA&#39;</code></td><td>IPv6アドレス</td><td><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a></td><td><a href="/ja/nodejs/api/dns#dnspromisesresolve6hostname-options"><code>dnsPromises.resolve6()</code></a></td></tr><tr><td><code>&#39;ANY&#39;</code></td><td>全てのレコード</td><td><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object&gt;</a></td><td><a href="/ja/nodejs/api/dns#dnspromisesresolveanyhostname"><code>dnsPromises.resolveAny()</code></a></td></tr><tr><td><code>&#39;CAA&#39;</code></td><td>CA 認証レコード</td><td><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object&gt;</a></td><td><a href="/ja/nodejs/api/dns#dnspromisesresolvecaahostname"><code>dnsPromises.resolveCaa()</code></a></td></tr><tr><td><code>&#39;CNAME&#39;</code></td><td>正規名レコード</td><td><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a></td><td><a href="/ja/nodejs/api/dns#dnspromisesresolvecnamehostname"><code>dnsPromises.resolveCname()</code></a></td></tr><tr><td><code>&#39;MX&#39;</code></td><td>メール交換レコード</td><td><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object&gt;</a></td><td><a href="/ja/nodejs/api/dns#dnspromisesresolvemxhostname"><code>dnsPromises.resolveMx()</code></a></td></tr><tr><td><code>&#39;NAPTR&#39;</code></td><td>名前権威ポインターレコード</td><td><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object&gt;</a></td><td><a href="/ja/nodejs/api/dns#dnspromisesresolvenaptrhostname"><code>dnsPromises.resolveNaptr()</code></a></td></tr><tr><td><code>&#39;NS&#39;</code></td><td>ネームサーバーレコード</td><td><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a></td><td><a href="/ja/nodejs/api/dns#dnspromisesresolvenshostname"><code>dnsPromises.resolveNs()</code></a></td></tr><tr><td><code>&#39;PTR&#39;</code></td><td>ポインターレコード</td><td><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a></td><td><a href="/ja/nodejs/api/dns#dnspromisesresolveptrhostname"><code>dnsPromises.resolvePtr()</code></a></td></tr><tr><td><code>&#39;SOA&#39;</code></td><td>権威レコードの開始</td><td><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object&gt;</a></td><td><a href="/ja/nodejs/api/dns#dnspromisesresolvesoahostname"><code>dnsPromises.resolveSoa()</code></a></td></tr><tr><td><code>&#39;SRV&#39;</code></td><td>サービスレコード</td><td><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object&gt;</a></td><td><a href="/ja/nodejs/api/dns#dnspromisesresolvesrvhostname"><code>dnsPromises.resolveSrv()</code></a></td></tr><tr><td><code>&#39;TXT&#39;</code></td><td>テキストレコード</td><td><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string[]&gt;</a></td><td><a href="/ja/nodejs/api/dns#dnspromisesresolvetxthostname"><code>dnsPromises.resolveTxt()</code></a></td></tr></tbody></table><p>エラーが発生した場合、<code>Promise</code> は <a href="/ja/nodejs/api/errors#class-error"><code>Error</code></a> オブジェクトで拒否され、<code>err.code</code> は <a href="/ja/nodejs/api/dns#error-codes">DNSエラーコード</a> のいずれかになります。</p><h3 id="dnspromisesresolve4hostname-options" tabindex="-1"><code>dnsPromises.resolve4(hostname[, options])</code> <a class="header-anchor" href="#dnspromisesresolve4hostname-options" aria-label="Permalink to “dnsPromises.resolve4(hostname[, options])”">​</a></h3><p><strong>Added in: v10.6.0</strong></p><ul><li><code>hostname</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> 解決するホスト名。</li><li><code>options</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object&gt;</a><ul><li><code>ttl</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type" target="_blank" rel="noreferrer">&lt;boolean&gt;</a> 各レコードの Time-To-Live 値（TTL）を取得します。 <code>true</code> の場合、<code>Promise</code> は文字列の配列ではなく、<code>{ address: &#39;1.2.3.4&#39;, ttl: 60 }</code> オブジェクトの配列で解決されます。TTL は秒単位で表現されます。</li></ul></li></ul><p>DNSプロトコルを使用して、<code>hostname</code> の IPv4 アドレス（<code>A</code> レコード）を解決します。 成功すると、<code>Promise</code> は IPv4 アドレスの配列（例：<code>[&#39;74.125.79.104&#39;, &#39;74.125.79.105&#39;, &#39;74.125.79.106&#39;]</code>）で解決されます。</p><h3 id="dnspromisesresolve6hostname-options" tabindex="-1"><code>dnsPromises.resolve6(hostname[, options])</code> <a class="header-anchor" href="#dnspromisesresolve6hostname-options" aria-label="Permalink to “dnsPromises.resolve6(hostname[, options])”">​</a></h3><p><strong>Added in: v10.6.0</strong></p><ul><li><code>hostname</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> 解決するホスト名。</li><li><code>options</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object&gt;</a><ul><li><code>ttl</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type" target="_blank" rel="noreferrer">&lt;boolean&gt;</a> 各レコードの Time-To-Live 値（TTL）を取得します。 <code>true</code> の場合、<code>Promise</code> は文字列の配列ではなく、<code>{ address: &#39;0:1:2:3:4:5:6:7&#39;, ttl: 60 }</code> オブジェクトの配列で解決されます。TTL は秒単位で表現されます。</li></ul></li></ul><p>DNSプロトコルを使用して、<code>hostname</code> の IPv6 アドレス（<code>AAAA</code> レコード）を解決します。 成功すると、<code>Promise</code> は IPv6 アドレスの配列で解決されます。</p><h3 id="dnspromisesresolveanyhostname" tabindex="-1"><code>dnsPromises.resolveAny(hostname)</code> <a class="header-anchor" href="#dnspromisesresolveanyhostname" aria-label="Permalink to “dnsPromises.resolveAny(hostname)”">​</a></h3><p><strong>Added in: v10.6.0</strong></p><ul><li><code>hostname</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a></li></ul><p>DNSプロトコルを使用して、すべてのレコード（<code>ANY</code> または <code>*</code> クエリとも呼ばれます）を解決します。 成功すると、<code>Promise</code> はさまざまな型のレコードを含む配列で解決されます。 各オブジェクトには、現在のレコードの型を示す <code>type</code> プロパティがあります。 また、<code>type</code> に応じて、オブジェクトに追加のプロパティが存在します。</p><table tabindex="0"><thead><tr><th>Type</th><th>Properties</th></tr></thead><tbody><tr><td><code>&#39;A&#39;</code></td><td><code>address</code> / <code>ttl</code></td></tr><tr><td><code>&#39;AAAA&#39;</code></td><td><code>address</code> / <code>ttl</code></td></tr><tr><td><code>&#39;CNAME&#39;</code></td><td><code>value</code></td></tr><tr><td><code>&#39;MX&#39;</code></td><td><a href="/ja/nodejs/api/dns#dnspromisesresolvemxhostname"><code>dnsPromises.resolveMx()</code></a> を参照</td></tr><tr><td><code>&#39;NAPTR&#39;</code></td><td><a href="/ja/nodejs/api/dns#dnspromisesresolvenaptrhostname"><code>dnsPromises.resolveNaptr()</code></a> を参照</td></tr><tr><td><code>&#39;NS&#39;</code></td><td><code>value</code></td></tr><tr><td><code>&#39;PTR&#39;</code></td><td><code>value</code></td></tr><tr><td><code>&#39;SOA&#39;</code></td><td><a href="/ja/nodejs/api/dns#dnspromisesresolvesoahostname"><code>dnsPromises.resolveSoa()</code></a> を参照</td></tr><tr><td><code>&#39;SRV&#39;</code></td><td><a href="/ja/nodejs/api/dns#dnspromisesresolvesrvhostname"><code>dnsPromises.resolveSrv()</code></a> を参照</td></tr><tr><td><code>&#39;TXT&#39;</code></td><td>このタイプのレコードには <code>entries</code> という配列プロパティが含まれており、<a href="/ja/nodejs/api/dns#dnspromisesresolvetxthostname"><code>dnsPromises.resolveTxt()</code></a> を参照します。たとえば、<code>{ entries: [&#39;...&#39;], type: &#39;TXT&#39; }</code></td></tr><tr><td>結果オブジェクトの例を次に示します。</td><td></td></tr></tbody></table><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[ { type: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;A&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, address: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;127.0.0.1&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, ttl: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">299</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  { type: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;CNAME&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, value: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;example.com&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  { type: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;MX&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, exchange: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;alt4.aspmx.l.example.com&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, priority: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">50</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  { type: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;NS&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, value: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;ns1.example.com&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  { type: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;TXT&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, entries: [ </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;v=spf1 include:_spf.example.com ~all&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ] },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  { type: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;SOA&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    nsname: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;ns1.example.com&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    hostmaster: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;admin.example.com&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    serial: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">156696742</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    refresh: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">900</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    retry: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">900</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    expire: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1800</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    minttl: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">60</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } ]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h3 id="dnspromisesresolvecaahostname" tabindex="-1"><code>dnsPromises.resolveCaa(hostname)</code> <a class="header-anchor" href="#dnspromisesresolvecaahostname" aria-label="Permalink to “dnsPromises.resolveCaa(hostname)”">​</a></h3><p><strong>Added in: v15.0.0, v14.17.0</strong></p><ul><li><code>hostname</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a></li></ul><p>DNSプロトコルを使用して、<code>hostname</code> の <code>CAA</code> レコードを解決します。成功すると、<code>Promise</code> は <code>hostname</code> で利用可能な認証局承認レコードを含むオブジェクトの配列で解決されます（例: <code>[{critical: 0, iodef: &#39;mailto:pki@example.com&#39;},{critical: 128, issue: &#39;pki.example.com&#39;}]</code>）。</p><h3 id="dnspromisesresolvecnamehostname" tabindex="-1"><code>dnsPromises.resolveCname(hostname)</code> <a class="header-anchor" href="#dnspromisesresolvecnamehostname" aria-label="Permalink to “dnsPromises.resolveCname(hostname)”">​</a></h3><p><strong>Added in: v10.6.0</strong></p><ul><li><code>hostname</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a></li></ul><p>DNSプロトコルを使用して、<code>hostname</code> の <code>CNAME</code> レコードを解決します。成功すると、<code>Promise</code> は <code>hostname</code> で利用可能な正規名レコードの配列で解決されます（例: <code>[&#39;bar.example.com&#39;]</code>）。</p><h3 id="dnspromisesresolvemxhostname" tabindex="-1"><code>dnsPromises.resolveMx(hostname)</code> <a class="header-anchor" href="#dnspromisesresolvemxhostname" aria-label="Permalink to “dnsPromises.resolveMx(hostname)”">​</a></h3><p><strong>Added in: v10.6.0</strong></p><ul><li><code>hostname</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a></li></ul><p>DNSプロトコルを使用して、<code>hostname</code> のメール交換レコード（<code>MX</code> レコード）を解決します。成功すると、<code>Promise</code> は <code>priority</code> と <code>exchange</code> プロパティの両方を含むオブジェクトの配列で解決されます（例: <code>[{priority: 10, exchange: &#39;mx.example.com&#39;}, ...]</code>）。</p><h3 id="dnspromisesresolvenaptrhostname" tabindex="-1"><code>dnsPromises.resolveNaptr(hostname)</code> <a class="header-anchor" href="#dnspromisesresolvenaptrhostname" aria-label="Permalink to “dnsPromises.resolveNaptr(hostname)”">​</a></h3><p><strong>Added in: v10.6.0</strong></p><ul><li><code>hostname</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a></li></ul><p>DNSプロトコルを使用して、<code>hostname</code> の正規表現ベースのレコード（<code>NAPTR</code> レコード）を解決します。成功すると、<code>Promise</code> は以下のプロパティを持つオブジェクトの配列で解決されます。</p><ul><li><code>flags</code></li><li><code>service</code></li><li><code>regexp</code></li><li><code>replacement</code></li><li><code>order</code></li><li><code>preference</code></li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  flags</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;s&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  service</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;SIP+D2U&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  regexp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  replacement</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;_sip._udp.example.com&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  order</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">30</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  preference</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="dnspromisesresolvenshostname" tabindex="-1"><code>dnsPromises.resolveNs(hostname)</code> <a class="header-anchor" href="#dnspromisesresolvenshostname" aria-label="Permalink to “dnsPromises.resolveNs(hostname)”">​</a></h3><p><strong>Added in: v10.6.0</strong></p><ul><li><code>hostname</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a></li></ul><p>DNSプロトコルを使用して、<code>hostname</code> のネームサーバーレコード（<code>NS</code> レコード）を解決します。成功すると、<code>Promise</code> は <code>hostname</code> で利用可能なネームサーバーレコードの配列で解決されます（例: <code>[&#39;ns1.example.com&#39;, &#39;ns2.example.com&#39;]</code>）。</p><h3 id="dnspromisesresolveptrhostname" tabindex="-1"><code>dnsPromises.resolvePtr(hostname)</code> <a class="header-anchor" href="#dnspromisesresolveptrhostname" aria-label="Permalink to “dnsPromises.resolvePtr(hostname)”">​</a></h3><p><strong>Added in: v10.6.0</strong></p><ul><li><code>hostname</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a></li></ul><p>DNSプロトコルを使用して、<code>hostname</code> のポインターレコード（<code>PTR</code> レコード）を解決します。成功すると、応答レコードを含む文字列の配列で <code>Promise</code> が解決されます。</p><h3 id="dnspromisesresolvesoahostname" tabindex="-1"><code>dnsPromises.resolveSoa(hostname)</code> <a class="header-anchor" href="#dnspromisesresolvesoahostname" aria-label="Permalink to “dnsPromises.resolveSoa(hostname)”">​</a></h3><p><strong>Added in: v10.6.0</strong></p><ul><li><code>hostname</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a></li></ul><p>DNSプロトコルを使用して、<code>hostname</code> の権威レコードの開始（<code>SOA</code> レコード）を解決します。成功すると、<code>Promise</code> は次のプロパティを持つオブジェクトで解決されます。</p><ul><li><code>nsname</code></li><li><code>hostmaster</code></li><li><code>serial</code></li><li><code>refresh</code></li><li><code>retry</code></li><li><code>expire</code></li><li><code>minttl</code></li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  nsname</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;ns.example.com&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  hostmaster</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;root.example.com&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  serial</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2013101809</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  refresh</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  retry</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2400</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  expire</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">604800</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  minttl</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3600</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="dnspromisesresolvesrvhostname" tabindex="-1"><code>dnsPromises.resolveSrv(hostname)</code> <a class="header-anchor" href="#dnspromisesresolvesrvhostname" aria-label="Permalink to “dnsPromises.resolveSrv(hostname)”">​</a></h3><p><strong>Added in: v10.6.0</strong></p><ul><li><code>hostname</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a></li></ul><p>DNSプロトコルを使用して、<code>hostname</code> のサービスレコード（<code>SRV</code> レコード）を解決します。成功すると、<code>Promise</code> は次のプロパティを持つオブジェクトの配列で解決されます。</p><ul><li><code>priority</code></li><li><code>weight</code></li><li><code>port</code></li><li><code>name</code></li></ul><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  priority</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  weight</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  port</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">21223</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;service.example.com&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="dnspromisesresolvetxthostname" tabindex="-1"><code>dnsPromises.resolveTxt(hostname)</code> <a class="header-anchor" href="#dnspromisesresolvetxthostname" aria-label="Permalink to “dnsPromises.resolveTxt(hostname)”">​</a></h3><p><strong>Added in: v10.6.0</strong></p><ul><li><code>hostname</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a></li></ul><p>DNSプロトコルを使用して、<code>hostname</code> のテキストクエリ（<code>TXT</code> レコード）を解決します。成功すると、<code>Promise</code> は <code>hostname</code> で利用可能なテキストレコードの二次元配列で解決されます（例：<code>[ [&#39;v=spf1 ip4:0.0.0.0 &#39;, &#39;~all&#39; ] ]</code>）。各サブ配列には、1つのレコードの TXT チャンクが含まれています。ユースケースに応じて、これらを結合するか、個別に扱うことができます。</p><h3 id="dnspromisesreverseip" tabindex="-1"><code>dnsPromises.reverse(ip)</code> <a class="header-anchor" href="#dnspromisesreverseip" aria-label="Permalink to “dnsPromises.reverse(ip)”">​</a></h3><p><strong>追加:</strong> v10.6.0</p><ul><li><code>ip</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a></li></ul><p>IPv4またはIPv6アドレスをホスト名の配列に解決する逆引きDNSクエリを実行します。</p><p>エラーが発生した場合、<code>Promise</code>は<a href="/ja/nodejs/api/errors#class-error"><code>Error</code></a>オブジェクトで拒否され、<code>err.code</code>は<a href="/ja/nodejs/api/dns#error-codes">DNSエラーコード</a>のいずれかになります。</p><h3 id="dnspromisessetdefaultresultorderorder" tabindex="-1"><code>dnsPromises.setDefaultResultOrder(order)</code> <a class="header-anchor" href="#dnspromisessetdefaultresultorderorder" aria-label="Permalink to “dnsPromises.setDefaultResultOrder(order)”">​</a></h3><div class="info custom-block"><p class="custom-block-title">[履歴]</p><table tabindex="0"><thead><tr><th>バージョン</th><th>変更点</th></tr></thead><tbody><tr><td>v22.1.0, v20.13.0</td><td><code>ipv6first</code>値がサポートされるようになりました。</td></tr><tr><td>v17.0.0</td><td>デフォルト値を<code>verbatim</code>に変更しました。</td></tr><tr><td>v16.4.0, v14.18.0</td><td>追加: v16.4.0, v14.18.0</td></tr></tbody></table></div><ul><li><code>order</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> は <code>&#39;ipv4first&#39;</code>、<code>&#39;ipv6first&#39;</code>、または <code>&#39;verbatim&#39;</code> である必要があります。</li></ul><p><a href="/ja/nodejs/api/dns#dnslookuphostname-options-callback"><code>dns.lookup()</code></a> および <a href="/ja/nodejs/api/dns#dnspromiseslookuphostname-options"><code>dnsPromises.lookup()</code></a> の <code>order</code> のデフォルト値を設定します。 値は次のいずれかになります。</p><ul><li><code>ipv4first</code>: デフォルトの <code>order</code> を <code>ipv4first</code> に設定します。</li><li><code>ipv6first</code>: デフォルトの <code>order</code> を <code>ipv6first</code> に設定します。</li><li><code>verbatim</code>: デフォルトの <code>order</code> を <code>verbatim</code> に設定します。</li></ul><p>デフォルトは <code>verbatim</code> で、<a href="/ja/nodejs/api/dns#dnspromisessetdefaultresultorderorder"><code>dnsPromises.setDefaultResultOrder()</code></a> は <a href="/ja/nodejs/api/cli#dns-result-orderorder"><code>--dns-result-order</code></a> よりも優先度が高くなっています。<a href="/ja/nodejs/api/worker_threads">ワーカー スレッド</a> を使用する場合、メインスレッドからの <a href="/ja/nodejs/api/dns#dnspromisessetdefaultresultorderorder"><code>dnsPromises.setDefaultResultOrder()</code></a> はワーカーのデフォルトの DNS 順序には影響しません。</p><h3 id="dnspromisesgetdefaultresultorder" tabindex="-1"><code>dnsPromises.getDefaultResultOrder()</code> <a class="header-anchor" href="#dnspromisesgetdefaultresultorder" aria-label="Permalink to “dnsPromises.getDefaultResultOrder()”">​</a></h3><p><strong>追加:</strong> v20.1.0, v18.17.0</p><p><code>dnsOrder</code>の値を取得します。</p><h3 id="dnspromisessetserversservers" tabindex="-1"><code>dnsPromises.setServers(servers)</code> <a class="header-anchor" href="#dnspromisessetserversservers" aria-label="Permalink to “dnsPromises.setServers(servers)”">​</a></h3><p><strong>追加:</strong> v10.6.0</p><ul><li><code>servers</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string[]&gt;</a> <a href="https://tools.ietf.org/html/rfc5952#section-6" target="_blank" rel="noreferrer">RFC 5952</a> 形式のアドレスの配列</li></ul><p>DNS解決を実行するときに使用されるサーバーのIPアドレスとポートを設定します。<code>servers</code>引数は<a href="https://tools.ietf.org/html/rfc5952#section-6" target="_blank" rel="noreferrer">RFC 5952</a>形式のアドレスの配列です。ポートがIANAのデフォルトDNSポート（53）の場合、省略できます。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dnsPromises.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setServers</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &#39;8.8.8.8&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &#39;[2001:4860:4860::8888]&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &#39;8.8.8.8:1053&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &#39;[2001:4860:4860::8888]:1053&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>無効なアドレスが指定された場合、エラーがスローされます。</p><p><code>dnsPromises.setServers()</code>メソッドは、DNSクエリの進行中に呼び出すことはできません。</p><p>このメソッドは、<a href="https://man7.org/linux/man-pages/man5/resolv.conf.5" target="_blank" rel="noreferrer">resolve.conf</a>と非常によく似ています。つまり、最初に指定されたサーバーで解決しようとした結果、<code>NOTFOUND</code>エラーが発生した場合、<code>resolve()</code>メソッドは、後続のサーバーで解決しようとしません。フォールバックDNSサーバーは、以前のサーバーがタイムアウトするか、他のエラーが発生した場合にのみ使用されます。</p><h2 id="error-codes" tabindex="-1">エラーコード <a class="header-anchor" href="#error-codes" aria-label="Permalink to “エラーコード”">​</a></h2><p>各 DNS クエリは、次のいずれかのエラーコードを返すことがあります。</p><ul><li><code>dns.NODATA</code>: DNS サーバーがデータなしの応答を返しました。</li><li><code>dns.FORMERR</code>: DNS サーバーがクエリの形式が間違っていると主張しました。</li><li><code>dns.SERVFAIL</code>: DNS サーバーが一般的なエラーを返しました。</li><li><code>dns.NOTFOUND</code>: ドメイン名が見つかりませんでした。</li><li><code>dns.NOTIMP</code>: DNS サーバーが要求された操作を実装していません。</li><li><code>dns.REFUSED</code>: DNS サーバーがクエリを拒否しました。</li><li><code>dns.BADQUERY</code>: DNS クエリの形式が間違っています。</li><li><code>dns.BADNAME</code>: ホスト名の形式が間違っています。</li><li><code>dns.BADFAMILY</code>: サポートされていないアドレスファミリ。</li><li><code>dns.BADRESP</code>: DNS 応答の形式が間違っています。</li><li><code>dns.CONNREFUSED</code>: DNS サーバーに接続できませんでした。</li><li><code>dns.TIMEOUT</code>: DNS サーバーへの接続中にタイムアウトしました。</li><li><code>dns.EOF</code>: ファイルの終端。</li><li><code>dns.FILE</code>: ファイルの読み取りエラー。</li><li><code>dns.NOMEM</code>: メモリ不足。</li><li><code>dns.DESTRUCTION</code>: チャネルが破棄されています。</li><li><code>dns.BADSTR</code>: 文字列の形式が間違っています。</li><li><code>dns.BADFLAGS</code>: 無効なフラグが指定されました。</li><li><code>dns.NONAME</code>: 指定されたホスト名が数値ではありません。</li><li><code>dns.BADHINTS</code>: 無効なヒントフラグが指定されました。</li><li><code>dns.NOTINITIALIZED</code>: c-ares ライブラリの初期化がまだ実行されていません。</li><li><code>dns.LOADIPHLPAPI</code>: <code>iphlpapi.dll</code> のロードエラー。</li><li><code>dns.ADDRGETNETWORKPARAMS</code>: <code>GetNetworkParams</code> 関数が見つかりませんでした。</li><li><code>dns.CANCELLED</code>: DNS クエリがキャンセルされました。</li></ul><p><code>dnsPromises</code> API も、上記の例えば <code>dnsPromises.NODATA</code> のように、上記のエラーコードをエクスポートします。</p><h2 id="implementation-considerations" tabindex="-1">実装に関する考慮事項 <a class="header-anchor" href="#implementation-considerations" aria-label="Permalink to “実装に関する考慮事項”">​</a></h2><p><a href="/ja/nodejs/api/dns#dnslookuphostname-options-callback"><code>dns.lookup()</code></a> とさまざまな <code>dns.resolve*()/dns.reverse()</code> 関数は、ネットワーク名とネットワークアドレス (またはその逆) を関連付けるという同じ目的を持っていますが、その動作は大きく異なります。 これらの違いは、Node.js プログラムの動作に微妙ながらも重大な影響を与える可能性があります。</p><h3 id="dnslookup" tabindex="-1"><code>dns.lookup()</code> <a class="header-anchor" href="#dnslookup" aria-label="Permalink to “dns.lookup()”">​</a></h3><p>内部的には、<a href="/ja/nodejs/api/dns#dnslookuphostname-options-callback"><code>dns.lookup()</code></a> は、他のほとんどのプログラムと同じオペレーティングシステムの機能を使用します。 たとえば、<a href="/ja/nodejs/api/dns#dnslookuphostname-options-callback"><code>dns.lookup()</code></a> は、ほとんどの場合、<code>ping</code> コマンドと同じように特定の名前を解決します。 ほとんどの POSIX のようなオペレーティングシステムでは、<a href="/ja/nodejs/api/dns#dnslookuphostname-options-callback"><code>dns.lookup()</code></a> 関数の動作は、<a href="http://man7.org/linux/man-pages/man5/nsswitch.conf.5" target="_blank" rel="noreferrer"><code>nsswitch.conf(5)</code></a> および/または <a href="http://man7.org/linux/man-pages/man5/resolv.conf.5" target="_blank" rel="noreferrer"><code>resolv.conf(5)</code></a> の設定を変更することで変更できますが、これらのファイルを変更すると、同じオペレーティングシステムで実行されている他のすべてのプログラムの動作が変更されます。</p><p><code>dns.lookup()</code> の呼び出しは JavaScript の観点からは非同期になりますが、libuv のスレッドプールで実行される <a href="http://man7.org/linux/man-pages/man3/getaddrinfo.3" target="_blank" rel="noreferrer"><code>getaddrinfo(3)</code></a> への同期呼び出しとして実装されます。 これは、一部のアプリケーションに驚くほどネガティブなパフォーマンスの影響を与える可能性があります。詳細については、<a href="/ja/nodejs/api/cli#uv-threadpool-sizesize"><code>UV_THREADPOOL_SIZE</code></a> のドキュメントを参照してください。</p><p>さまざまなネットワーキング API が、ホスト名を解決するために内部的に <code>dns.lookup()</code> を呼び出します。 それが問題になる場合は、<code>dns.resolve()</code> を使用してホスト名をアドレスに解決し、ホスト名の代わりにアドレスを使用することを検討してください。 また、一部のネットワーキング API (例えば <a href="/ja/nodejs/api/net#socketconnectoptions-connectlistener"><code>socket.connect()</code></a> や <a href="/ja/nodejs/api/dgram#dgramcreatesocketoptions-callback"><code>dgram.createSocket()</code></a>) では、デフォルトのリゾルバーである <code>dns.lookup()</code> を置き換えることができます。</p><h3 id="dnsresolve-dnsresolve*-and-dnsreverse" tabindex="-1"><code>dns.resolve()</code>, <code>dns.resolve*()</code>, および <code>dns.reverse()</code> <a class="header-anchor" href="#dnsresolve-dnsresolve*-and-dnsreverse" aria-label="Permalink to “dns.resolve(), dns.resolve*(), および dns.reverse()”">​</a></h3><p>これらの関数は、<a href="/ja/nodejs/api/dns#dnslookuphostname-options-callback"><code>dns.lookup()</code></a> とはかなり異なる方法で実装されています。これらは <a href="http://man7.org/linux/man-pages/man3/getaddrinfo.3" target="_blank" rel="noreferrer"><code>getaddrinfo(3)</code></a> を使用せず、<em>常に</em>ネットワーク上で DNS クエリを実行します。このネットワーク通信は常に非同期で行われ、libuv のスレッドプールは使用しません。</p><p>その結果、これらの関数は、<a href="/ja/nodejs/api/dns#dnslookuphostname-options-callback"><code>dns.lookup()</code></a> が持つ可能性がある、libuv のスレッドプールで発生する他の処理に同じような悪影響を与えることはありません。</p><p>これらは、<a href="/ja/nodejs/api/dns#dnslookuphostname-options-callback"><code>dns.lookup()</code></a> が使用するのと同じ設定ファイルセットを使用しません。たとえば、<code>/etc/hosts</code> の設定は使用しません。</p>`,276)])}var s=e(a,[[`render`,o]]);export{i as __pageData,s as default};