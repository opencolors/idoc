import{__plugin_vue_export_helper_default as e,createElementBlock as t,createStaticVNode as n,openBlock as r}from"./chunks/plugin-vue_export-helper.Bts1mPc7.js";const i=JSON.parse(`{"title":"Node.js 애플리케이션의 보안 베스트 프랙티스","description":"Node.js 애플리케이션의 보안을 đảm보하는ための 포괄적인 가이드, 위협 모델링, 베스트 프랙티스, 서비스 거부, DNS 재바인딩, 기밀 정보 공개 등 일반적인 취약점의 완충을 포함합니다.","frontmatter":{"title":"Node.js 애플리케이션의 보안 베스트 프랙티스","description":"Node.js 애플리케이션의 보안을 đảm보하는ための 포괄적인 가이드, 위협 모델링, 베스트 프랙티스, 서비스 거부, DNS 재바인딩, 기밀 정보 공개 등 일반적인 취약점의 완충을 포함합니다.","head":[["meta",{"name":"og:title","content":"Node.js 애플리케이션의 보안 베스트 프랙티스 | Node.js - iDoc.dev"}],["meta",{"name":"og:description","content":"Node.js 애플리케이션의 보안을 đảm보하는ための 포괄적인 가이드, 위협 모델링, 베스트 프랙티스, 서비스 거부, DNS 재바인딩, 기밀 정보 공개 등 일반적인 취약점의 완충을 포함합니다."}],["meta",{"name":"twitter:title","content":"Node.js 애플리케이션의 보안 베스트 프랙티스 | Node.js - iDoc.dev"}],["meta",{"name":"twitter:description","content":"Node.js 애플리케이션의 보안을 đảm보하는ための 포괄적인 가이드, 위협 모델링, 베스트 프랙티스, 서비스 거부, DNS 재바인딩, 기밀 정보 공개 등 일반적인 취약점의 완충을 포함합니다."}],["link",{"rel":"canonical","href":"https://idoc.dev/ko/nodejs/guide/security-best-practices"}],["meta",{"property":"og:url","content":"https://idoc.dev/ko/nodejs/guide/security-best-practices"}]]},"headers":[],"relativePath":"ko/nodejs/guide/security-best-practices.md","filePath":"ko/nodejs/guide/security-best-practices.md","lastUpdated":null}`),a={name:`ko/nodejs/guide/security-best-practices.md`};function o(e,i,a,o,s,c){return r(),t(`div`,null,i[0]||=[n("",87)])}var s=e(a,[[`render`,o]]);export{i as __pageData,s as default};