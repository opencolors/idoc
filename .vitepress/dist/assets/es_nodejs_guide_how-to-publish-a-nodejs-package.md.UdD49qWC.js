import{__plugin_vue_export_helper_default as e,createElementBlock as t,createStaticVNode as n,openBlock as r}from"./chunks/plugin-vue_export-helper.Bts1mPc7.js";const i=JSON.parse(`{"title":"Publicar un paquete Node-API","description":"Aprenda a publicar una versión Node-API de un paquete junto con una versión no Node-API y cómo introducir una dependencia a una versión Node-API de un paquete.","frontmatter":{"title":"Publicar un paquete Node-API","description":"Aprenda a publicar una versión Node-API de un paquete junto con una versión no Node-API y cómo introducir una dependencia a una versión Node-API de un paquete.","head":[["meta",{"name":"og:title","content":"Publicar un paquete Node-API | Node.js - iDoc.dev"}],["meta",{"name":"og:description","content":"Aprenda a publicar una versión Node-API de un paquete junto con una versión no Node-API y cómo introducir una dependencia a una versión Node-API de un paquete."}],["meta",{"name":"twitter:title","content":"Publicar un paquete Node-API | Node.js - iDoc.dev"}],["meta",{"name":"twitter:description","content":"Aprenda a publicar una versión Node-API de un paquete junto con una versión no Node-API y cómo introducir una dependencia a una versión Node-API de un paquete."}],["link",{"rel":"canonical","href":"https://idoc.dev/es/nodejs/guide/how-to-publish-a-nodejs-package"}],["meta",{"property":"og:url","content":"https://idoc.dev/es/nodejs/guide/how-to-publish-a-nodejs-package"}]]},"headers":[],"relativePath":"es/nodejs/guide/how-to-publish-a-nodejs-package.md","filePath":"es/nodejs/guide/how-to-publish-a-nodejs-package.md","lastUpdated":null}`),a={name:`es/nodejs/guide/how-to-publish-a-nodejs-package.md`};function o(e,i,a,o,s,c){return r(),t(`div`,null,i[0]||=[n(`<h1 id="como-publicar-un-paquete-node-api" tabindex="-1">Cómo publicar un paquete Node-API <a class="header-anchor" href="#como-publicar-un-paquete-node-api" aria-label="Permalink to “Cómo publicar un paquete Node-API”">​</a></h1><h2 id="como-publicar-una-version-node-api-de-un-paquete-junto-con-una-version-no-node-api" tabindex="-1">Cómo publicar una versión Node-API de un paquete junto con una versión no Node-API <a class="header-anchor" href="#como-publicar-una-version-node-api-de-un-paquete-junto-con-una-version-no-node-api" aria-label="Permalink to “Cómo publicar una versión Node-API de un paquete junto con una versión no Node-API”">​</a></h2><p>Los siguientes pasos se ilustran usando el paquete <code>iotivity-node</code>:</p><ul><li><p>Primero, publique la versión no Node-API:</p><ul><li>Actualice la versión en <code>package.json</code>. Para <code>iotivity-node</code>, la versión se convierte en 1.2.0-2.</li><li>Revise la lista de verificación de lanzamiento (asegúrese de que las pruebas/demos/documentos estén bien).</li><li><code>npm publish</code>.</li></ul></li><li><p>Luego, publique la versión Node-API:</p><ul><li>Actualice la versión en <code>package.json</code>. En el caso de <code>iotivity-node</code>, la versión se convierte en 1.2.0-3. Para el versionado, recomendamos seguir el esquema de versión preliminar como se describe en <a href="https://semver.org" target="_blank" rel="noreferrer">semver.org</a> por ejemplo, 1.2.0-napi.</li><li>Revise la lista de verificación de lanzamiento (asegúrese de que las pruebas/demos/documentos estén bien).</li><li><code>npm publish --tag n-api</code>.</li></ul></li></ul><p>En este ejemplo, etiquetar el lanzamiento con <code>n-api</code> ha asegurado que, aunque la versión 1.2.0-3 sea posterior a la versión publicada no Node-APl (1.2.0-2), no se instalará si alguien elige instalar <code>iotivity-node</code> simplemente ejecutando <code>npm install iotivity-node</code>. Esto instalará la versión no Node-APl por defecto. El usuario tendrá que ejecutar <code>npm install iotivity-node@n api</code> para recibir la versión Node-APlI. Para obtener más información sobre el uso de etiquetas con npm, consulte &quot;Using dist-tags&quot;.</p><h2 id="como-introducir-una-dependencia-en-una-version-node-api-de-un-paquete" tabindex="-1">Cómo introducir una dependencia en una versión Node-API de un paquete <a class="header-anchor" href="#como-introducir-una-dependencia-en-una-version-node-api-de-un-paquete" aria-label="Permalink to “Cómo introducir una dependencia en una versión Node-API de un paquete”">​</a></h2><p>Para agregar la versión Node-API de <code>iotivity-node</code> como dependencia, el <code>package.json</code> se verá así:</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;dependencies&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;iotivity-node&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;n-api&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>Como se explica en &quot;Using dist-tags&quot;, a diferencia de las versiones regulares, las versiones etiquetadas no se pueden abordar mediante rangos de versiones como <code>&quot;^2.0.0&quot;</code> dentro de <code>package.json</code>. La razón de esto es que la etiqueta se refiere exactamente a una versión. Por lo tanto, si el mantenedor del paquete elige etiquetar una versión posterior del paquete usando la misma etiqueta, <code>npm update</code> recibirá la versión posterior. Esto debería ser aceptable. Si se necesita otra versión que no sea la última publicada, la dependencia <code>package.json</code> tendrá que referirse a la versión exacta como la siguiente:</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;dependencies&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;iotivity-node&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;1.2.0-3&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>`,10)])}var s=e(a,[[`render`,o]]);export{i as __pageData,s as default};