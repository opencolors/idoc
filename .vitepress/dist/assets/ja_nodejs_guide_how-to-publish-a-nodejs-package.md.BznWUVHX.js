import{__plugin_vue_export_helper_default as e,createElementBlock as t,createStaticVNode as n,openBlock as r}from"./chunks/plugin-vue_export-helper.Bts1mPc7.js";const i=JSON.parse(`{"title":"Node-APIパッケージの公開","description":"Node-APIバージョンのパッケージを非Node-APIバージョンとともに公開する方法と、パッケージにNode-APIバージョンの依存関係を導入する方法について学びます。","frontmatter":{"title":"Node-APIパッケージの公開","description":"Node-APIバージョンのパッケージを非Node-APIバージョンとともに公開する方法と、パッケージにNode-APIバージョンの依存関係を導入する方法について学びます。","head":[["meta",{"name":"og:title","content":"Node-APIパッケージの公開 | Node.js - iDoc.dev"}],["meta",{"name":"og:description","content":"Node-APIバージョンのパッケージを非Node-APIバージョンとともに公開する方法と、パッケージにNode-APIバージョンの依存関係を導入する方法について学びます。"}],["meta",{"name":"twitter:title","content":"Node-APIパッケージの公開 | Node.js - iDoc.dev"}],["meta",{"name":"twitter:description","content":"Node-APIバージョンのパッケージを非Node-APIバージョンとともに公開する方法と、パッケージにNode-APIバージョンの依存関係を導入する方法について学びます。"}],["link",{"rel":"canonical","href":"https://idoc.dev/ja/nodejs/guide/how-to-publish-a-nodejs-package"}],["meta",{"property":"og:url","content":"https://idoc.dev/ja/nodejs/guide/how-to-publish-a-nodejs-package"}]]},"headers":[],"relativePath":"ja/nodejs/guide/how-to-publish-a-nodejs-package.md","filePath":"ja/nodejs/guide/how-to-publish-a-nodejs-package.md","lastUpdated":null}`),a={name:`ja/nodejs/guide/how-to-publish-a-nodejs-package.md`};function o(e,i,a,o,s,c){return r(),t(`div`,null,i[0]||=[n(`<h1 id="node-api-パッケージの公開方法" tabindex="-1">Node-API パッケージの公開方法 <a class="header-anchor" href="#node-api-パッケージの公開方法" aria-label="Permalink to “Node-API パッケージの公開方法”">​</a></h1><h2 id="node-api-バージョンのパッケージを、非-node-api-バージョンと並行して公開する方法" tabindex="-1">Node-API バージョンのパッケージを、非 Node-API バージョンと並行して公開する方法 <a class="header-anchor" href="#node-api-バージョンのパッケージを、非-node-api-バージョンと並行して公開する方法" aria-label="Permalink to “Node-API バージョンのパッケージを、非 Node-API バージョンと並行して公開する方法”">​</a></h2><p>以下の手順は、<code>iotivity-node</code> パッケージを例に説明します。</p><ul><li><p>まず、非 Node-API バージョンを公開します。</p><ul><li><code>package.json</code> のバージョンを更新します。<code>iotivity-node</code> の場合、バージョンは 1.2.0-2 になります。</li><li>リリースのチェックリストを確認します (テスト、デモ、ドキュメントが OK であることを確認)。</li><li><code>npm publish</code> を実行します。</li></ul></li><li><p>次に、Node-API バージョンを公開します。</p><ul><li><code>package.json</code> のバージョンを更新します。<code>iotivity-node</code> の場合、バージョンは 1.2.0-3 になります。バージョニングには、<a href="https://semver.org" target="_blank" rel="noreferrer">semver.org</a> で説明されているプレリリースバージョン方式に従うことをお勧めします (例: 1.2.0-napi)。</li><li>リリースのチェックリストを確認します (テスト、デモ、ドキュメントが OK であることを確認)。</li><li><code>npm publish --tag n-api</code> を実行します。</li></ul></li></ul><p>この例では、リリースに <code>n-api</code> というタグを付けることで、バージョン 1.2.0-3 は非 Node-API の公開バージョン (1.2.0-2) よりも新しいにもかかわらず、<code>npm install iotivity-node</code> を実行して <code>iotivity-node</code> をインストールしようとしてもインストールされないようになっています。デフォルトでは非 Node-API バージョンがインストールされます。Node-API バージョンを受け取るには、ユーザーは <code>npm install iotivity-node@n-api</code> を実行する必要があります。タグを npm で使用する方法の詳細については、「Using dist-tags」を参照してください。</p><h2 id="パッケージの-node-api-バージョンへの依存関係を追加する方法" tabindex="-1">パッケージの Node-API バージョンへの依存関係を追加する方法 <a class="header-anchor" href="#パッケージの-node-api-バージョンへの依存関係を追加する方法" aria-label="Permalink to “パッケージの Node-API バージョンへの依存関係を追加する方法”">​</a></h2><p><code>iotivity-node</code> の Node-API バージョンを依存関係として追加するには、<code>package.json</code> は次のようになります。</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;dependencies&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;iotivity-node&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;n-api&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>「Using dist-tags」で説明されているように、通常のバージョンとは異なり、タグ付きバージョンは <code>package.json</code> 内で <code>&quot;^2.0.0&quot;</code> のようなバージョン範囲で指定することはできません。これは、タグが正確に 1 つのバージョンを参照するためです。したがって、パッケージメンテナーが同じタグを使用してパッケージの新しいバージョンにタグを付けることを選択した場合、<code>npm update</code> は新しいバージョンを受け取ります。これは許容できるはずです。公開されている最新バージョン以外のバージョンが必要な場合は、<code>package.json</code> の依存関係は次のように正確なバージョンを参照する必要があります。</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;dependencies&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;iotivity-node&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;1.2.0-3&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>`,10)])}var s=e(a,[[`render`,o]]);export{i as __pageData,s as default};