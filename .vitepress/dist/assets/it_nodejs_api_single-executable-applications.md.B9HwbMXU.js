import{__plugin_vue_export_helper_default as e,createElementBlock as t,createStaticVNode as n,openBlock as r}from"./chunks/plugin-vue_export-helper.Bts1mPc7.js";const i=JSON.parse(`{"title":"Applicazioni Esecuzione Singola con Node.js","description":"Scopri come creare e gestire applicazioni eseguibili singole con Node.js, inclusa la modalità di bundling dell'applicazione, la gestione delle dipendenze e le considerazioni sulla sicurezza.","frontmatter":{"title":"Applicazioni Esecuzione Singola con Node.js","description":"Scopri come creare e gestire applicazioni eseguibili singole con Node.js, inclusa la modalità di bundling dell'applicazione, la gestione delle dipendenze e le considerazioni sulla sicurezza.","head":[["meta",{"name":"og:title","content":"Applicazioni Esecuzione Singola con Node.js | Node.js - iDoc.dev"}],["meta",{"name":"og:description","content":"Scopri come creare e gestire applicazioni eseguibili singole con Node.js, inclusa la modalità di bundling dell'applicazione, la gestione delle dipendenze e le considerazioni sulla sicurezza."}],["meta",{"name":"twitter:title","content":"Applicazioni Esecuzione Singola con Node.js | Node.js - iDoc.dev"}],["meta",{"name":"twitter:description","content":"Scopri come creare e gestire applicazioni eseguibili singole con Node.js, inclusa la modalità di bundling dell'applicazione, la gestione delle dipendenze e le considerazioni sulla sicurezza."}],["link",{"rel":"canonical","href":"https://idoc.dev/it/nodejs/api/single-executable-applications"}],["meta",{"property":"og:url","content":"https://idoc.dev/it/nodejs/api/single-executable-applications"}]]},"headers":[],"relativePath":"it/nodejs/api/single-executable-applications.md","filePath":"it/nodejs/api/single-executable-applications.md","lastUpdated":null}`),a={name:`it/nodejs/api/single-executable-applications.md`};function o(e,i,a,o,s,c){return r(),t(`div`,null,i[0]||=[n(`<h1 id="single-executable-applications" tabindex="-1">Applicazioni eseguibili singole <a class="header-anchor" href="#single-executable-applications" aria-label="Permalink to “Applicazioni eseguibili singole”">​</a></h1><div class="info custom-block"><p class="custom-block-title">[Cronologia]</p><table tabindex="0"><thead><tr><th>Versione</th><th>Modifiche</th></tr></thead><tbody><tr><td>v20.6.0</td><td>Aggiunto il supporto per &quot;useSnapshot&quot;.</td></tr><tr><td>v20.6.0</td><td>Aggiunto il supporto per &quot;useCodeCache&quot;.</td></tr><tr><td>v19.7.0, v18.16.0</td><td>Aggiunto in: v19.7.0, v18.16.0</td></tr></tbody></table></div><div class="warning custom-block"><p class="custom-block-title">[Stabile: 1 - Sperimentale]</p><p><a href="/it/nodejs/api/documentation#stability-index">Stabile: 1</a> <a href="/it/nodejs/api/documentation#stability-index">Stabilità: 1</a>.1 - Sviluppo attivo</p></div><p><strong>Codice sorgente:</strong> <a href="https://github.com/nodejs/node/blob/v23.5.0/src/node_sea.cc" target="_blank" rel="noreferrer">src/node_sea.cc</a></p><p>Questa funzionalità consente la distribuzione di un&#39;applicazione Node.js in modo conveniente a un sistema che non ha Node.js installato.</p><p>Node.js supporta la creazione di <a href="https://github.com/nodejs/single-executable" target="_blank" rel="noreferrer">applicazioni eseguibili singole</a> consentendo l&#39;iniezione di un blob preparato da Node.js, che può contenere uno script in bundle, nel binario <code>node</code>. Durante l&#39;avvio, il programma verifica se è stato iniettato qualcosa. Se viene trovato il blob, esegue lo script nel blob. Altrimenti Node.js funziona come farebbe normalmente.</p><p>La funzionalità di applicazione eseguibile singola attualmente supporta solo l&#39;esecuzione di un singolo script incorporato utilizzando il sistema di moduli <a href="/it/nodejs/api/modules#modules-commonjs-modules">CommonJS</a>.</p><p>Gli utenti possono creare un&#39;applicazione eseguibile singola dal loro script in bundle con il binario <code>node</code> stesso e qualsiasi strumento in grado di iniettare risorse nel binario.</p><p>Ecco i passaggi per creare un&#39;applicazione eseguibile singola utilizzando uno di questi strumenti, <a href="https://github.com/nodejs/postject" target="_blank" rel="noreferrer">postject</a>:</p><h2 id="generating-single-executable-preparation-blobs" tabindex="-1">Generazione di blob di preparazione eseguibili singoli <a class="header-anchor" href="#generating-single-executable-preparation-blobs" aria-label="Permalink to “Generazione di blob di preparazione eseguibili singoli”">​</a></h2><p>I blob di preparazione eseguibili singoli che vengono iniettati nell&#39;applicazione possono essere generati utilizzando il flag <code>--experimental-sea-config</code> del binario Node.js che verrà utilizzato per compilare l&#39;eseguibile singolo. Richiede un percorso a un file di configurazione in formato JSON. Se il percorso passato non è assoluto, Node.js utilizzerà il percorso relativo alla directory di lavoro corrente.</p><p>La configurazione attualmente legge i seguenti campi di livello superiore:</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;main&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/percorso/allo/script/in/bundle.js&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;output&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/percorso/per/scrivere/il/blob/generato.blob&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;disableExperimentalSEAWarning&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Predefinito: false</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;useSnapshot&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Predefinito: false</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;useCodeCache&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Predefinito: false</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;assets&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Opzionale</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;a.dat&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/percorso/a/a.dat&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;b.txt&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/percorso/a/b.txt&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>Se i percorsi non sono assoluti, Node.js utilizzerà il percorso relativo alla directory di lavoro corrente. La versione del binario Node.js utilizzato per produrre il blob deve essere la stessa di quella a cui verrà iniettato il blob.</p><p>Nota: quando si generano SEA multipiattaforma (ad esempio, la generazione di un SEA per <code>linux-x64</code> su <code>darwin-arm64</code>), <code>useCodeCache</code> e <code>useSnapshot</code> devono essere impostati su false per evitare la generazione di eseguibili incompatibili. Poiché la cache del codice e gli snapshot possono essere caricati solo sulla stessa piattaforma in cui sono stati compilati, l&#39;eseguibile generato potrebbe bloccarsi all&#39;avvio quando si tenta di caricare la cache del codice o gli snapshot creati su una piattaforma diversa.</p><h3 id="assets" tabindex="-1">Asset <a class="header-anchor" href="#assets" aria-label="Permalink to “Asset”">​</a></h3><p>Gli utenti possono includere asset aggiungendo un dizionario chiave-percorso alla configurazione come campo <code>assets</code>. In fase di build, Node.js leggerebbe gli asset dai percorsi specificati e li raggrupperebbe nel blob di preparazione. Nell&#39;eseguibile generato, gli utenti possono recuperare gli asset utilizzando le API <a href="/it/nodejs/api/single-executable-applications#seagetassetkey-encoding"><code>sea.getAsset()</code></a> e <a href="/it/nodejs/api/single-executable-applications#seagetassetasblobkey-options"><code>sea.getAssetAsBlob()</code></a>.</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;main&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/path/to/bundled/script.js&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;output&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/path/to/write/the/generated/blob.blob&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;assets&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;a.jpg&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/path/to/a.jpg&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;b.txt&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/path/to/b.txt&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>L&#39;applicazione a singolo eseguibile può accedere agli asset come segue:</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">getAsset</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">getAssetAsBlob</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">getRawAsset</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;node:sea&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Restituisce una copia dei dati in un ArrayBuffer.</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> image</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> getAsset</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;a.jpg&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Restituisce una stringa decodificata dall&#39;asset come UTF8.</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> text</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> getAsset</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;b.txt&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;utf8&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Restituisce un Blob contenente l&#39;asset.</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> blob</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> getAssetAsBlob</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;a.jpg&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Restituisce un ArrayBuffer contenente l&#39;asset grezzo senza copiarlo.</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> raw</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> getRawAsset</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;a.jpg&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>Vedere la documentazione delle API <a href="/it/nodejs/api/single-executable-applications#seagetassetkey-encoding"><code>sea.getAsset()</code></a>, <a href="/it/nodejs/api/single-executable-applications#seagetassetasblobkey-options"><code>sea.getAssetAsBlob()</code></a> e <a href="/it/nodejs/api/single-executable-applications#seagetrawassetkey"><code>sea.getRawAsset()</code></a> per maggiori informazioni.</p><h3 id="startup-snapshot-support" tabindex="-1">Supporto snapshot di avvio <a class="header-anchor" href="#startup-snapshot-support" aria-label="Permalink to “Supporto snapshot di avvio”">​</a></h3><p>Il campo <code>useSnapshot</code> può essere utilizzato per abilitare il supporto snapshot di avvio. In questo caso, lo script <code>main</code> non verrebbe eseguito quando viene avviato l&#39;eseguibile finale. Invece, verrebbe eseguito quando viene generato il blob di preparazione dell&#39;applicazione a singolo eseguibile sulla macchina di build. Il blob di preparazione generato includerebbe quindi uno snapshot che cattura gli stati inizializzati dallo script <code>main</code>. L&#39;eseguibile finale con il blob di preparazione iniettato deserializzerebbe lo snapshot in fase di esecuzione.</p><p>Quando <code>useSnapshot</code> è true, lo script principale deve invocare l&#39;API <a href="/it/nodejs/api/v8#v8startupsnapshotsetdeserializemainfunctioncallback-data"><code>v8.startupSnapshot.setDeserializeMainFunction()</code></a> per configurare il codice che deve essere eseguito quando l&#39;eseguibile finale viene avviato dagli utenti.</p><p>Il modello tipico per un&#39;applicazione per utilizzare lo snapshot in un&#39;applicazione a singolo eseguibile è:</p><p>I vincoli generali degli script snapshot di avvio si applicano anche allo script principale quando viene utilizzato per creare snapshot per l&#39;applicazione a singolo eseguibile e lo script principale può utilizzare l&#39;API <a href="/it/nodejs/api/v8#startup-snapshot-api"><code>v8.startupSnapshot</code></a> per adattarsi a questi vincoli. Vedere <a href="/it/nodejs/api/cli#build-snapshot">la documentazione sul supporto dello snapshot di avvio in Node.js</a>.</p><h3 id="v8-code-cache-support" tabindex="-1">Supporto per la cache del codice V8 <a class="header-anchor" href="#v8-code-cache-support" aria-label="Permalink to “Supporto per la cache del codice V8”">​</a></h3><p>Quando <code>useCodeCache</code> è impostato su <code>true</code> nella configurazione, durante la generazione del blob di preparazione dell&#39;eseguibile singolo, Node.js compilerà lo script <code>main</code> per generare la cache del codice V8. La cache del codice generata farà parte del blob di preparazione e verrà iniettata nell&#39;eseguibile finale. Quando viene avviata l&#39;applicazione eseguibile singola, invece di compilare da zero lo script <code>main</code>, Node.js utilizzerà la cache del codice per accelerare la compilazione, quindi eseguirà lo script, il che migliorerebbe le prestazioni di avvio.</p><p><strong>Nota:</strong> <code>import()</code> non funziona quando <code>useCodeCache</code> è <code>true</code>.</p><h2 id="in-the-injected-main-script" tabindex="-1">Nello script principale iniettato <a class="header-anchor" href="#in-the-injected-main-script" aria-label="Permalink to “Nello script principale iniettato”">​</a></h2><h3 id="single-executable-application-api" tabindex="-1">API dell&#39;applicazione eseguibile singola <a class="header-anchor" href="#single-executable-application-api" aria-label="Permalink to “API dell&#39;applicazione eseguibile singola”">​</a></h3><p>Il modulo integrato <code>node:sea</code> consente l&#39;interazione con l&#39;applicazione eseguibile singola dallo script principale JavaScript incorporato nell&#39;eseguibile.</p><h4 id="seaissea" tabindex="-1"><code>sea.isSea()</code> <a class="header-anchor" href="#seaissea" aria-label="Permalink to “sea.isSea()”">​</a></h4><p><strong>Aggiunto in: v21.7.0, v20.12.0</strong></p><ul><li>Restituisce: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type" target="_blank" rel="noreferrer">&lt;boolean&gt;</a> Indica se questo script è in esecuzione all&#39;interno di un&#39;applicazione eseguibile singola.</li></ul><h3 id="seagetassetkey-encoding" tabindex="-1"><code>sea.getAsset(key[, encoding])</code> <a class="header-anchor" href="#seagetassetkey-encoding" aria-label="Permalink to “sea.getAsset(key[, encoding])”">​</a></h3><p><strong>Aggiunto in: v21.7.0, v20.12.0</strong></p><p>Questo metodo può essere utilizzato per recuperare le risorse configurate per essere raggruppate nell&#39;applicazione eseguibile singola al momento della compilazione. Viene generato un errore quando non è possibile trovare alcuna risorsa corrispondente.</p><ul><li><code>key</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> la chiave per la risorsa nel dizionario specificato dal campo <code>assets</code> nella configurazione dell&#39;applicazione eseguibile singola.</li><li><code>encoding</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> Se specificato, la risorsa verrà decodificata come stringa. Qualsiasi codifica supportata da <code>TextDecoder</code> è accettata. Se non specificato, verrà restituito invece un <code>ArrayBuffer</code> contenente una copia della risorsa.</li><li>Restituisce: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer" target="_blank" rel="noreferrer">&lt;ArrayBuffer&gt;</a></li></ul><h3 id="seagetassetasblobkey-options" tabindex="-1"><code>sea.getAssetAsBlob(key[, options])</code> <a class="header-anchor" href="#seagetassetasblobkey-options" aria-label="Permalink to “sea.getAssetAsBlob(key[, options])”">​</a></h3><p><strong>Aggiunto in: v21.7.0, v20.12.0</strong></p><p>Simile a <a href="/it/nodejs/api/single-executable-applications#seagetassetkey-encoding"><code>sea.getAsset()</code></a>, ma restituisce il risultato in un <a href="https://developer.mozilla.org/en-US/docs/Web/API/Blob" target="_blank" rel="noreferrer"><code>Blob</code></a>. Viene generato un errore quando non è possibile trovare una risorsa corrispondente.</p><ul><li><p><code>key</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> la chiave per la risorsa nel dizionario specificato dal campo <code>assets</code> nella configurazione dell&#39;applicazione eseguibile singola.</p></li><li><p><code>options</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object&gt;</a></p><ul><li><code>type</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> Un tipo mime opzionale per il blob.</li></ul></li><li><p>Restituisce: <a href="/it/nodejs/api/buffer#class-blob">&lt;Blob&gt;</a></p></li></ul><h3 id="seagetrawassetkey" tabindex="-1"><code>sea.getRawAsset(key)</code> <a class="header-anchor" href="#seagetrawassetkey" aria-label="Permalink to “sea.getRawAsset(key)”">​</a></h3><p><strong>Aggiunto in: v21.7.0, v20.12.0</strong></p><p>Questo metodo può essere utilizzato per recuperare le risorse configurate per essere raggruppate nell&#39;applicazione eseguibile singola in fase di compilazione. Viene generato un errore quando non è possibile trovare una risorsa corrispondente.</p><p>A differenza di <code>sea.getAsset()</code> o <code>sea.getAssetAsBlob()</code>, questo metodo non restituisce una copia. Invece, restituisce la risorsa non elaborata raggruppata all&#39;interno dell&#39;eseguibile.</p><p>Per ora, gli utenti dovrebbero evitare di scrivere nel buffer di array restituito. Se la sezione iniettata non è contrassegnata come scrivibile o non è allineata correttamente, la scrittura nel buffer di array restituito potrebbe causare un arresto anomalo.</p><ul><li><code>key</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> la chiave per la risorsa nel dizionario specificato dal campo <code>assets</code> nella configurazione dell&#39;applicazione eseguibile singola.</li><li>Restituisce: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer" target="_blank" rel="noreferrer">&lt;ArrayBuffer&gt;</a></li></ul><h3 id="requireid-in-the-injected-main-script-is-not-file-based" tabindex="-1"><code>require(id)</code> nello script principale iniettato non è basato su file <a class="header-anchor" href="#requireid-in-the-injected-main-script-is-not-file-based" aria-label="Permalink to “require(id) nello script principale iniettato non è basato su file”">​</a></h3><p><code>require()</code> nello script principale iniettato non è lo stesso di <a href="/it/nodejs/api/modules#requireid"><code>require()</code></a> disponibile per i moduli che non vengono iniettati. Inoltre, non ha nessuna delle proprietà che <a href="/it/nodejs/api/modules#requireid"><code>require()</code></a> non iniettato ha eccetto <a href="/it/nodejs/api/modules#accessing-the-main-module"><code>require.main</code></a>. Può essere utilizzato solo per caricare moduli integrati. Tentare di caricare un modulo che può essere trovato solo nel file system genererà un errore.</p><p>Invece di fare affidamento su un <code>require()</code> basato su file, gli utenti possono raggruppare la propria applicazione in un file JavaScript autonomo da iniettare nell&#39;eseguibile. Ciò garantisce anche un grafico delle dipendenze più deterministico.</p><p>Tuttavia, se è ancora necessario un <code>require()</code> basato su file, è anche possibile ottenerlo:</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">createRequire</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;node:module&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">require </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> createRequire</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(__filename);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="__filename-and-modulefilename-in-the-injected-main-script" tabindex="-1"><code>__filename</code> e <code>module.filename</code> nello script principale iniettato <a class="header-anchor" href="#__filename-and-modulefilename-in-the-injected-main-script" aria-label="Permalink to “__filename e module.filename nello script principale iniettato”">​</a></h3><p>I valori di <code>__filename</code> e <code>module.filename</code> nello script principale iniettato sono uguali a <a href="/it/nodejs/api/process#processexecpath"><code>process.execPath</code></a>.</p><h3 id="__dirname-in-the-injected-main-script" tabindex="-1"><code>__dirname</code> nello script principale iniettato <a class="header-anchor" href="#__dirname-in-the-injected-main-script" aria-label="Permalink to “__dirname nello script principale iniettato”">​</a></h3><p>Il valore di <code>__dirname</code> nello script principale iniettato è uguale al nome della directory di <a href="/it/nodejs/api/process#processexecpath"><code>process.execPath</code></a>.</p><h2 id="notes" tabindex="-1">Note <a class="header-anchor" href="#notes" aria-label="Permalink to “Note”">​</a></h2><h3 id="single-executable-application-creation-process" tabindex="-1">Processo di creazione di un&#39;applicazione eseguibile singola <a class="header-anchor" href="#single-executable-application-creation-process" aria-label="Permalink to “Processo di creazione di un&#39;applicazione eseguibile singola”">​</a></h3><p>Uno strumento che mira a creare un&#39;applicazione Node.js eseguibile singola deve iniettare i contenuti del blob preparato con <code>--experimental-sea-config&quot;</code> in:</p><ul><li>una risorsa chiamata <code>NODE_SEA_BLOB</code> se il binario <code>node</code> è un file <a href="https://en.wikipedia.org/wiki/Portable_Executable" target="_blank" rel="noreferrer">PE</a></li><li>una sezione chiamata <code>NODE_SEA_BLOB</code> nel segmento <code>NODE_SEA</code> se il binario <code>node</code> è un file <a href="https://en.wikipedia.org/wiki/Mach-O" target="_blank" rel="noreferrer">Mach-O</a></li><li>una nota chiamata <code>NODE_SEA_BLOB</code> se il binario <code>node</code> è un file <a href="https://en.wikipedia.org/wiki/Executable_and_Linkable_Format" target="_blank" rel="noreferrer">ELF</a></li></ul><p>Cerca nel binario la stringa <a href="https://www.electronjs.org/docs/latest/tutorial/fuses" target="_blank" rel="noreferrer">fuse</a> <code>NODE_SEA_FUSE_fce680ab2cc467b6e072b8b5df1996b2:0</code> e cambia l&#39;ultimo carattere in <code>1</code> per indicare che una risorsa è stata iniettata.</p><h3 id="platform-support" tabindex="-1">Supporto della piattaforma <a class="header-anchor" href="#platform-support" aria-label="Permalink to “Supporto della piattaforma”">​</a></h3><p>Il supporto per un singolo eseguibile viene testato regolarmente su CI solo sulle seguenti piattaforme:</p><ul><li>Windows</li><li>macOS</li><li>Linux (tutte le distribuzioni <a href="https://github.com/nodejs/node/blob/main/BUILDING.md#platform-list" target="_blank" rel="noreferrer">supportate da Node.js</a> ad eccezione di Alpine e tutte le architetture <a href="https://github.com/nodejs/node/blob/main/BUILDING.md#platform-list" target="_blank" rel="noreferrer">supportate da Node.js</a> ad eccezione di s390x)</li></ul><p>Ciò è dovuto alla mancanza di strumenti migliori per generare singoli eseguibili che possono essere utilizzati per testare questa funzionalità su altre piattaforme.</p><p>Suggerimenti per altri strumenti/flussi di lavoro di iniezione di risorse sono benvenuti. Si prega di avviare una discussione su <a href="https://github.com/nodejs/single-executable/discussions" target="_blank" rel="noreferrer">https://github.com/nodejs/single-executable/discussions</a> per aiutarci a documentarli.</p>`,68)])}var s=e(a,[[`render`,o]]);export{i as __pageData,s as default};