import{__plugin_vue_export_helper_default as e,createElementBlock as t,createStaticVNode as n,openBlock as r}from"./chunks/plugin-vue_export-helper.Bts1mPc7.js";const i=JSON.parse(`{"title":"Documentação do Node.js - Internacionalização","description":"Esta seção da documentação do Node.js aborda o módulo de Internacionalização (Intl), que oferece acesso a várias funcionalidades de internacionalização e localização, incluindo ordenação, formatação de números, datas e horas, e muito mais.","frontmatter":{"title":"Documentação do Node.js - Internacionalização","description":"Esta seção da documentação do Node.js aborda o módulo de Internacionalização (Intl), que oferece acesso a várias funcionalidades de internacionalização e localização, incluindo ordenação, formatação de números, datas e horas, e muito mais.","head":[["meta",{"name":"og:title","content":"Documentação do Node.js - Internacionalização | Node.js - iDoc.dev"}],["meta",{"name":"og:description","content":"Esta seção da documentação do Node.js aborda o módulo de Internacionalização (Intl), que oferece acesso a várias funcionalidades de internacionalização e localização, incluindo ordenação, formatação de números, datas e horas, e muito mais."}],["meta",{"name":"twitter:title","content":"Documentação do Node.js - Internacionalização | Node.js - iDoc.dev"}],["meta",{"name":"twitter:description","content":"Esta seção da documentação do Node.js aborda o módulo de Internacionalização (Intl), que oferece acesso a várias funcionalidades de internacionalização e localização, incluindo ordenação, formatação de números, datas e horas, e muito mais."}],["link",{"rel":"canonical","href":"https://idoc.dev/pt/nodejs/api/intl"}],["meta",{"property":"og:url","content":"https://idoc.dev/pt/nodejs/api/intl"}]]},"headers":[],"relativePath":"pt/nodejs/api/intl.md","filePath":"pt/nodejs/api/intl.md","lastUpdated":1749464498000}`),a={name:`pt/nodejs/api/intl.md`};function o(e,i,a,o,s,c){return r(),t(`div`,null,i[0]||=[n(`<h1 id="internationalization-support" tabindex="-1">Suporte à internacionalização <a class="header-anchor" href="#internationalization-support" aria-label="Permalink to “Suporte à internacionalização”">​</a></h1><p>O Node.js possui muitos recursos que facilitam a escrita de programas internacionalizados. Alguns deles são:</p><ul><li><p>Funções sensíveis à localidade ou compatíveis com Unicode na <a href="https://tc39.github.io/ecma262/" target="_blank" rel="noreferrer">Especificação da Linguagem ECMAScript</a>:</p><ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize" target="_blank" rel="noreferrer"><code>String.prototype.normalize()</code></a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/toLowerCase" target="_blank" rel="noreferrer"><code>String.prototype.toLowerCase()</code></a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/toUpperCase" target="_blank" rel="noreferrer"><code>String.prototype.toUpperCase()</code></a></li></ul></li><li><p>Toda a funcionalidade descrita na <a href="https://tc39.github.io/ecma402/" target="_blank" rel="noreferrer">Especificação da API de Internacionalização ECMAScript</a> (também conhecida como ECMA-402):</p><ul><li>Objeto <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl" target="_blank" rel="noreferrer"><code>Intl</code></a></li><li>Métodos sensíveis à localidade como <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/localeCompare" target="_blank" rel="noreferrer"><code>String.prototype.localeCompare()</code></a> e <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toLocaleString" target="_blank" rel="noreferrer"><code>Date.prototype.toLocaleString()</code></a></li></ul></li><li><p>O suporte a <a href="https://en.wikipedia.org/wiki/Internationalized_domain_name" target="_blank" rel="noreferrer">nomes de domínio internacionalizados</a> (IDNs) do <a href="/pt/nodejs/api/url#the-whatwg-url-api">analisador de URL WHATWG</a></p></li><li><p><a href="/pt/nodejs/api/buffer#buffertranscodesource-fromenc-toenc"><code>require(&#39;node:buffer&#39;).transcode()</code></a></p></li><li><p>Edição de linha <a href="/pt/nodejs/api/repl#repl">REPL</a> mais precisa</p></li><li><p><a href="/pt/nodejs/api/util#class-utiltextdecoder"><code>require(&#39;node:util&#39;).TextDecoder</code></a></p></li><li><p><a href="https://github.com/tc39/proposal-regexp-unicode-property-escapes" target="_blank" rel="noreferrer"><code>RegExp</code> Escapes de Propriedades Unicode</a></p></li></ul><p>O Node.js e o motor V8 subjacente usam <a href="http://site.icu-project.org/" target="_blank" rel="noreferrer">Componentes Internacionais para Unicode (ICU)</a> para implementar esses recursos em código C/C++ nativo. O conjunto de dados ICU completo é fornecido pelo Node.js por padrão. No entanto, devido ao tamanho do arquivo de dados ICU, várias opções são fornecidas para personalizar o conjunto de dados ICU durante a construção ou execução do Node.js.</p><h2 id="options-for-building-nodejs" tabindex="-1">Opções para construir o Node.js <a class="header-anchor" href="#options-for-building-nodejs" aria-label="Permalink to “Opções para construir o Node.js”">​</a></h2><p>Para controlar como o ICU é usado no Node.js, quatro opções de <code>configure</code> estão disponíveis durante a compilação. Detalhes adicionais sobre como compilar o Node.js estão documentados em <a href="https://github.com/nodejs/node/blob/HEAD/BUILDING.md" target="_blank" rel="noreferrer">BUILDING.md</a>.</p><ul><li><code>--with-intl=none</code>/<code>--without-intl</code></li><li><code>--with-intl=system-icu</code></li><li><code>--with-intl=small-icu</code></li><li><code>--with-intl=full-icu</code> (padrão)</li></ul><p>Uma visão geral dos recursos disponíveis do Node.js e JavaScript para cada opção de <code>configure</code>:</p><table tabindex="0"><thead><tr><th>Recurso</th><th><code>none</code></th><th><code>system-icu</code></th><th><code>small-icu</code></th><th><code>full-icu</code></th></tr></thead><tbody><tr><td><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize" target="_blank" rel="noreferrer"><code>String.prototype.normalize()</code></a></td><td>nenhum (a função não faz nada)</td><td>completo</td><td>completo</td><td>completo</td></tr><tr><td><code>String.prototype.to*Case()</code></td><td>completo</td><td>completo</td><td>completo</td><td>completo</td></tr><tr><td><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl" target="_blank" rel="noreferrer"><code>Intl</code></a></td><td>nenhum (o objeto não existe)</td><td>parcial/completo (depende do SO)</td><td>parcial (apenas em inglês)</td><td>completo</td></tr><tr><td><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/localeCompare" target="_blank" rel="noreferrer"><code>String.prototype.localeCompare()</code></a></td><td>parcial (não reconhece a localidade)</td><td>completo</td><td>completo</td><td>completo</td></tr><tr><td><code>String.prototype.toLocale*Case()</code></td><td>parcial (não reconhece a localidade)</td><td>completo</td><td>completo</td><td>completo</td></tr><tr><td><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/toLocaleString" target="_blank" rel="noreferrer"><code>Number.prototype.toLocaleString()</code></a></td><td>parcial (não reconhece a localidade)</td><td>parcial/completo (depende do SO)</td><td>parcial (apenas em inglês)</td><td>completo</td></tr><tr><td><code>Date.prototype.toLocale*String()</code></td><td>parcial (não reconhece a localidade)</td><td>parcial/completo (depende do SO)</td><td>parcial (apenas em inglês)</td><td>completo</td></tr><tr><td><a href="/pt/nodejs/api/url#legacy-url-api">Analisador de URL Legado</a></td><td>parcial (sem suporte a IDN)</td><td>completo</td><td>completo</td><td>completo</td></tr><tr><td><a href="/pt/nodejs/api/url#the-whatwg-url-api">Analisador de URL WHATWG</a></td><td>parcial (sem suporte a IDN)</td><td>completo</td><td>completo</td><td>completo</td></tr><tr><td><a href="/pt/nodejs/api/buffer#buffertranscodesource-fromenc-toenc"><code>require(&#39;node:buffer&#39;).transcode()</code></a></td><td>nenhum (a função não existe)</td><td>completo</td><td>completo</td><td>completo</td></tr><tr><td><a href="/pt/nodejs/api/repl#repl">REPL</a></td><td>parcial (edição de linha imprecisa)</td><td>completo</td><td>completo</td><td>completo</td></tr><tr><td><a href="/pt/nodejs/api/util#class-utiltextdecoder"><code>require(&#39;node:util&#39;).TextDecoder</code></a></td><td>parcial (suporte a codificações básicas)</td><td>parcial/completo (depende do SO)</td><td>parcial (apenas Unicode)</td><td>completo</td></tr><tr><td><a href="https://github.com/tc39/proposal-regexp-unicode-property-escapes" target="_blank" rel="noreferrer"><code>RegExp</code> Unicode Property Escapes</a></td><td>nenhum (erro <code>RegExp</code> inválido)</td><td>completo</td><td>completo</td><td>completo</td></tr><tr><td>A designação &quot;(não reconhece a localidade)&quot; denota que a função executa sua operação da mesma forma que a versão não-<code>Locale</code> da função, se existir. Por exemplo, no modo <code>none</code>, a operação de <code>Date.prototype.toLocaleString()</code> é idêntica à de <code>Date.prototype.toString()</code>.</td><td></td><td></td><td></td><td></td></tr></tbody></table><h3 id="disable-all-internationalization-features-none" tabindex="-1">Desativar todos os recursos de internacionalização (<code>none</code>) <a class="header-anchor" href="#disable-all-internationalization-features-none" aria-label="Permalink to “Desativar todos os recursos de internacionalização (none)”">​</a></h3><p>Se esta opção for escolhida, o ICU será desativado e a maioria dos recursos de internacionalização mencionados acima <strong>não estarão disponíveis</strong> no binário <code>node</code> resultante.</p><h3 id="build-with-a-pre-installed-icu-system-icu" tabindex="-1">Construir com um ICU pré-instalado (<code>system-icu</code>) <a class="header-anchor" href="#build-with-a-pre-installed-icu-system-icu" aria-label="Permalink to “Construir com um ICU pré-instalado (system-icu)”">​</a></h3><p>O Node.js pode ser vinculado a uma versão do ICU já instalada no sistema. De fato, a maioria das distribuições Linux já vem com o ICU instalado, e essa opção possibilitaria reutilizar o mesmo conjunto de dados usado por outros componentes no sistema operacional.</p><p>Funcionalidades que requerem apenas a biblioteca ICU em si, como <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize" target="_blank" rel="noreferrer"><code>String.prototype.normalize()</code></a> e o <a href="/pt/nodejs/api/url#the-whatwg-url-api">analisador de URL WHATWG</a>, são totalmente suportadas em <code>system-icu</code>. Recursos que também exigem dados de localidade do ICU, como <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat" target="_blank" rel="noreferrer"><code>Intl.DateTimeFormat</code></a> <em>podem</em> ser total ou parcialmente suportados, dependendo da integridade dos dados do ICU instalados no sistema.</p><h3 id="embed-a-limited-set-of-icu-data-small-icu" tabindex="-1">Incorporar um conjunto limitado de dados do ICU (<code>small-icu</code>) <a class="header-anchor" href="#embed-a-limited-set-of-icu-data-small-icu" aria-label="Permalink to “Incorporar um conjunto limitado de dados do ICU (small-icu)”">​</a></h3><p>Esta opção faz com que o binário resultante seja vinculado à biblioteca ICU estaticamente e inclui um subconjunto de dados do ICU (normalmente apenas a localidade em inglês) dentro do executável <code>node</code>.</p><p>Funcionalidades que requerem apenas a biblioteca ICU em si, como <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize" target="_blank" rel="noreferrer"><code>String.prototype.normalize()</code></a> e o <a href="/pt/nodejs/api/url#the-whatwg-url-api">analisador de URL WHATWG</a>, são totalmente suportadas em <code>small-icu</code>. Recursos que também exigem dados de localidade do ICU, como <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat" target="_blank" rel="noreferrer"><code>Intl.DateTimeFormat</code></a>, geralmente funcionam apenas com a localidade em inglês:</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> january</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Date</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">9e8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> english</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Intl.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">DateTimeFormat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;en&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, { month: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;long&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> });</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> spanish</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Intl.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">DateTimeFormat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;es&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, { month: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;long&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> });</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(english.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">format</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(january));</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Prints &quot;January&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(spanish.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">format</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(january));</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Prints either &quot;M01&quot; or &quot;January&quot; on small-icu, depending on the user’s default locale</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Should print &quot;enero&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>Este modo fornece um equilíbrio entre recursos e tamanho do binário.</p><h4 id="providing-icu-data-at-runtime" tabindex="-1">Fornecendo dados da ICU em tempo de execução <a class="header-anchor" href="#providing-icu-data-at-runtime" aria-label="Permalink to “Fornecendo dados da ICU em tempo de execução”">​</a></h4><p>Se a opção <code>small-icu</code> for usada, ainda é possível fornecer dados adicionais de localidade em tempo de execução para que os métodos JS funcionem para todas as localidades da ICU. Supondo que o arquivo de dados esteja armazenado em <code>/runtime/directory/with/dat/file</code>, ele pode ser disponibilizado para a ICU por meio de:</p><ul><li>A opção de configuração <code>--with-icu-default-data-dir</code>: Isso apenas incorpora o caminho do diretório de dados padrão no binário. O arquivo de dados real será carregado em tempo de execução a partir desse caminho de diretório.</li><li>A variável de ambiente <a href="/pt/nodejs/api/cli#node-icu-datafile"><code>NODE_ICU_DATA</code></a>:</li><li>O parâmetro CLI <a href="/pt/nodejs/api/cli#icu-data-dirfile"><code>--icu-data-dir</code></a>:</li></ul><p>Quando mais de um deles é especificado, o parâmetro CLI <code>--icu-data-dir</code> tem a maior precedência, seguido pela variável de ambiente <code>NODE_ICU_DATA</code> e, em seguida, a opção de configuração <code>--with-icu-default-data-dir</code>.</p><p>A ICU é capaz de encontrar e carregar automaticamente uma variedade de formatos de dados, mas os dados devem ser apropriados para a versão da ICU e o arquivo deve ser nomeado corretamente. O nome mais comum para o arquivo de dados é <code>icudtX[bl].dat</code>, onde <code>X</code> denota a versão pretendida da ICU e <code>b</code> ou <code>l</code> indica o endianness do sistema. O Node.js falhará ao carregar se o arquivo de dados esperado não puder ser lido no diretório especificado. O nome do arquivo de dados correspondente à versão atual do Node.js pode ser calculado com:</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`icudt\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">process</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">versions</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">icu</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">split</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;.&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">)[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">]</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">os</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">endianness</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">()[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">].</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toLowerCase</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">()</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}.dat\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Consulte o artigo <a href="http://userguide.icu-project.org/icudata" target="_blank" rel="noreferrer">&quot;Dados da ICU&quot;</a> no Guia do Usuário da ICU para outros formatos suportados e mais detalhes sobre os dados da ICU em geral.</p><p>O módulo npm <a href="https://www.npmjs.com/package/full-icu" target="_blank" rel="noreferrer">full-icu</a> pode simplificar muito a instalação de dados da ICU, detectando a versão da ICU do executável <code>node</code> em execução e baixando o arquivo de dados apropriado. Depois de instalar o módulo através de <code>npm i full-icu</code>, o arquivo de dados estará disponível em <code>./node_modules/full-icu</code>. Este caminho pode então ser passado para <code>NODE_ICU_DATA</code> ou <code>--icu-data-dir</code> como mostrado acima para habilitar o suporte completo a <code>Intl</code>.</p><h3 id="embed-the-entire-icu-full-icu" tabindex="-1">Incorporar todo o ICU (<code>full-icu</code>) <a class="header-anchor" href="#embed-the-entire-icu-full-icu" aria-label="Permalink to “Incorporar todo o ICU (full-icu)”">​</a></h3><p>Esta opção faz com que o binário resultante se vincule ao ICU estaticamente e inclua um conjunto completo de dados do ICU. Um binário criado desta forma não tem mais dependências externas e suporta todas as localidades, mas pode ser bastante grande. Este é o comportamento padrão se nenhum sinalizador <code>--with-intl</code> for passado. Os binários oficiais também são construídos neste modo.</p><h2 id="detecting-internationalization-support" tabindex="-1">Detectando suporte à internacionalização <a class="header-anchor" href="#detecting-internationalization-support" aria-label="Permalink to “Detectando suporte à internacionalização”">​</a></h2><p>Para verificar se o ICU está ativado (<code>system-icu</code>, <code>small-icu</code> ou <code>full-icu</code>), simplesmente verificar a existência de <code>Intl</code> deve ser suficiente:</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> hasICU</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> typeof</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Intl </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">===</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;object&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Alternativamente, verificar <code>process.versions.icu</code>, uma propriedade definida apenas quando o ICU está habilitado, também funciona:</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> hasICU</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> typeof</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> process.versions.icu </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">===</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;string&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Para verificar o suporte a uma localidade que não seja inglês (ou seja, <code>full-icu</code> ou <code>system-icu</code>), <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat" target="_blank" rel="noreferrer"><code>Intl.DateTimeFormat</code></a> pode ser um bom fator de distinção:</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> hasFullICU</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  try</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> january</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Date</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">9e8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> spanish</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Intl.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">DateTimeFormat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;es&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, { month: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;long&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> });</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> spanish.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">format</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(january) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">===</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;enero&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">catch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (err) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})();</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>Para testes mais verbosos de suporte a <code>Intl</code>, os seguintes recursos podem ser úteis:</p><ul><li><a href="https://github.com/srl295/btest402" target="_blank" rel="noreferrer">btest402</a>: Geralmente usado para verificar se o Node.js com suporte a <code>Intl</code> foi construído corretamente.</li><li><a href="https://github.com/tc39/test262/tree/HEAD/test/intl402" target="_blank" rel="noreferrer">Test262</a>: O conjunto de testes de conformidade oficial do ECMAScript inclui uma seção dedicada ao ECMA-402.</li></ul>`,38)])}var s=e(a,[[`render`,o]]);export{i as __pageData,s as default};