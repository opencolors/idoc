import{__plugin_vue_export_helper_default as e,createElementBlock as t,createStaticVNode as n,openBlock as r}from"./chunks/plugin-vue_export-helper.Bts1mPc7.js";const i=JSON.parse(`{"title":"Node.js で環境変数を読み取る方法","description":"process.env プロパティと .env ファイルを使用して Node.js で環境変数にアクセスする方法を学びます。","frontmatter":{"title":"Node.js で環境変数を読み取る方法","description":"process.env プロパティと .env ファイルを使用して Node.js で環境変数にアクセスする方法を学びます。","head":[["meta",{"name":"og:title","content":"Node.js で環境変数を読み取る方法 | Node.js - iDoc.dev"}],["meta",{"name":"og:description","content":"process.env プロパティと .env ファイルを使用して Node.js で環境変数にアクセスする方法を学びます。"}],["meta",{"name":"twitter:title","content":"Node.js で環境変数を読み取る方法 | Node.js - iDoc.dev"}],["meta",{"name":"twitter:description","content":"process.env プロパティと .env ファイルを使用して Node.js で環境変数にアクセスする方法を学びます。"}],["link",{"rel":"canonical","href":"https://idoc.dev/ja/nodejs/guide/how-to-read-environment-variables-from-nodejs"}],["meta",{"property":"og:url","content":"https://idoc.dev/ja/nodejs/guide/how-to-read-environment-variables-from-nodejs"}]]},"headers":[],"relativePath":"ja/nodejs/guide/how-to-read-environment-variables-from-nodejs.md","filePath":"ja/nodejs/guide/how-to-read-environment-variables-from-nodejs.md","lastUpdated":1749464498000}`),a={name:`ja/nodejs/guide/how-to-read-environment-variables-from-nodejs.md`};function o(e,i,a,o,s,c){return r(),t(`div`,null,i[0]||=[n(`<h1 id="node-js-で環境変数を読み取る方法" tabindex="-1">Node.js で環境変数を読み取る方法 <a class="header-anchor" href="#node-js-で環境変数を読み取る方法" aria-label="Permalink to “Node.js で環境変数を読み取る方法”">​</a></h1><p>Node.js の process コアモジュールは、プロセスが開始された時点で設定されていたすべての環境変数をホストする <code>env</code> プロパティを提供します。</p><p>以下のコードは <code>app.js</code> を実行し、<code>USER_ID</code> と <code>USER_KEY</code> を設定します。</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">USER_ID</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">239482</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> USER_KEY</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">foobar</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> node</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> app.js</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>これにより、ユーザー <code>USER_ID</code> は 239482 として、<code>USER_KEY</code> は foobar として渡されます。これはテストに適していますが、本番環境では、変数をエクスポートするためにいくつかの bash スクリプトを構成するでしょう。</p><div class="tip custom-block"><p class="custom-block-title">NOTE</p><p><code>process</code> は <code>&quot;require&quot;</code> を必要としません。自動的に利用可能です。</p></div><p>以下は、上記のコードで設定した <code>USER_ID</code> と <code>USER_KEY</code> 環境変数にアクセスする例です。</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">process.env.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">USER_ID</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &quot;239482</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">process.env.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">USER_KEY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &quot;foobar</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>同様の方法で、設定したカスタム環境変数にアクセスできます。 Node.js 20 では、実験的な <a href="/ja/nodejs/api/cli#env-file-config">.env ファイルのサポート</a>が導入されました。</p><p><code>--env-file</code> フラグを使用して、Node.js アプリケーションの実行時に環境ファイルを指定できます。以下に <code>.env</code> ファイルの例と、<code>process.env</code> を使用してその変数にアクセスする方法を示します。</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.env</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> file</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">PORT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">3000</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>js ファイル内</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">process.env.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PORT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 3000</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><code>.env</code> ファイルで設定された環境変数を使用して <code>app.js</code> ファイルを実行します。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">node </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">env</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">file</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.env app.js</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>このコマンドは、<code>.env</code> ファイルからすべての環境変数をロードし、<code>process.env</code> でアプリケーションから利用できるようにします。 また、複数の --env-file 引数を渡すことができます。 後続のファイルは、以前のファイルで定義された既存の変数を上書きします。</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">node</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --env-file=.env</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --env-file=.development.env</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> app.js</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="tip custom-block"><p class="custom-block-title">NOTE</p><p>同じ変数が環境とファイルの両方で定義されている場合、環境からの値が優先されます。</p></div>`,18)])}var s=e(a,[[`render`,o]]);export{i as __pageData,s as default};