import{__plugin_vue_export_helper_default as e,createElementBlock as t,createStaticVNode as n,openBlock as r}from"./chunks/plugin-vue_export-helper.Bts1mPc7.js";const i=JSON.parse(`{"title":"Publicar um pacote Node-API","description":"Saiba como publicar uma versão Node-API de um pacote ao lado de uma versão não Node-API e como introduzir uma dependência a uma versão Node-API de um pacote.","frontmatter":{"title":"Publicar um pacote Node-API","description":"Saiba como publicar uma versão Node-API de um pacote ao lado de uma versão não Node-API e como introduzir uma dependência a uma versão Node-API de um pacote.","head":[["meta",{"name":"og:title","content":"Publicar um pacote Node-API | Node.js - iDoc.dev"}],["meta",{"name":"og:description","content":"Saiba como publicar uma versão Node-API de um pacote ao lado de uma versão não Node-API e como introduzir uma dependência a uma versão Node-API de um pacote."}],["meta",{"name":"twitter:title","content":"Publicar um pacote Node-API | Node.js - iDoc.dev"}],["meta",{"name":"twitter:description","content":"Saiba como publicar uma versão Node-API de um pacote ao lado de uma versão não Node-API e como introduzir uma dependência a uma versão Node-API de um pacote."}],["link",{"rel":"canonical","href":"https://idoc.dev/pt/nodejs/guide/how-to-publish-a-nodejs-package"}],["meta",{"property":"og:url","content":"https://idoc.dev/pt/nodejs/guide/how-to-publish-a-nodejs-package"}]]},"headers":[],"relativePath":"pt/nodejs/guide/how-to-publish-a-nodejs-package.md","filePath":"pt/nodejs/guide/how-to-publish-a-nodejs-package.md","lastUpdated":1749464498000}`),a={name:`pt/nodejs/guide/how-to-publish-a-nodejs-package.md`};function o(e,i,a,o,s,c){return r(),t(`div`,null,i[0]||=[n(`<h1 id="como-publicar-um-pacote-node-api" tabindex="-1">Como publicar um pacote Node-API <a class="header-anchor" href="#como-publicar-um-pacote-node-api" aria-label="Permalink to “Como publicar um pacote Node-API”">​</a></h1><h2 id="como-publicar-uma-versao-node-api-de-um-pacote-juntamente-com-uma-versao-nao-node-api" tabindex="-1">Como publicar uma versão Node-API de um pacote juntamente com uma versão não Node-API <a class="header-anchor" href="#como-publicar-uma-versao-node-api-de-um-pacote-juntamente-com-uma-versao-nao-node-api" aria-label="Permalink to “Como publicar uma versão Node-API de um pacote juntamente com uma versão não Node-API”">​</a></h2><p>As etapas a seguir são ilustradas usando o pacote <code>iotivity-node</code>:</p><ul><li><p>Primeiro, publique a versão não Node-API:</p><ul><li>Atualize a versão em <code>package.json</code>. Para <code>iotivity-node</code>, a versão se torna 1.2.0-2.</li><li>Passe pela lista de verificação de lançamento (garanta que testes/demos/docs estejam OK).</li><li><code>npm publish</code>.</li></ul></li><li><p>Em seguida, publique a versão Node-API:</p><ul><li>Atualize a versão em <code>package.json</code>. No caso de <code>iotivity-node</code>, a versão se torna 1.2.0-3. Para controle de versão, recomendamos seguir o esquema de versão de pré-lançamento conforme descrito por <a href="https://semver.org" target="_blank" rel="noreferrer">semver.org</a>, por exemplo, 1.2.0-napi.</li><li>Passe pela lista de verificação de lançamento (garanta que testes/demos/docs estejam OK).</li><li><code>npm publish --tag n-api</code>.</li></ul></li></ul><p>Neste exemplo, marcar o lançamento com <code>n-api</code> garantiu que, embora a versão 1.2.0-3 seja posterior à versão não Node-API publicada (1.2.0-2), ela não será instalada se alguém optar por instalar <code>iotivity-node</code> simplesmente executando <code>npm install iotivity-node</code>. Isso instalará a versão não Node-API por padrão. O usuário terá que executar <code>npm install iotivity-node@n api</code> para receber a versão Node-API. Para obter mais informações sobre como usar tags com npm, confira &quot;Usando dist-tags&quot;.</p><h2 id="como-introduzir-uma-dependencia-em-uma-versao-node-api-de-um-pacote" tabindex="-1">Como introduzir uma dependência em uma versão Node-API de um pacote <a class="header-anchor" href="#como-introduzir-uma-dependencia-em-uma-versao-node-api-de-um-pacote" aria-label="Permalink to “Como introduzir uma dependência em uma versão Node-API de um pacote”">​</a></h2><p>Para adicionar a versão Node-API de <code>iotivity-node</code> como uma dependência, o <code>package.json</code> ficará assim:</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;dependencies&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;iotivity-node&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;n-api&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>Conforme explicado em &quot;Usando dist-tags&quot;, ao contrário das versões regulares, as versões marcadas não podem ser endereçadas por intervalos de versão como <code>&quot;^2.0.0&quot;</code> dentro de <code>package.json</code>. A razão para isso é que a tag se refere a exatamente uma versão. Portanto, se o mantenedor do pacote optar por marcar uma versão posterior do pacote usando a mesma tag, <code>npm update</code> receberá a versão posterior. Isso deve ser uma versão aceitável diferente da mais recente publicada, a dependência <code>package.json</code> terá que se referir à versão exata como a seguinte:</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;dependencies&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;iotivity-node&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;1.2.0-3&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>`,10)])}var s=e(a,[[`render`,o]]);export{i as __pageData,s as default};