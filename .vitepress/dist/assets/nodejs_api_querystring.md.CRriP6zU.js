import{__plugin_vue_export_helper_default as e,createElementBlock as t,createStaticVNode as n,openBlock as r}from"./chunks/plugin-vue_export-helper.Bts1mPc7.js";const i=JSON.parse(`{"title":"Node.js Documentation - Query String","description":"This section of the Node.js documentation details the querystring module, which provides utilities for parsing and formatting URL query strings. It includes methods for escaping and unescaping special characters, handling nested objects, and managing query string serialization.","frontmatter":{"title":"Node.js Documentation - Query String","description":"This section of the Node.js documentation details the querystring module, which provides utilities for parsing and formatting URL query strings. It includes methods for escaping and unescaping special characters, handling nested objects, and managing query string serialization.","head":[["meta",{"name":"og:title","content":"Node.js Documentation - Query String | Node.js - iDoc.dev"}],["meta",{"name":"og:description","content":"This section of the Node.js documentation details the querystring module, which provides utilities for parsing and formatting URL query strings. It includes methods for escaping and unescaping special characters, handling nested objects, and managing query string serialization."}],["meta",{"name":"twitter:title","content":"Node.js Documentation - Query String | Node.js - iDoc.dev"}],["meta",{"name":"twitter:description","content":"This section of the Node.js documentation details the querystring module, which provides utilities for parsing and formatting URL query strings. It includes methods for escaping and unescaping special characters, handling nested objects, and managing query string serialization."}],["link",{"rel":"canonical","href":"https://idoc.dev/nodejs/api/querystring"}],["meta",{"property":"og:url","content":"https://idoc.dev/nodejs/api/querystring"}]]},"headers":[],"relativePath":"nodejs/api/querystring.md","filePath":"en/nodejs/api/querystring.md","lastUpdated":1749464498000}`),a={name:`nodejs/api/querystring.md`};function o(e,i,a,o,s,c){return r(),t(`div`,null,i[0]||=[n(`<h1 id="query-string" tabindex="-1">Query string <a class="header-anchor" href="#query-string" aria-label="Permalink to “Query string”">​</a></h1><div class="tip custom-block"><p class="custom-block-title">[Stable: 2 - Stable]</p><p><a href="/nodejs/api/documentation#stability-index">Stable: 2</a> <a href="/nodejs/api/documentation#stability-index">Stability: 2</a> - Stable</p></div><p><strong>Source Code:</strong> <a href="https://github.com/nodejs/node/blob/v23.8.0/lib/querystring.js" target="_blank" rel="noreferrer">lib/querystring.js</a></p><p>The <code>node:querystring</code> module provides utilities for parsing and formatting URL query strings. It can be accessed using:</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> querystring</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;node:querystring&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><code>querystring</code> is more performant than <a href="/nodejs/api/url#class-urlsearchparams">&lt;URLSearchParams&gt;</a> but is not a standardized API. Use <a href="/nodejs/api/url#class-urlsearchparams">&lt;URLSearchParams&gt;</a> when performance is not critical or when compatibility with browser code is desirable.</p><h2 id="querystringdecode" tabindex="-1"><code>querystring.decode()</code> <a class="header-anchor" href="#querystringdecode" aria-label="Permalink to “querystring.decode()”">​</a></h2><p><strong>Added in: v0.1.99</strong></p><p>The <code>querystring.decode()</code> function is an alias for <code>querystring.parse()</code>.</p><h2 id="querystringencode" tabindex="-1"><code>querystring.encode()</code> <a class="header-anchor" href="#querystringencode" aria-label="Permalink to “querystring.encode()”">​</a></h2><p><strong>Added in: v0.1.99</strong></p><p>The <code>querystring.encode()</code> function is an alias for <code>querystring.stringify()</code>.</p><h2 id="querystringescapestr" tabindex="-1"><code>querystring.escape(str)</code> <a class="header-anchor" href="#querystringescapestr" aria-label="Permalink to “querystring.escape(str)”">​</a></h2><p><strong>Added in: v0.1.25</strong></p><ul><li><code>str</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a></li></ul><p>The <code>querystring.escape()</code> method performs URL percent-encoding on the given <code>str</code> in a manner that is optimized for the specific requirements of URL query strings.</p><p>The <code>querystring.escape()</code> method is used by <code>querystring.stringify()</code> and is generally not expected to be used directly. It is exported primarily to allow application code to provide a replacement percent-encoding implementation if necessary by assigning <code>querystring.escape</code> to an alternative function.</p><h2 id="querystringparsestr-sep-eq-options" tabindex="-1"><code>querystring.parse(str[, sep[, eq[, options]]])</code> <a class="header-anchor" href="#querystringparsestr-sep-eq-options" aria-label="Permalink to “querystring.parse(str[, sep[, eq[, options]]])”">​</a></h2><div class="info custom-block"><p class="custom-block-title">[History]</p><table tabindex="0"><thead><tr><th>Version</th><th>Changes</th></tr></thead><tbody><tr><td>v8.0.0</td><td>Multiple empty entries are now parsed correctly (e.g. <code>&amp;=&amp;=</code>).</td></tr><tr><td>v6.0.0</td><td>The returned object no longer inherits from <code>Object.prototype</code>.</td></tr><tr><td>v6.0.0, v4.2.4</td><td>The <code>eq</code> parameter may now have a length of more than <code>1</code>.</td></tr><tr><td>v0.1.25</td><td>Added in: v0.1.25</td></tr></tbody></table></div><ul><li><code>str</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> The URL query string to parse</li><li><code>sep</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> The substring used to delimit key and value pairs in the query string. <strong>Default:</strong> <code>&#39;&amp;&#39;</code>.</li><li><code>eq</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a>. The substring used to delimit keys and values in the query string. <strong>Default:</strong> <code>&#39;=&#39;</code>.</li><li><code>options</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object&gt;</a><ul><li><code>decodeURIComponent</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function" target="_blank" rel="noreferrer">&lt;Function&gt;</a> The function to use when decoding percent-encoded characters in the query string. <strong>Default:</strong> <code>querystring.unescape()</code>.</li><li><code>maxKeys</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type" target="_blank" rel="noreferrer">&lt;number&gt;</a> Specifies the maximum number of keys to parse. Specify <code>0</code> to remove key counting limitations. <strong>Default:</strong> <code>1000</code>.</li></ul></li></ul><p>The <code>querystring.parse()</code> method parses a URL query string (<code>str</code>) into a collection of key and value pairs.</p><p>For example, the query string <code>&#39;foo=bar&amp;abc=xyz&amp;abc=123&#39;</code> is parsed into:</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;foo&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;bar&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;abc&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;xyz&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;123&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>The object returned by the <code>querystring.parse()</code> method <em>does not</em> prototypically inherit from the JavaScript <code>Object</code>. This means that typical <code>Object</code> methods such as <code>obj.toString()</code>, <code>obj.hasOwnProperty()</code>, and others are not defined and <em>will not work</em>.</p><p>By default, percent-encoded characters within the query string will be assumed to use UTF-8 encoding. If an alternative character encoding is used, then an alternative <code>decodeURIComponent</code> option will need to be specified:</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Assuming gbkDecodeURIComponent function already exists...</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">querystring.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">parse</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;w=%D6%D0%CE%C4&amp;foo=bar&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                  { decodeURIComponent: gbkDecodeURIComponent });</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="querystringstringifyobj-sep-eq-options" tabindex="-1"><code>querystring.stringify(obj[, sep[, eq[, options]]])</code> <a class="header-anchor" href="#querystringstringifyobj-sep-eq-options" aria-label="Permalink to “querystring.stringify(obj[, sep[, eq[, options]]])”">​</a></h2><p><strong>Added in: v0.1.25</strong></p><ul><li><code>obj</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object&gt;</a> The object to serialize into a URL query string</li><li><code>sep</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> The substring used to delimit key and value pairs in the query string. <strong>Default:</strong> <code>&#39;&amp;&#39;</code>.</li><li><code>eq</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a>. The substring used to delimit keys and values in the query string. <strong>Default:</strong> <code>&#39;=&#39;</code>.</li><li><code>options</code><ul><li><code>encodeURIComponent</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function" target="_blank" rel="noreferrer">&lt;Function&gt;</a> The function to use when converting URL-unsafe characters to percent-encoding in the query string. <strong>Default:</strong> <code>querystring.escape()</code>.</li></ul></li></ul><p>The <code>querystring.stringify()</code> method produces a URL query string from a given <code>obj</code> by iterating through the object&#39;s &quot;own properties&quot;.</p><p>It serializes the following types of values passed in <code>obj</code>: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type" target="_blank" rel="noreferrer">&lt;number&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt" target="_blank" rel="noreferrer">&lt;bigint&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type" target="_blank" rel="noreferrer">&lt;boolean&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string[]&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type" target="_blank" rel="noreferrer">&lt;number[]&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt" target="_blank" rel="noreferrer">&lt;bigint[]&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type" target="_blank" rel="noreferrer">&lt;boolean[]&gt;</a> The numeric values must be finite. Any other input values will be coerced to empty strings.</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">querystring.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">stringify</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ foo: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;bar&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, baz: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;qux&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;quux&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], corge: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> });</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Returns &#39;foo=bar&amp;baz=qux&amp;baz=quux&amp;corge=&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">querystring.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">stringify</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ foo: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;bar&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, baz: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;qux&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Returns &#39;foo:bar;baz:qux&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>By default, characters requiring percent-encoding within the query string will be encoded as UTF-8. If an alternative encoding is required, then an alternative <code>encodeURIComponent</code> option will need to be specified:</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Assuming gbkEncodeURIComponent function already exists,</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">querystring.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">stringify</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ w: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;中文&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, foo: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;bar&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                      { encodeURIComponent: gbkEncodeURIComponent });</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="querystringunescapestr" tabindex="-1"><code>querystring.unescape(str)</code> <a class="header-anchor" href="#querystringunescapestr" aria-label="Permalink to “querystring.unescape(str)”">​</a></h2><p><strong>Added in: v0.1.25</strong></p><ul><li><code>str</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a></li></ul><p>The <code>querystring.unescape()</code> method performs decoding of URL percent-encoded characters on the given <code>str</code>.</p><p>The <code>querystring.unescape()</code> method is used by <code>querystring.parse()</code> and is generally not expected to be used directly. It is exported primarily to allow application code to provide a replacement decoding implementation if necessary by assigning <code>querystring.unescape</code> to an alternative function.</p><p>By default, the <code>querystring.unescape()</code> method will attempt to use the JavaScript built-in <code>decodeURIComponent()</code> method to decode. If that fails, a safer equivalent that does not throw on malformed URLs will be used.</p>`,40)])}var s=e(a,[[`render`,o]]);export{i as __pageData,s as default};