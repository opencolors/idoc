import{__plugin_vue_export_helper_default as e,createElementBlock as t,createStaticVNode as n,openBlock as r}from"./chunks/plugin-vue_export-helper.Bts1mPc7.js";const i=JSON.parse(`{"title":"الحصول على إدخال المستخدم في Node.js","description":"تعلم كيفية إنشاء برامج تفاعل سطر الأوامر في Node.js باستخدام وحدة readline وحزمة Inquirer.js.","frontmatter":{"title":"الحصول على إدخال المستخدم في Node.js","description":"تعلم كيفية إنشاء برامج تفاعل سطر الأوامر في Node.js باستخدام وحدة readline وحزمة Inquirer.js.","head":[["meta",{"name":"og:title","content":"الحصول على إدخال المستخدم في Node.js | Node.js - iDoc.dev"}],["meta",{"name":"og:description","content":"تعلم كيفية إنشاء برامج تفاعل سطر الأوامر في Node.js باستخدام وحدة readline وحزمة Inquirer.js."}],["meta",{"name":"twitter:title","content":"الحصول على إدخال المستخدم في Node.js | Node.js - iDoc.dev"}],["meta",{"name":"twitter:description","content":"تعلم كيفية إنشاء برامج تفاعل سطر الأوامر في Node.js باستخدام وحدة readline وحزمة Inquirer.js."}],["link",{"rel":"canonical","href":"https://idoc.dev/ar/nodejs/guide/accept-input-from-the-command-line-in-nodejs"}],["meta",{"property":"og:url","content":"https://idoc.dev/ar/nodejs/guide/accept-input-from-the-command-line-in-nodejs"}]]},"headers":[],"relativePath":"ar/nodejs/guide/accept-input-from-the-command-line-in-nodejs.md","filePath":"ar/nodejs/guide/accept-input-from-the-command-line-in-nodejs.md","lastUpdated":1749464498000}`),a={name:`ar/nodejs/guide/accept-input-from-the-command-line-in-nodejs.md`};function o(e,i,a,o,s,c){return r(),t(`div`,null,i[0]||=[n(`<h1 id="قبول-المدخلات-من-سطر-الأوامر-في-node-js" tabindex="-1">قبول المدخلات من سطر الأوامر في Node.js <a class="header-anchor" href="#قبول-المدخلات-من-سطر-الأوامر-في-node-js" aria-label="Permalink to “قبول المدخلات من سطر الأوامر في Node.js”">​</a></h1><p>كيف تجعل برنامج Node.js CLI تفاعليًا؟</p><p>يوفر Node.js منذ الإصدار 7 وحدة <code>readline</code> للقيام بذلك بالضبط: الحصول على مدخلات من دفق قابل للقراءة مثل دفق <code>process.stdin</code>، والذي يكون أثناء تنفيذ برنامج Node.js هو إدخال المحطة الطرفية، سطر واحد في كل مرة.</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> readline</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;node:readline&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> rl</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> readline.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createInterface</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    input: process.stdin,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    output: process.stdout</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">rl.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">question</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;What&#39;s your name?&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Hi &#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;!&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    rl.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">close</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>تسأل هذه الشيفرة اسم المستخدم، وبمجرد إدخال النص وضغط المستخدم على إدخال، نرسل تحية.</p><p>تعرض طريقة <code>question()</code> المعلمة الأولى (سؤال) وتنتظر إدخال المستخدم. ثم تستدعي وظيفة رد الاتصال بمجرد الضغط على إدخال.</p><p>في وظيفة رد الاتصال هذه، نقوم بإغلاق واجهة القراءة.</p><p>توفر <code>readline</code> العديد من الطرق الأخرى، يرجى التحقق منها في وثائق الحزمة المرتبطة أعلاه.</p><p>إذا كنت بحاجة إلى طلب كلمة مرور، فمن الأفضل عدم إعادتها، ولكن بدلاً من ذلك إظهار رمز *.</p><p>أبسط طريقة هي استخدام حزمة readline-sync والتي تشبه إلى حد كبير واجهة برمجة التطبيقات وتعالج هذا الأمر خارج الصندوق. يتم توفير حل أكثر اكتمالًا وتجريدًا بواسطة حزمة Inquirer.js.</p><p>يمكنك تثبيته باستخدام <code>npm install inquirer</code>، وبعد ذلك يمكنك تكرار الشيفرة أعلاه مثل هذا:</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> inquirer</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;inquirer&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> questions</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        type: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;input&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;name&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        message: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;what&#39;s your name?&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">];</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">inquirer.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">prompt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(questions).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">then</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">answers</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Hi &#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> answers.name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;!&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>تتيح لك <code>Inquirer.js</code> القيام بأشياء كثيرة مثل طرح خيارات متعددة، والحصول على أزرار راديو، والتأكيدات، والمزيد.</p><p>يجدر معرفة جميع البدائل، وخاصة البدائل المدمجة التي توفرها Node.js، ولكن إذا كنت تخطط لنقل إدخال CLI إلى المستوى التالي، فإن <code>Inquirer.js</code> هو خيار أمثل.</p>`,14)])}var s=e(a,[[`render`,o]]);export{i as __pageData,s as default};