import{__plugin_vue_export_helper_default as e,createElementBlock as t,createStaticVNode as n,openBlock as r}from"./chunks/plugin-vue_export-helper.Bts1mPc7.js";const i=JSON.parse(`{"title":"Анализ производительности приложений Node.js","description":"Узнайте, как использовать встроенный профилировщик Node.js для выявления узких мест в производительности вашего приложения и улучшения его производительности.","frontmatter":{"title":"Анализ производительности приложений Node.js","description":"Узнайте, как использовать встроенный профилировщик Node.js для выявления узких мест в производительности вашего приложения и улучшения его производительности.","head":[["meta",{"name":"og:title","content":"Анализ производительности приложений Node.js | Node.js - iDoc.dev"}],["meta",{"name":"og:description","content":"Узнайте, как использовать встроенный профилировщик Node.js для выявления узких мест в производительности вашего приложения и улучшения его производительности."}],["meta",{"name":"twitter:title","content":"Анализ производительности приложений Node.js | Node.js - iDoc.dev"}],["meta",{"name":"twitter:description","content":"Узнайте, как использовать встроенный профилировщик Node.js для выявления узких мест в производительности вашего приложения и улучшения его производительности."}],["link",{"rel":"canonical","href":"https://idoc.dev/ru/nodejs/guide/profiling-nodejs-applications"}],["meta",{"property":"og:url","content":"https://idoc.dev/ru/nodejs/guide/profiling-nodejs-applications"}]]},"headers":[],"relativePath":"ru/nodejs/guide/profiling-nodejs-applications.md","filePath":"ru/nodejs/guide/profiling-nodejs-applications.md","lastUpdated":null}`),a={name:`ru/nodejs/guide/profiling-nodejs-applications.md`};function o(e,i,a,o,s,c){return r(),t(`div`,null,i[0]||=[n(`<h1 id="профилирование-node-js-приложении" tabindex="-1">Профилирование Node.js приложений <a class="header-anchor" href="#профилирование-node-js-приложении" aria-label="Permalink to “Профилирование Node.js приложений”">​</a></h1><p>Существует множество сторонних инструментов для профилирования Node.js приложений, но во многих случаях самым простым вариантом является использование встроенного профилировщика Node.js. Встроенный профилировщик использует <a href="https://v8.dev/docs/profile" target="_blank" rel="noreferrer">профилировщик внутри V8</a>, который периодически считывает стек во время выполнения программы. Он записывает результаты этих выборок, а также важные события оптимизации, такие как JIT-компиляция, в виде серии тиков:</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">code-creation,LazyCompile,0,0x2d5000a337a0,396,</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;bp native array.js:1153:16&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">,0x289f644df68,~</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">code-creation,LazyCompile,0,0x2d5000a33940,716,</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;hasOwnProperty native v8natives.js:198:30&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">,0x289f64438d0,~</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">code-creation,LazyCompile,0,0x2d5000a33c20,284,</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;ToName native runtime.js:549:16&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">,0x289f643bb28,~</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">code-creation,Stub,2,0x2d5000a33d40,182,</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;DoubleToIStub&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">code-creation,Stub,2,0x2d5000a33e00,507,</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;NumberToStringStub&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>Раньше вам требовался исходный код V8, чтобы интерпретировать тики. К счастью, с Node.js 4.4.0 были представлены инструменты, которые облегчают использование этой информации без отдельной сборки V8 из исходников. Давайте посмотрим, как встроенный профилировщик может помочь получить представление о производительности приложения.</p><p>Чтобы проиллюстрировать использование профилировщика тиков, мы будем работать с простым Express приложением. В нашем приложении будет два обработчика, один для добавления новых пользователей в нашу систему:</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">app.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/newUser&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">req</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">res</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> username </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> req.query.username </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">||</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> password</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> req.query.password </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">||</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  username </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> username.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">replace</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">[!@#$%^&amp;*]</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">g</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">username </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">||</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> !</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">password </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">||</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> users[username]) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> res.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sendStatus</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">400</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> salt</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> crypto.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">randomBytes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">128</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toString</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;base64&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> hash</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> crypto.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pbkdf2Sync</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(password, salt, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">512</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;sha512&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  users[username] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { salt, hash };</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  res.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sendStatus</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">200</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>и другой для проверки попыток аутентификации пользователя:</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">app.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/auth&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">req</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">res</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> username </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> req.query.username </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">||</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> password</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> req.query.password </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">||</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  username </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> username.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">replace</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">[!@#$%^&amp;*]</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">g</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">username </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">||</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> !</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">password </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">||</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> !</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">users[username]) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> res.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sendStatus</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">400</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">salt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">hash</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> users[username];</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> encryptHash</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> crypto.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pbkdf2Sync</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(password, salt, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">512</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;sha512&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (crypto.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">timingSafeEqual</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(hash, encryptHash)) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    res.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sendStatus</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">200</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    res.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sendStatus</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">401</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p><em>Обратите внимание, что это НЕ рекомендуемые обработчики для аутентификации пользователей в ваших Node.js приложениях и используются исключительно в иллюстративных целях. Вам не следует пытаться разрабатывать собственные криптографические механизмы аутентификации в целом. Гораздо лучше использовать существующие, проверенные решения для аутентификации.</em></p><p>Теперь предположим, что мы развернули наше приложение, и пользователи жалуются на высокую задержку запросов. Мы можем легко запустить приложение со встроенным профилировщиком:</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">NODE_ENV</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">production</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> node</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --prof</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> app.js</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>и нагрузить сервер с помощью <code>ab</code> (ApacheBench):</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -X</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> GET</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;http://localhost:8080/newUser?username=matt&amp;password=password&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ab</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -k</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -c</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 20</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 250</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;http://localhost:8080/auth?username=matt&amp;password=password&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>и получить вывод ab:</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Concurrency</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Level:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      20</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Time</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> taken</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> for</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tests:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   46.932</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> seconds</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Complete</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> requests:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      250</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Failed</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> requests:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        0</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Keep-Alive</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> requests:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    250</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Total</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> transferred:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      50250</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bytes</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">HTML</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> transferred:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">       500</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bytes</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Requests</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> per</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> second:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    5.33</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [#/sec] (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mean</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Time</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> per</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> request:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">       3754.556</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [ms] (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mean</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Time</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> per</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> request:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">       187.728</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [ms] (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mean,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> across</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> all</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> concurrent</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> requests</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Transfer</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rate:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">          1.05</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [Kbytes/sec] received</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">...</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Percentage</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> of</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> the</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> requests</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> served</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> within</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> a</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> certain</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> time</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (ms)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  50%</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   3755</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  66%</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   3804</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  75%</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   3818</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  80%</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   3825</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  90%</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   3845</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  95%</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   3858</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  98%</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   3874</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  99%</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   3875</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> 100%</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   4225</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (longest </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">request</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><p>Из этого вывода мы видим, что нам удается обрабатывать только около 5 запросов в секунду и что средний запрос занимает чуть менее 4 секунд. В реальном примере мы могли бы выполнять большой объем работы во многих функциях от имени запроса пользователя, но даже в нашем простом примере время могло быть потеряно на компиляцию регулярных выражений, генерацию случайных солей, генерацию уникальных хешей из паролей пользователей или внутри самой структуры Express.</p><p>Поскольку мы запустили наше приложение с опцией <code>--prof</code>, файл тиков был сгенерирован в том же каталоге, что и ваш локальный запуск приложения. Он должен иметь вид <code>isolate-0xnnnnnnnnnnnn-v8.log</code> (где n — цифра).</p><p>Чтобы разобраться в этом файле, нам нужно использовать процессор тиков, поставляемый вместе с двоичным файлом Node.js. Чтобы запустить процессор, используйте флаг <code>--prof-process</code>:</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">node</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --prof-process</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> isolate-0xnnnnnnnnnnnn-v8.log</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> processed.txt</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Открытие файла processed.txt в вашем любимом текстовом редакторе предоставит вам несколько различных типов информации. Файл разбит на разделы, которые, в свою очередь, разбиты по языкам. Сначала мы смотрим на раздел summary и видим:</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[Summary]:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   ticks</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  total</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  nonlib</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   name</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">     79</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    0.2%</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    0.2%</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  JavaScript</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  36703</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   97.2%</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   99.2%</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  C++</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      7</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    0.0%</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    0.0%</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  GC</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    767</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    2.0%</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">          Shared</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libraries</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    215</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    0.6%</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">          Unaccounted</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>Это говорит нам о том, что 97% всех собранных выборок произошли в коде C++ и что при просмотре других разделов обработанного вывода мы должны уделять наибольшее внимание работе, выполняемой на C++ (в отличие от JavaScript). Имея это в виду, мы затем находим раздел [C++], который содержит информацию о том, какие функции C++ занимают больше всего времени ЦП, и видим:</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [C++]</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   ticks</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  total</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  nonlib</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   name</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  19557</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   51.8%</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   52.9%</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  node::crypto::PBKDF2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">v8::FunctionCallbackInfo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;v8::Value&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&amp;)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   4510</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   11.9%</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   12.2%</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  _sha1_block_data_order</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   3165</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    8.4%</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    8.6%</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  _malloc_zone_malloc</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>Мы видим, что три верхние записи составляют 72,1% времени ЦП, затраченного программой. Из этого вывода мы сразу видим, что не менее 51,8% времени ЦП занимает функция под названием PBKDF2, которая соответствует нашей генерации хеша из пароля пользователя. Однако может быть не сразу очевидно, как две нижние записи влияют на наше приложение (или если это так, мы будем притворяться обратным ради примера). Чтобы лучше понять взаимосвязь между этими функциями, мы затем посмотрим на раздел [Bottom up (heavy) profile], который предоставляет информацию об основных вызывающих каждой функции. Изучив этот раздел, мы находим:</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  ticks</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> parent</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  name</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  19557</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   51.8%</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  node::crypto::PBKDF2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">v8::FunctionCallbackInfo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;v8::Value&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&amp;)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  19557</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  100.0%</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    v8::internal::Builtins::~Builtins</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  19557</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  100.0%</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      LazyCompile:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~pbkdf2</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> crypto.js:557:16</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   4510</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   11.9%</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  _sha1_block_data_order</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   4510</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  100.0%</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    LazyCompile:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> *</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">pbkdf2</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> crypto.js:557:16</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   4510</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  100.0%</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      LazyCompile:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> *</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">exports.pbkdf2Sync</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> crypto.js:552:30</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   3165</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    8.4%</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  _malloc_zone_malloc</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   3161</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   99.9%</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    LazyCompile:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> *</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">pbkdf2</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> crypto.js:557:16</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   3161</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  100.0%</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      LazyCompile:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> *</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">exports.pbkdf2Sync</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> crypto.js:552:30</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>Разбор этого раздела требует немного больше работы, чем необработанные счетчики тиков выше. Внутри каждого из «стеков вызовов» выше процент в столбце parent указывает процент выборок, для которых функция в строке выше была вызвана функцией в текущей строке. Например, в среднем «стеке вызовов» выше для <code>_sha1_block_data_order</code> мы видим, что <code>_sha1_block_data_order</code> встречался в 11,9% выборок, что мы знали из необработанных счетчиков выше. Однако здесь мы также можем сказать, что он всегда вызывался функцией pbkdf2 внутри модуля crypto Node.js. Мы видим, что аналогично _malloc_zone_malloc вызывался почти исключительно той же функцией pbkdf2. Таким образом, используя информацию в этом представлении, мы можем сказать, что вычисление нашего хеша из пароля пользователя учитывает не только 51,8% из вышеизложенного, но и все время ЦП в трех наиболее часто выбираемых функциях, поскольку вызовы <code>_sha1_block_data_order</code> и <code>_malloc_zone_malloc</code> были сделаны от имени функции pbkdf2.</p><p>На данный момент совершенно ясно, что целевым объектом нашей оптимизации должна быть генерация хеша на основе пароля. К счастью, вы полностью усвоили <a href="https://nodesource.com/blog/why-asynchronous" target="_blank" rel="noreferrer">преимущества асинхронного программирования</a>, и вы понимаете, что работа по генерации хеша из пароля пользователя выполняется синхронно и, следовательно, связывает цикл событий. Это мешает нам работать над другими входящими запросами во время вычисления хеша.</p><p>Чтобы исправить эту проблему, вы вносите небольшие изменения в приведенные выше обработчики, чтобы использовать асинхронную версию функции pbkdf2:</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">app.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/auth&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">req</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">res</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> username </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> req.query.username </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">||</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> password</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> req.query.password </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">||</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  username </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> username.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">replace</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">[!@#$%^&amp;*]</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">g</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">username </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">||</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> !</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">password </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">||</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> !</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">users[username]) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> res.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sendStatus</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">400</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  crypto.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pbkdf2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    password,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    users[username].salt,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    10000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    512</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &#39;sha512&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">err</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">hash</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (users[username].hash.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toString</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">===</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> hash.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toString</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        res.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sendStatus</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">200</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        res.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sendStatus</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">401</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  );</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><p>Новый запуск теста ab выше с асинхронной версией вашего приложения дает:</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Concurrency</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Level:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      20</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Time</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> taken</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> for</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tests:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   12.846</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> seconds</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Complete</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> requests:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      250</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Failed</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> requests:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        0</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Keep-Alive</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> requests:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    250</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Total</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> transferred:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      50250</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bytes</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">HTML</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> transferred:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">       500</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bytes</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Requests</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> per</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> second:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    19.46</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [#/sec] (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mean</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Time</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> per</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> request:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">       1027.689</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [ms] (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mean</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Time</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> per</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> request:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">       51.384</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [ms] (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mean,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> across</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> all</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> concurrent</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> requests</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Transfer</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rate:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">          3.82</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [Kbytes/sec] received</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">...</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Percentage</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> of</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> the</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> requests</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> served</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> within</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> a</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> certain</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> time</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (ms)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  50%</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   1018</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  66%</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   1035</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  75%</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   1041</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  80%</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   1043</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  90%</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   1049</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  95%</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   1063</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  98%</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   1070</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  99%</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   1071</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> 100%</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   1079</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (longest </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">request</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><p>Ура! Ваше приложение теперь обслуживает около 20 запросов в секунду, что примерно в 4 раза больше, чем с синхронной генерацией хеша. Кроме того, средняя задержка снизилась с 4 секунд до чуть более 1 секунды.</p><p>Надеюсь, благодаря исследованию производительности этого (хотя и надуманного) примера вы увидели, как процессор тиков V8 может помочь вам лучше понять производительность ваших Node.js приложений.</p><p>Вам также может оказаться полезным <a href="/ru/nodejs/guide/flame-graphs">как создать flame graph</a>.</p>`,34)])}var s=e(a,[[`render`,o]]);export{i as __pageData,s as default};