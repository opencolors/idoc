import{__plugin_vue_export_helper_default as e,createElementBlock as t,createStaticVNode as n,openBlock as r}from"./chunks/plugin-vue_export-helper.Bts1mPc7.js";const i=JSON.parse(`{"title":"Node.js に必要な JavaScript の知識","description":"Node.js をマスターするために必要な JavaScript の基礎知識を学びましょう。レキシカル構造、式、データ型、クラス、変数、関数、非同期プログラミングなどです。","frontmatter":{"title":"Node.js に必要な JavaScript の知識","description":"Node.js をマスターするために必要な JavaScript の基礎知識を学びましょう。レキシカル構造、式、データ型、クラス、変数、関数、非同期プログラミングなどです。","head":[["meta",{"name":"og:title","content":"Node.js に必要な JavaScript の知識 | Node.js - iDoc.dev"}],["meta",{"name":"og:description","content":"Node.js をマスターするために必要な JavaScript の基礎知識を学びましょう。レキシカル構造、式、データ型、クラス、変数、関数、非同期プログラミングなどです。"}],["meta",{"name":"twitter:title","content":"Node.js に必要な JavaScript の知識 | Node.js - iDoc.dev"}],["meta",{"name":"twitter:description","content":"Node.js をマスターするために必要な JavaScript の基礎知識を学びましょう。レキシカル構造、式、データ型、クラス、変数、関数、非同期プログラミングなどです。"}],["link",{"rel":"canonical","href":"https://idoc.dev/ja/nodejs/guide/javascript-for-nodejs"}],["meta",{"property":"og:url","content":"https://idoc.dev/ja/nodejs/guide/javascript-for-nodejs"}]]},"headers":[],"relativePath":"ja/nodejs/guide/javascript-for-nodejs.md","filePath":"ja/nodejs/guide/javascript-for-nodejs.md","lastUpdated":null}`),a={name:`ja/nodejs/guide/javascript-for-nodejs.md`};function o(e,i,a,o,s,c){return r(),t(`div`,null,i[0]||=[n(`<h1 id="node-js-を使うために必要な-javascript-の知識はどのくらい" tabindex="-1">Node.js を使うために必要な JavaScript の知識はどのくらい？ <a class="header-anchor" href="#node-js-を使うために必要な-javascript-の知識はどのくらい" aria-label="Permalink to “Node.js を使うために必要な JavaScript の知識はどのくらい？”">​</a></h1><p>プログラミング初心者にとって、自分のプログラミング能力に自信を持つのは難しいものです。コーディングを学ぶ中で、JavaScript はどこまでで、Node.js はどこから始まるのか、あるいはその逆なのか、混乱するかもしれません。</p><h3 id="node-js-を深く学ぶ前に、何を学ぶのがおすすめですか" tabindex="-1">Node.js を深く学ぶ前に、何を学ぶのがおすすめですか？ <a class="header-anchor" href="#node-js-を深く学ぶ前に、何を学ぶのがおすすめですか" aria-label="Permalink to “Node.js を深く学ぶ前に、何を学ぶのがおすすめですか？”">​</a></h3><ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Lexical_grammar" target="_blank" rel="noreferrer">字句構造</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators" target="_blank" rel="noreferrer">式</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures" target="_blank" rel="noreferrer">データ型</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes" target="_blank" rel="noreferrer">クラス</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/First_steps/Variables#what_is_a_variable" target="_blank" rel="noreferrer">変数</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Functions" target="_blank" rel="noreferrer">関数</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this" target="_blank" rel="noreferrer">this 演算子</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions" target="_blank" rel="noreferrer">アロー関数</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Loops_and_iteration" target="_blank" rel="noreferrer">ループ</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Glossary/Scope" target="_blank" rel="noreferrer">スコープ</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array" target="_blank" rel="noreferrer">配列</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals" target="_blank" rel="noreferrer">テンプレートリテラル</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Strict_mode" target="_blank" rel="noreferrer">厳格モード</a></li><li><a href="https://nodejs.org/en/learn/getting-started/ecmascript-2015-es6-and-beyond" target="_blank" rel="noreferrer">ECMAScript 2015 (ES6) 以降</a></li></ul><p>これらの概念を念頭に置けば、ブラウザと Node.js の両方で、熟練した JavaScript 開発者になるための道を順調に進むことができるでしょう。</p><h3 id="非同期プログラミング" tabindex="-1">非同期プログラミング <a class="header-anchor" href="#非同期プログラミング" aria-label="Permalink to “非同期プログラミング”">​</a></h3><p>以下の概念は、Node.js の基本的な部分の 1 つである非同期プログラミングを理解する上でも重要です。</p><ul><li><a href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Asynchronous/Introducing" target="_blank" rel="noreferrer">非同期プログラミングとコールバック</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/API/setTimeout" target="_blank" rel="noreferrer">タイマー</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Using_promises" target="_blank" rel="noreferrer">Promise</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function" target="_blank" rel="noreferrer">Async と Await</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Closures" target="_blank" rel="noreferrer">クロージャ</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/EventLoop" target="_blank" rel="noreferrer">イベントループ</a></li></ul>`,8)])}var s=e(a,[[`render`,o]]);export{i as __pageData,s as default};