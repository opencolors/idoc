import{__plugin_vue_export_helper_default as e,createElementBlock as t,createStaticVNode as n,openBlock as r}from"./chunks/plugin-vue_export-helper.Bts1mPc7.js";const i=JSON.parse(`{"title":"Publishing a Node-API Package","description":"Learn how to publish a Node-API version of a package alongside a non-Node-API version, and how to introduce a dependency on a Node-API version of a package.","frontmatter":{"title":"Publishing a Node-API Package","description":"Learn how to publish a Node-API version of a package alongside a non-Node-API version, and how to introduce a dependency on a Node-API version of a package.","head":[["meta",{"name":"og:title","content":"Publishing a Node-API Package | Node.js - iDoc.dev"}],["meta",{"name":"og:description","content":"Learn how to publish a Node-API version of a package alongside a non-Node-API version, and how to introduce a dependency on a Node-API version of a package."}],["meta",{"name":"twitter:title","content":"Publishing a Node-API Package | Node.js - iDoc.dev"}],["meta",{"name":"twitter:description","content":"Learn how to publish a Node-API version of a package alongside a non-Node-API version, and how to introduce a dependency on a Node-API version of a package."}],["link",{"rel":"canonical","href":"https://idoc.dev/nodejs/guide/how-to-publish-a-nodejs-package"}],["meta",{"property":"og:url","content":"https://idoc.dev/nodejs/guide/how-to-publish-a-nodejs-package"}]]},"headers":[],"relativePath":"nodejs/guide/how-to-publish-a-nodejs-package.md","filePath":"en/nodejs/guide/how-to-publish-a-nodejs-package.md","lastUpdated":null}`),a={name:`nodejs/guide/how-to-publish-a-nodejs-package.md`};function o(e,i,a,o,s,c){return r(),t(`div`,null,i[0]||=[n(`<h1 id="how-to-publish-a-node-api-package" tabindex="-1">How to publish a Node-API package <a class="header-anchor" href="#how-to-publish-a-node-api-package" aria-label="Permalink to “How to publish a Node-API package”">​</a></h1><h2 id="how-to-publish-a-node-api-version-of-a-package-alongside-a-non-node-api-version" tabindex="-1">How to publish a Node-API version of a package alongside a non-Node-API version <a class="header-anchor" href="#how-to-publish-a-node-api-version-of-a-package-alongside-a-non-node-api-version" aria-label="Permalink to “How to publish a Node-API version of a package alongside a non-Node-API version”">​</a></h2><p>The following steps are illustrated using the package <code>iotivity-node</code>:</p><ul><li><p>First, publish the non-Node-API version:</p><ul><li>Update the version in <code>package.json</code>. For <code>iotivity-node</code>, the version becomes 1.2.0-2.</li><li>Go through the release checklist (ensure tests/demos/docs are OK).</li><li><code>npm publish</code>.</li></ul></li><li><p>Then, publish the Node-API version:</p><ul><li>Update the version in <code>package.json</code>. In the case of <code>iotivity-node</code>, the version becomes 1.2.0-3. For versioning, we recommend following the pre-release version scheme as described by <a href="https://semver.org" target="_blank" rel="noreferrer">semver.org</a> e.g. 1.2.0-napi.</li><li>Go through the release checklist (ensure tests/demos/docs are OK).</li><li><code>npm publish --tag n-api</code>.</li></ul></li></ul><p>In this example, tagging the release with <code>n-api</code> has ensured that, although version 1.2.0-3 is later than the non-Node-APl published version (1.2.0-2), it will not be installed if someone chooses to install <code>iotivity-node</code> by simply running <code>npm install iotivity-node</code>. This will install the non-Node-APl version by default. The user will have to run <code>npm install iotivity-node@n api</code> to receive the Node-APlI version. For more information on using tags with npm check out &quot;Using dist-tags&quot;.</p><h2 id="how-to-introduce-a-dependency-on-a-node-api-version-of-a-package" tabindex="-1">How to introduce a dependency on a Node-API version of a package <a class="header-anchor" href="#how-to-introduce-a-dependency-on-a-node-api-version-of-a-package" aria-label="Permalink to “How to introduce a dependency on a Node-API version of a package”">​</a></h2><p>To add the Node-API version of <code>iotivity-node</code> as a dependency, the <code>package.json</code> will look like this:</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;dependencies&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;iotivity-node&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;n-api&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>As explained in &quot;Using dist-tags&quot;, unlike regular versions, tagged versions cannot be addressed by version ranges such as <code>&quot;^2.0.0&quot;</code> inside <code>package.json</code>. The reason for this is that the tag refers to exactly one version. So, if the package maintainer chooses to tag a later version of the package using the same tag, <code>npm update</code> will receive the later version. This should be acceptable version other than the latest published, the <code>package.json</code> dependency will have to refer to the exact version like the following:</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;dependencies&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;iotivity-node&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;1.2.0-3&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>`,10)])}var s=e(a,[[`render`,o]]);export{i as __pageData,s as default};