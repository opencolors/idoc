import{__plugin_vue_export_helper_default as e,createElementBlock as t,createStaticVNode as n,openBlock as r}from"./chunks/plugin-vue_export-helper.Bts1mPc7.js";const i=JSON.parse(`{"title":"Débogage en direct sous Node.js","description":"Découvrez comment déboguer en direct un processus Node.js pour identifier et résoudre les problèmes liés à la logique et à la correction de l'application.","frontmatter":{"title":"Débogage en direct sous Node.js","description":"Découvrez comment déboguer en direct un processus Node.js pour identifier et résoudre les problèmes liés à la logique et à la correction de l'application.","head":[["meta",{"name":"og:title","content":"Débogage en direct sous Node.js | Node.js - iDoc.dev"}],["meta",{"name":"og:description","content":"Découvrez comment déboguer en direct un processus Node.js pour identifier et résoudre les problèmes liés à la logique et à la correction de l'application."}],["meta",{"name":"twitter:title","content":"Débogage en direct sous Node.js | Node.js - iDoc.dev"}],["meta",{"name":"twitter:description","content":"Découvrez comment déboguer en direct un processus Node.js pour identifier et résoudre les problèmes liés à la logique et à la correction de l'application."}],["link",{"rel":"canonical","href":"https://idoc.dev/fr/nodejs/guide/live-debugging"}],["meta",{"property":"og:url","content":"https://idoc.dev/fr/nodejs/guide/live-debugging"}]]},"headers":[],"relativePath":"fr/nodejs/guide/live-debugging.md","filePath":"fr/nodejs/guide/live-debugging.md","lastUpdated":1749464498000}`),a={name:`fr/nodejs/guide/live-debugging.md`};function o(e,i,a,o,s,c){return r(),t(`div`,null,i[0]||=[n(`<h1 id="debogage-en-direct" tabindex="-1">Débogage en direct <a class="header-anchor" href="#debogage-en-direct" aria-label="Permalink to “Débogage en direct”">​</a></h1><p>Dans ce document, vous pouvez découvrir comment déboguer en direct un processus Node.js.</p><h2 id="mon-application-ne-se-comporte-pas-comme-prevu" tabindex="-1">Mon application ne se comporte pas comme prévu <a class="header-anchor" href="#mon-application-ne-se-comporte-pas-comme-prevu" aria-label="Permalink to “Mon application ne se comporte pas comme prévu”">​</a></h2><h3 id="symptomes" tabindex="-1">Symptômes <a class="header-anchor" href="#symptomes" aria-label="Permalink to “Symptômes”">​</a></h3><p>L&#39;utilisateur peut observer que l&#39;application ne fournit pas la sortie attendue pour certaines entrées, par exemple, un serveur HTTP renvoie une réponse JSON où certains champs sont vides. Diverses choses peuvent mal tourner dans le processus, mais dans ce cas d&#39;utilisation, nous nous concentrons principalement sur la logique de l&#39;application et son exactitude.</p><h3 id="debogage" tabindex="-1">Débogage <a class="header-anchor" href="#debogage" aria-label="Permalink to “Débogage”">​</a></h3><p>Dans ce cas d&#39;utilisation, l&#39;utilisateur souhaite comprendre le chemin de code que notre application exécute pour un certain déclencheur, comme une requête HTTP entrante. Il peut également vouloir parcourir le code pas à pas et contrôler l&#39;exécution, ainsi qu&#39;inspecter les valeurs que les variables contiennent en mémoire. À cette fin, nous pouvons utiliser l&#39;indicateur <code>--inspect</code> lors du démarrage de l&#39;application. La documentation sur le débogage se trouve <a href="/fr/nodejs/guide/debugging-nodejs">ici</a>.</p>`,7)])}var s=e(a,[[`render`,o]]);export{i as __pageData,s as default};