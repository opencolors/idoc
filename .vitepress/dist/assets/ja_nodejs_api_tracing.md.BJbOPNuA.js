import{__plugin_vue_export_helper_default as e,createElementBlock as t,createStaticVNode as n,openBlock as r}from"./chunks/plugin-vue_export-helper.Bts1mPc7.js";const i=JSON.parse(`{"title":"Node.js トレースイベント","description":"Node.jsのトレースイベントAPIを使用してパフォーマンスプロファイリングとデバッグを行う方法に関するドキュメント。","frontmatter":{"title":"Node.js トレースイベント","description":"Node.jsのトレースイベントAPIを使用してパフォーマンスプロファイリングとデバッグを行う方法に関するドキュメント。","head":[["meta",{"name":"og:title","content":"Node.js トレースイベント | Node.js - iDoc.dev"}],["meta",{"name":"og:description","content":"Node.jsのトレースイベントAPIを使用してパフォーマンスプロファイリングとデバッグを行う方法に関するドキュメント。"}],["meta",{"name":"twitter:title","content":"Node.js トレースイベント | Node.js - iDoc.dev"}],["meta",{"name":"twitter:description","content":"Node.jsのトレースイベントAPIを使用してパフォーマンスプロファイリングとデバッグを行う方法に関するドキュメント。"}],["link",{"rel":"canonical","href":"https://idoc.dev/ja/nodejs/api/tracing"}],["meta",{"property":"og:url","content":"https://idoc.dev/ja/nodejs/api/tracing"}]]},"headers":[],"relativePath":"ja/nodejs/api/tracing.md","filePath":"ja/nodejs/api/tracing.md","lastUpdated":1749464498000}`),a={name:`ja/nodejs/api/tracing.md`};function o(e,i,a,o,s,c){return r(),t(`div`,null,i[0]||=[n(`<h1 id="trace-events" tabindex="-1">トレースイベント <a class="header-anchor" href="#trace-events" aria-label="Permalink to “トレースイベント”">​</a></h1><div class="warning custom-block"><p class="custom-block-title">[Stable: 1 - Experimental]</p><p><a href="/ja/nodejs/api/documentation#stability-index">Stable: 1</a> <a href="/ja/nodejs/api/documentation#stability-index">安定度: 1</a> - 実験的</p></div><p><strong>ソースコード:</strong> <a href="https://github.com/nodejs/node/blob/v23.5.0/lib/trace_events.js" target="_blank" rel="noreferrer">lib/trace_events.js</a></p><p><code>node:trace_events</code> モジュールは、V8、Node.js コア、およびユーザースペースコードによって生成されたトレース情報を一元化するメカニズムを提供します。</p><p>トレースは、<code>--trace-event-categories</code> コマンドラインフラグを使用するか、<code>node:trace_events</code> モジュールを使用して有効にできます。<code>--trace-event-categories</code> フラグは、コンマ区切りのカテゴリ名のリストを受け入れます。</p><p>利用可能なカテゴリは次のとおりです。</p><ul><li><p><code>node</code>: 空のプレースホルダー。</p></li><li><p><code>node.async_hooks</code>: 詳細な <a href="/ja/nodejs/api/async_hooks"><code>async_hooks</code></a> トレースデータのキャプチャを有効にします。<a href="/ja/nodejs/api/async_hooks"><code>async_hooks</code></a> イベントには、一意の <code>asyncId</code> と特別な <code>triggerId</code> <code>triggerAsyncId</code> プロパティがあります。</p></li><li><p><code>node.bootstrap</code>: Node.js ブートストラップのマイルストーンのキャプチャを有効にします。</p></li><li><p><code>node.console</code>: <code>console.time()</code> および <code>console.count()</code> 出力のキャプチャを有効にします。</p></li><li><p><code>node.threadpoolwork.sync</code>: <code>blob</code>、<code>zlib</code>、<code>crypto</code>、および <code>node_api</code> などのスレッドプール同期操作のトレースデータのキャプチャを有効にします。</p></li><li><p><code>node.threadpoolwork.async</code>: <code>blob</code>、<code>zlib</code>、<code>crypto</code>、および <code>node_api</code> などのスレッドプール非同期操作のトレースデータのキャプチャを有効にします。</p></li><li><p><code>node.dns.native</code>: DNS クエリのトレースデータのキャプチャを有効にします。</p></li><li><p><code>node.net.native</code>: ネットワークのトレースデータのキャプチャを有効にします。</p></li><li><p><code>node.environment</code>: Node.js 環境のマイルストーンのキャプチャを有効にします。</p></li><li><p><code>node.fs.sync</code>: ファイルシステム同期メソッドのトレースデータのキャプチャを有効にします。</p></li><li><p><code>node.fs_dir.sync</code>: ファイルシステム同期ディレクトリメソッドのトレースデータのキャプチャを有効にします。</p></li><li><p><code>node.fs.async</code>: ファイルシステム非同期メソッドのトレースデータのキャプチャを有効にします。</p></li><li><p><code>node.fs_dir.async</code>: ファイルシステム非同期ディレクトリメソッドのトレースデータのキャプチャを有効にします。</p></li><li><p><code>node.perf</code>: <a href="/ja/nodejs/api/perf_hooks">Performance API</a> 測定のキャプチャを有効にします。</p><ul><li><code>node.perf.usertiming</code>: Performance API ユーザタイミングのメジャーとマークのみのキャプチャを有効にします。</li><li><code>node.perf.timerify</code>: Performance API timerify 測定のみのキャプチャを有効にします。</li></ul></li><li><p><code>node.promises.rejections</code>: 未処理の Promise の拒否と、拒否後の処理の数を追跡するトレースデータのキャプチャを有効にします。</p></li><li><p><code>node.vm.script</code>: <code>node:vm</code> モジュールの <code>runInNewContext()</code>、<code>runInContext()</code>、および <code>runInThisContext()</code> メソッドのトレースデータのキャプチャを有効にします。</p></li><li><p><code>v8</code>: <a href="/ja/nodejs/api/v8">V8</a> イベントは、GC、コンパイル、および実行に関連しています。</p></li><li><p><code>node.http</code>: HTTP リクエスト/レスポンスのトレースデータのキャプチャを有効にします。</p></li><li><p><code>node.module_timer</code>: CJS モジュールのロードのトレースデータのキャプチャを有効にします。</p></li></ul><p>デフォルトでは、<code>node</code>、<code>node.async_hooks</code>、および <code>v8</code> カテゴリが有効になっています。</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">node</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --trace-event-categories</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> v8,node,node.async_hooks</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> server.js</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Node.js の以前のバージョンでは、トレースイベントを有効にするために <code>--trace-events-enabled</code> フラグを使用する必要がありました。この要件は削除されました。ただし、<code>--trace-events-enabled</code> フラグは <em>引き続き</em> 使用でき、デフォルトで <code>node</code>、<code>node.async_hooks</code>、および <code>v8</code> トレースイベントカテゴリを有効にします。</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">node</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --trace-events-enabled</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># は以下と同等です {#is-equivalent-to}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">node</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --trace-event-categories</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> v8,node,node.async_hooks</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>または、<code>node:trace_events</code> モジュールを使用してトレースイベントを有効にすることもできます。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> trace_events</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;node:trace_events&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> tracing</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> trace_events.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createTracing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ categories: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;node.perf&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">tracing.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">enable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &#39;node.perf&#39; カテゴリのトレースイベントキャプチャを有効にする</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 作業を行う</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">tracing.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">disable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &#39;node.perf&#39; カテゴリのトレースイベントキャプチャを無効にする</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>トレースを有効にして Node.js を実行すると、Chrome の <a href="https://www.chromium.org/developers/how-tos/trace-event-profiling-tool" target="_blank" rel="noreferrer"><code>chrome://tracing</code></a> タブで開くことができるログファイルが生成されます。</p><p>ログファイルはデフォルトで <code>node_trace.\${rotation}.log</code> と呼ばれます。ここで <code>\${rotation}</code> はインクリメントされるログローテーション ID です。ファイルパスパターンは、<code>\${rotation}</code> と <code>\${pid}</code> をサポートするテンプレート文字列を受け入れる <code>--trace-event-file-pattern</code> で指定できます。</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">node</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --trace-event-categories</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> v8</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --trace-event-file-pattern</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;\${pid}-\${rotation}.log&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> server.js</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><code>SIGINT</code>、<code>SIGTERM</code>、または <code>SIGBREAK</code> などのシグナルイベント後にログファイルが適切に生成されるようにするには、次のように、コードに適切なハンドラーがあることを確認してください。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">process.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;SIGINT&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> onSigint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">info</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Received SIGINT.&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  process.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">exit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">130</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// または、OS とシグナルに応じて適用可能な終了コード</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>トレースシステムは、<code>process.hrtime()</code> で使用されるものと同じタイムソースを使用します。ただし、トレースイベントのタイムスタンプはマイクロ秒で表されます。<code>process.hrtime()</code> はナノ秒を返します。</p><p>このモジュールの機能は、<a href="/ja/nodejs/api/worker_threads#class-worker"><code>Worker</code></a> スレッドでは利用できません。</p><h2 id="the-nodetrace_events-module" tabindex="-1"><code>node:trace_events</code> モジュール <a class="header-anchor" href="#the-nodetrace_events-module" aria-label="Permalink to “node:trace_events モジュール”">​</a></h2><p><strong>追加:</strong> v10.0.0</p><h3 id="tracing-object" tabindex="-1"><code>Tracing</code> オブジェクト <a class="header-anchor" href="#tracing-object" aria-label="Permalink to “Tracing オブジェクト”">​</a></h3><p><strong>追加:</strong> v10.0.0</p><p><code>Tracing</code> オブジェクトは、カテゴリのセットに対してトレースを有効または無効にするために使用されます。インスタンスは、<code>trace_events.createTracing()</code> メソッドを使用して作成されます。</p><p>作成時、<code>Tracing</code> オブジェクトは無効になっています。<code>tracing.enable()</code> メソッドを呼び出すと、カテゴリが有効なトレースイベントカテゴリのセットに追加されます。<code>tracing.disable()</code> を呼び出すと、カテゴリが有効なトレースイベントカテゴリのセットから削除されます。</p><h4 id="tracingcategories" tabindex="-1"><code>tracing.categories</code> <a class="header-anchor" href="#tracingcategories" aria-label="Permalink to “tracing.categories”">​</a></h4><p><strong>追加:</strong> v10.0.0</p><ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a></li></ul><p>この <code>Tracing</code> オブジェクトでカバーされるトレースイベントカテゴリのカンマ区切りリスト。</p><h4 id="tracingdisable" tabindex="-1"><code>tracing.disable()</code> <a class="header-anchor" href="#tracingdisable" aria-label="Permalink to “tracing.disable()”">​</a></h4><p><strong>追加:</strong> v10.0.0</p><p>この <code>Tracing</code> オブジェクトを無効にします。</p><p>他の有効な <code>Tracing</code> オブジェクトで<em>カバーされていない</em>トレースイベントカテゴリ、および <code>--trace-event-categories</code> フラグで<em>指定されていない</em>トレースイベントカテゴリのみが無効になります。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> trace_events</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;node:trace_events&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> t1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> trace_events.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createTracing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ categories: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;node&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;v8&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] });</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> t2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> trace_events.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createTracing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ categories: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;node.perf&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;node&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">t1.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">enable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">t2.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">enable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &#39;node,node.perf,v8&#39; を出力</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(trace_events.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getEnabledCategories</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">());</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">t2.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">disable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &#39;node.perf&#39; カテゴリの発行のみを無効にします</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &#39;node,v8&#39; を出力</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(trace_events.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getEnabledCategories</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">());</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h4 id="tracingenable" tabindex="-1"><code>tracing.enable()</code> <a class="header-anchor" href="#tracingenable" aria-label="Permalink to “tracing.enable()”">​</a></h4><p><strong>追加:</strong> v10.0.0</p><p><code>Tracing</code> オブジェクトによってカバーされるカテゴリのセットに対して、この <code>Tracing</code> オブジェクトを有効にします。</p><h4 id="tracingenabled" tabindex="-1"><code>tracing.enabled</code> <a class="header-anchor" href="#tracingenabled" aria-label="Permalink to “tracing.enabled”">​</a></h4><p><strong>追加:</strong> v10.0.0</p><ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type" target="_blank" rel="noreferrer">&lt;boolean&gt;</a> <code>Tracing</code> オブジェクトが有効になっている場合にのみ <code>true</code>。</li></ul><h3 id="trace_eventscreatetracingoptions" tabindex="-1"><code>trace_events.createTracing(options)</code> <a class="header-anchor" href="#trace_eventscreatetracingoptions" aria-label="Permalink to “trace_events.createTracing(options)”">​</a></h3><p><strong>追加:</strong> v10.0.0</p><ul><li><p><code>options</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object&gt;</a></p><ul><li><code>categories</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string[]&gt;</a> トレースカテゴリ名の配列。配列に含まれる値は、可能な場合は文字列に強制されます。値を強制できない場合は、エラーがスローされます。</li></ul></li><li><p>戻り値: <a href="/ja/nodejs/api/tracing#tracing-object">&lt;Tracing&gt;</a>。</p></li></ul><p>指定された <code>categories</code> のセットに対して <code>Tracing</code> オブジェクトを作成して返します。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> trace_events</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;node:trace_events&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> categories</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;node.perf&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;node.async_hooks&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">];</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> tracing</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> trace_events.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createTracing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ categories });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">tracing.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">enable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 何かする</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">tracing.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">disable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="trace_eventsgetenabledcategories" tabindex="-1"><code>trace_events.getEnabledCategories()</code> <a class="header-anchor" href="#trace_eventsgetenabledcategories" aria-label="Permalink to “trace_events.getEnabledCategories()”">​</a></h3><p><strong>追加:</strong> v10.0.0</p><ul><li>戻り値: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String-type" target="_blank" rel="noreferrer">&lt;string&gt;</a></li></ul><p>現在有効になっているすべてのトレースイベントカテゴリをカンマ区切りのリストで返します。現在有効になっているトレースイベントカテゴリのセットは、現在有効になっているすべての <code>Tracing</code> オブジェクトと、<code>--trace-event-categories</code> フラグを使用して有効になっているカテゴリの <em>和</em> によって決定されます。</p><p>以下のファイル <code>test.js</code> が与えられたとき、コマンド <code>node --trace-event-categories node.perf test.js</code> はコンソールに <code>&#39;node.async_hooks,node.perf&#39;</code> と出力します。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> trace_events</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;node:trace_events&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> t1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> trace_events.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createTracing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ categories: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;node.async_hooks&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] });</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> t2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> trace_events.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createTracing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ categories: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;node.perf&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] });</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> t3</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> trace_events.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createTracing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ categories: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;v8&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] });</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">t1.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">enable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">t2.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">enable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(trace_events.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getEnabledCategories</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">());</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h2 id="examples" tabindex="-1">例 <a class="header-anchor" href="#examples" aria-label="Permalink to “例”">​</a></h2><h3 id="collect-trace-events-data-by-inspector" tabindex="-1">インスペクターによるトレースイベントデータの収集 <a class="header-anchor" href="#collect-trace-events-data-by-inspector" aria-label="Permalink to “インスペクターによるトレースイベントデータの収集”">​</a></h3><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;use strict&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Session</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;node:inspector&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> session</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Session</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">session.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">connect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> post</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">message</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">data</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Promise</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">resolve</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">reject</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    session.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">post</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(message, data, (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">err</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">result</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (err)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        reject</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Error</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">JSON</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">stringify</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(err)));</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      else</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        resolve</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(result);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> collect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> data</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [];</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  session.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;NodeTracing.dataCollected&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">chunk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> data.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">push</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(chunk));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  session.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;NodeTracing.tracingComplete&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // done</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  });</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> traceConfig</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { includedCategories: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;v8&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] };</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  await</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> post</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;NodeTracing.start&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, { traceConfig });</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // do something</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  setTimeout</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    post</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;NodeTracing.stop&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">then</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      session.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">disconnect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(data);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">collect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br></div></div>`,55)])}var s=e(a,[[`render`,o]]);export{i as __pageData,s as default};