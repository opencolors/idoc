import{__plugin_vue_export_helper_default as e,createElementBlock as t,createStaticVNode as n,openBlock as r}from"./chunks/plugin-vue_export-helper.Bts1mPc7.js";const i=JSON.parse(`{"title":"Comprendre la boucle d'événements Node.js","description":"La boucle d'événements est le cœur de Node.js, permettant d'exécuter des opérations I/O non bloquantes. Il s'agit d'une boucle à thread unique qui décharge les opérations vers le noyau du système lorsque cela est possible.","frontmatter":{"title":"Comprendre la boucle d'événements Node.js","description":"La boucle d'événements est le cœur de Node.js, permettant d'exécuter des opérations I/O non bloquantes. Il s'agit d'une boucle à thread unique qui décharge les opérations vers le noyau du système lorsque cela est possible.","head":[["meta",{"name":"og:title","content":"Comprendre la boucle d'événements Node.js | Node.js - iDoc.dev"}],["meta",{"name":"og:description","content":"La boucle d'événements est le cœur de Node.js, permettant d'exécuter des opérations I/O non bloquantes. Il s'agit d'une boucle à thread unique qui décharge les opérations vers le noyau du système lorsque cela est possible."}],["meta",{"name":"twitter:title","content":"Comprendre la boucle d'événements Node.js | Node.js - iDoc.dev"}],["meta",{"name":"twitter:description","content":"La boucle d'événements est le cœur de Node.js, permettant d'exécuter des opérations I/O non bloquantes. Il s'agit d'une boucle à thread unique qui décharge les opérations vers le noyau du système lorsque cela est possible."}],["link",{"rel":"canonical","href":"https://idoc.dev/fr/nodejs/guide/nodejs-event-loop"}],["meta",{"property":"og:url","content":"https://idoc.dev/fr/nodejs/guide/nodejs-event-loop"}]]},"headers":[],"relativePath":"fr/nodejs/guide/nodejs-event-loop.md","filePath":"fr/nodejs/guide/nodejs-event-loop.md","lastUpdated":1749464498000}`),a={name:`fr/nodejs/guide/nodejs-event-loop.md`};function o(e,i,a,o,s,c){return r(),t(`div`,null,i[0]||=[n("",79)])}var s=e(a,[[`render`,o]]);export{i as __pageData,s as default};