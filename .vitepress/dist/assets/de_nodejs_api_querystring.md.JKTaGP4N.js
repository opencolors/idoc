import{__plugin_vue_export_helper_default as e,createElementBlock as t,createStaticVNode as n,openBlock as r}from"./chunks/plugin-vue_export-helper.Bts1mPc7.js";const i=JSON.parse(`{"title":"Node.js Dokumentation - Abfragezeichenkette","description":"Dieser Abschnitt der Node.js-Dokumentation beschreibt das querystring-Modul, das Werkzeuge zum Parsen und Formatieren von URL-Abfragezeichenketten bietet. Es umfasst Methoden zum Maskieren und Demaskieren spezieller Zeichen, zum Umgang mit verschachtelten Objekten und zur Verwaltung der Serialisierung von Abfragezeichenketten.","frontmatter":{"title":"Node.js Dokumentation - Abfragezeichenkette","description":"Dieser Abschnitt der Node.js-Dokumentation beschreibt das querystring-Modul, das Werkzeuge zum Parsen und Formatieren von URL-Abfragezeichenketten bietet. Es umfasst Methoden zum Maskieren und Demaskieren spezieller Zeichen, zum Umgang mit verschachtelten Objekten und zur Verwaltung der Serialisierung von Abfragezeichenketten.","head":[["meta",{"name":"og:title","content":"Node.js Dokumentation - Abfragezeichenkette | Node.js - iDoc.dev"}],["meta",{"name":"og:description","content":"Dieser Abschnitt der Node.js-Dokumentation beschreibt das querystring-Modul, das Werkzeuge zum Parsen und Formatieren von URL-Abfragezeichenketten bietet. Es umfasst Methoden zum Maskieren und Demaskieren spezieller Zeichen, zum Umgang mit verschachtelten Objekten und zur Verwaltung der Serialisierung von Abfragezeichenketten."}],["meta",{"name":"twitter:title","content":"Node.js Dokumentation - Abfragezeichenkette | Node.js - iDoc.dev"}],["meta",{"name":"twitter:description","content":"Dieser Abschnitt der Node.js-Dokumentation beschreibt das querystring-Modul, das Werkzeuge zum Parsen und Formatieren von URL-Abfragezeichenketten bietet. Es umfasst Methoden zum Maskieren und Demaskieren spezieller Zeichen, zum Umgang mit verschachtelten Objekten und zur Verwaltung der Serialisierung von Abfragezeichenketten."}],["link",{"rel":"canonical","href":"https://idoc.dev/de/nodejs/api/querystring"}],["meta",{"property":"og:url","content":"https://idoc.dev/de/nodejs/api/querystring"}]]},"headers":[],"relativePath":"de/nodejs/api/querystring.md","filePath":"de/nodejs/api/querystring.md","lastUpdated":1749464498000}`),a={name:`de/nodejs/api/querystring.md`};function o(e,i,a,o,s,c){return r(),t(`div`,null,i[0]||=[n(`<h1 id="query-string" tabindex="-1">Query-String <a class="header-anchor" href="#query-string" aria-label="Permalink to “Query-String”">​</a></h1><div class="tip custom-block"><p class="custom-block-title">[Stable: 2 - Stabil]</p><p><a href="/de/nodejs/api/documentation#stability-index">Stable: 2</a> <a href="/de/nodejs/api/documentation#stability-index">Stabilität: 2</a> - Stabil</p></div><p><strong>Quellcode:</strong> <a href="https://github.com/nodejs/node/blob/v23.5.0/lib/querystring.js" target="_blank" rel="noreferrer">lib/querystring.js</a></p><p>Das Modul <code>node:querystring</code> bietet Hilfsfunktionen zum Parsen und Formatieren von URL-Query-Strings. Es kann über Folgendes aufgerufen werden:</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> querystring</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;node:querystring&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><code>querystring</code> ist leistungsfähiger als <a href="/de/nodejs/api/url#class-urlsearchparams">&lt;URLSearchParams&gt;</a>, aber keine standardisierte API. Verwenden Sie <a href="/de/nodejs/api/url#class-urlsearchparams">&lt;URLSearchParams&gt;</a>, wenn die Leistung nicht kritisch ist oder wenn die Kompatibilität mit Browsercode erwünscht ist.</p><h2 id="querystringdecode" tabindex="-1"><code>querystring.decode()</code> <a class="header-anchor" href="#querystringdecode" aria-label="Permalink to “querystring.decode()”">​</a></h2><p><strong>Hinzugefügt in: v0.1.99</strong></p><p>Die Funktion <code>querystring.decode()</code> ist ein Alias für <code>querystring.parse()</code>.</p><h2 id="querystringencode" tabindex="-1"><code>querystring.encode()</code> <a class="header-anchor" href="#querystringencode" aria-label="Permalink to “querystring.encode()”">​</a></h2><p><strong>Hinzugefügt in: v0.1.99</strong></p><p>Die Funktion <code>querystring.encode()</code> ist ein Alias für <code>querystring.stringify()</code>.</p><h2 id="querystringescapestr" tabindex="-1"><code>querystring.escape(str)</code> <a class="header-anchor" href="#querystringescapestr" aria-label="Permalink to “querystring.escape(str)”">​</a></h2><p><strong>Hinzugefügt in: v0.1.25</strong></p><ul><li><code>str</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a></li></ul><p>Die Methode <code>querystring.escape()</code> führt eine URL-Prozentcodierung für die gegebene <code>str</code> in einer Weise durch, die für die spezifischen Anforderungen von URL-Query-Strings optimiert ist.</p><p>Die Methode <code>querystring.escape()</code> wird von <code>querystring.stringify()</code> verwendet und wird im Allgemeinen nicht direkt verwendet. Sie wird hauptsächlich exportiert, um Anwendungscode zu ermöglichen, eine alternative Prozentcodierungs-Implementierung bereitzustellen, falls erforderlich, indem <code>querystring.escape</code> einer alternativen Funktion zugewiesen wird.</p><h2 id="querystringparsestr-sep-eq-options" tabindex="-1"><code>querystring.parse(str[, sep[, eq[, options]]])</code> <a class="header-anchor" href="#querystringparsestr-sep-eq-options" aria-label="Permalink to “querystring.parse(str[, sep[, eq[, options]]])”">​</a></h2><div class="info custom-block"><p class="custom-block-title">[Verlauf]</p><table tabindex="0"><thead><tr><th>Version</th><th>Änderungen</th></tr></thead><tbody><tr><td>v8.0.0</td><td>Mehrere leere Einträge werden jetzt korrekt geparst (z. B. <code>&amp;=&amp;=</code>).</td></tr><tr><td>v6.0.0</td><td>Das zurückgegebene Objekt erbt nicht mehr von <code>Object.prototype</code>.</td></tr><tr><td>v6.0.0, v4.2.4</td><td>Der Parameter <code>eq</code> kann jetzt eine Länge von mehr als <code>1</code> haben.</td></tr><tr><td>v0.1.25</td><td>Hinzugefügt in: v0.1.25</td></tr></tbody></table></div><ul><li><code>str</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> Der zu parsende URL-Query-String</li><li><code>sep</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> Die Subzeichenfolge, die zum Abgrenzen von Schlüssel- und Wertpaaren im Query-String verwendet wird. <strong>Standard:</strong> <code>&#39;&amp;&#39;</code>.</li><li><code>eq</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a>. Die Subzeichenfolge, die zum Abgrenzen von Schlüsseln und Werten im Query-String verwendet wird. <strong>Standard:</strong> <code>&#39;=&#39;</code>.</li><li><code>options</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object&gt;</a><ul><li><code>decodeURIComponent</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function" target="_blank" rel="noreferrer">&lt;Function&gt;</a> Die Funktion, die beim Decodieren von Prozent-codierten Zeichen im Query-String verwendet werden soll. <strong>Standard:</strong> <code>querystring.unescape()</code>.</li><li><code>maxKeys</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type" target="_blank" rel="noreferrer">&lt;number&gt;</a> Gibt die maximale Anzahl von zu parsenden Schlüsseln an. Geben Sie <code>0</code> an, um die Beschränkungen der Schlüsselzählung zu entfernen. <strong>Standard:</strong> <code>1000</code>.</li></ul></li></ul><p>Die Methode <code>querystring.parse()</code> parst einen URL-Query-String (<code>str</code>) in eine Sammlung von Schlüssel- und Wertpaaren.</p><p>Zum Beispiel wird der Query-String <code>&#39;foo=bar&amp;abc=xyz&amp;abc=123&#39;</code> geparst in:</p><div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;foo&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;bar&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;abc&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;xyz&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;123&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>Das von der Methode <code>querystring.parse()</code> zurückgegebene Objekt erbt <em>nicht</em> prototypisch von dem JavaScript-<code>Object</code>. Dies bedeutet, dass typische <code>Object</code>-Methoden wie <code>obj.toString()</code>, <code>obj.hasOwnProperty()</code> und andere nicht definiert sind und <em>nicht funktionieren</em>.</p><p>Standardmäßig wird davon ausgegangen, dass Prozent-codierte Zeichen innerhalb des Query-Strings die UTF-8-Codierung verwenden. Wenn eine alternative Zeichencodierung verwendet wird, muss eine alternative Option <code>decodeURIComponent</code> angegeben werden:</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Angenommen, die gbkDecodeURIComponent-Funktion existiert bereits...</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">querystring.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">parse</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;w=%D6%D0%CE%C4&amp;foo=bar&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                  { decodeURIComponent: gbkDecodeURIComponent });</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="querystringstringifyobj-sep-eq-options" tabindex="-1"><code>querystring.stringify(obj[, sep[, eq[, options]]])</code> <a class="header-anchor" href="#querystringstringifyobj-sep-eq-options" aria-label="Permalink to “querystring.stringify(obj[, sep[, eq[, options]]])”">​</a></h2><p><strong>Hinzugefügt in: v0.1.25</strong></p><ul><li><code>obj</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object" target="_blank" rel="noreferrer">&lt;Object&gt;</a> Das Objekt, das in eine URL-Query-String serialisiert werden soll</li><li><code>sep</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> Die Substring, die verwendet wird, um Schlüssel- und Wertepaare im Query-String zu trennen. <strong>Standard:</strong> <code>&#39;&amp;&#39;</code>.</li><li><code>eq</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a>. Die Substring, die verwendet wird, um Schlüssel und Werte im Query-String zu trennen. <strong>Standard:</strong> <code>&#39;=&#39;</code>.</li><li><code>options</code><ul><li><code>encodeURIComponent</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function" target="_blank" rel="noreferrer">&lt;Function&gt;</a> Die Funktion, die verwendet wird, um URL-unsichere Zeichen in der Query-String in Prozentkodierung umzuwandeln. <strong>Standard:</strong> <code>querystring.escape()</code>.</li></ul></li></ul><p>Die Methode <code>querystring.stringify()</code> erzeugt einen URL-Query-String aus einem gegebenen <code>obj</code>, indem sie die &quot;eigenen Eigenschaften&quot; des Objekts durchläuft.</p><p>Sie serialisiert die folgenden Werttypen, die in <code>obj</code> übergeben werden: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type" target="_blank" rel="noreferrer">&lt;number&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt" target="_blank" rel="noreferrer">&lt;bigint&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type" target="_blank" rel="noreferrer">&lt;boolean&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string[]&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type" target="_blank" rel="noreferrer">&lt;number[]&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt" target="_blank" rel="noreferrer">&lt;bigint[]&gt;</a> | <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type" target="_blank" rel="noreferrer">&lt;boolean[]&gt;</a> Die numerischen Werte müssen endlich sein. Alle anderen Eingabewerte werden in leere Strings umgewandelt.</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">querystring.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">stringify</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ foo: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;bar&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, baz: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;qux&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;quux&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], corge: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> });</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Gibt &#39;foo=bar&amp;baz=qux&amp;baz=quux&amp;corge=&#39; zurück</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">querystring.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">stringify</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ foo: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;bar&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, baz: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;qux&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Gibt &#39;foo:bar;baz:qux&#39; zurück</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>Standardmäßig werden Zeichen, die innerhalb des Query-Strings eine Prozentkodierung erfordern, als UTF-8 kodiert. Wenn eine alternative Kodierung erforderlich ist, muss eine alternative Option <code>encodeURIComponent</code> angegeben werden:</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Angenommen, die Funktion gbkEncodeURIComponent existiert bereits,</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">querystring.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">stringify</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ w: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;中文&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, foo: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;bar&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                      { encodeURIComponent: gbkEncodeURIComponent });</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="querystringunescapestr" tabindex="-1"><code>querystring.unescape(str)</code> <a class="header-anchor" href="#querystringunescapestr" aria-label="Permalink to “querystring.unescape(str)”">​</a></h2><p><strong>Hinzugefügt in: v0.1.25</strong></p><ul><li><code>str</code> <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type" target="_blank" rel="noreferrer">&lt;string&gt;</a></li></ul><p>Die Methode <code>querystring.unescape()</code> führt die Dekodierung von URL-Prozent-kodierten Zeichen in der gegebenen <code>str</code> durch.</p><p>Die Methode <code>querystring.unescape()</code> wird von <code>querystring.parse()</code> verwendet und wird im Allgemeinen nicht direkt verwendet. Sie wird hauptsächlich exportiert, um Anwendungscode zu ermöglichen, bei Bedarf eine alternative Dekodierungsimplementierung bereitzustellen, indem <code>querystring.unescape</code> einer alternativen Funktion zugewiesen wird.</p><p>Standardmäßig versucht die Methode <code>querystring.unescape()</code>, die in JavaScript integrierte Methode <code>decodeURIComponent()</code> zum Dekodieren zu verwenden. Wenn dies fehlschlägt, wird ein sichereres Äquivalent verwendet, das bei fehlerhaften URLs keine Ausnahme auslöst.</p>`,40)])}var s=e(a,[[`render`,o]]);export{i as __pageData,s as default};