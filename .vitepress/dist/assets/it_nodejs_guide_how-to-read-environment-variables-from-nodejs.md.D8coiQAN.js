import{__plugin_vue_export_helper_default as e,createElementBlock as t,createStaticVNode as n,openBlock as r}from"./chunks/plugin-vue_export-helper.Bts1mPc7.js";const i=JSON.parse(`{"title":"Come leggere le variabili di ambiente in Node.js","description":"Scopri come accedere alle variabili di ambiente in Node.js utilizzando la proprietà process.env e i file .env.","frontmatter":{"title":"Come leggere le variabili di ambiente in Node.js","description":"Scopri come accedere alle variabili di ambiente in Node.js utilizzando la proprietà process.env e i file .env.","head":[["meta",{"name":"og:title","content":"Come leggere le variabili di ambiente in Node.js | Node.js - iDoc.dev"}],["meta",{"name":"og:description","content":"Scopri come accedere alle variabili di ambiente in Node.js utilizzando la proprietà process.env e i file .env."}],["meta",{"name":"twitter:title","content":"Come leggere le variabili di ambiente in Node.js | Node.js - iDoc.dev"}],["meta",{"name":"twitter:description","content":"Scopri come accedere alle variabili di ambiente in Node.js utilizzando la proprietà process.env e i file .env."}],["link",{"rel":"canonical","href":"https://idoc.dev/it/nodejs/guide/how-to-read-environment-variables-from-nodejs"}],["meta",{"property":"og:url","content":"https://idoc.dev/it/nodejs/guide/how-to-read-environment-variables-from-nodejs"}]]},"headers":[],"relativePath":"it/nodejs/guide/how-to-read-environment-variables-from-nodejs.md","filePath":"it/nodejs/guide/how-to-read-environment-variables-from-nodejs.md","lastUpdated":null}`),a={name:`it/nodejs/guide/how-to-read-environment-variables-from-nodejs.md`};function o(e,i,a,o,s,c){return r(),t(`div`,null,i[0]||=[n(`<h1 id="come-leggere-le-variabili-d-ambiente-da-node-js" tabindex="-1">Come leggere le variabili d&#39;ambiente da Node.js <a class="header-anchor" href="#come-leggere-le-variabili-d-ambiente-da-node-js" aria-label="Permalink to “Come leggere le variabili d&#39;ambiente da Node.js”">​</a></h1><p>Il modulo core <code>process</code> di Node.js fornisce la proprietà <code>env</code> che ospita tutte le variabili d&#39;ambiente impostate al momento dell&#39;avvio del processo.</p><p>Il codice seguente esegue <code>app.js</code> e imposta <code>USER_ID</code> e <code>USER_KEY</code>.</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">USER_ID</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">239482</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> USER_KEY</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">foobar</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> node</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> app.js</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Questo passerà l&#39;utente <code>USER_ID</code> come 239482 e <code>USER_KEY</code> come foobar. Questo è adatto per i test, tuttavia per la produzione probabilmente configurerai alcuni script bash per esportare le variabili.</p><div class="tip custom-block"><p class="custom-block-title">NOTE</p><p><code>process</code> non richiede un <code>&quot;require&quot;</code>, è automaticamente disponibile.</p></div><p>Ecco un esempio che accede alle variabili d&#39;ambiente <code>USER_ID</code> e <code>USER_KEY</code>, che abbiamo impostato nel codice sopra.</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">process.env.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">USER_ID</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &quot;239482</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">process.env.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">USER_KEY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &quot;foobar</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>Allo stesso modo puoi accedere a qualsiasi variabile d&#39;ambiente personalizzata che hai impostato. Node.js 20 ha introdotto il <a href="/it/nodejs/api/cli#env-file-config">supporto sperimentale per i file .env</a>.</p><p>Ora puoi utilizzare il flag <code>--env-file</code> per specificare un file di ambiente quando esegui la tua applicazione Node.js. Ecco un esempio di file <code>.env</code> e come accedere alle sue variabili usando <code>process.env</code>.</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.env</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> file</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">PORT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">3000</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>Nel tuo file js</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">process.env.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PORT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 3000</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Esegui il file <code>app.js</code> con le variabili d&#39;ambiente impostate nel file <code>.env</code>.</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">node </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">env</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">file</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.env app.js</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Questo comando carica tutte le variabili d&#39;ambiente dal file <code>.env</code>, rendendole disponibili all&#39;applicazione su <code>process.env</code>. Inoltre, puoi passare più argomenti --env-file. I file successivi sovrascrivono le variabili preesistenti definite nei file precedenti.</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">node</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --env-file=.env</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --env-file=.development.env</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> app.js</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="tip custom-block"><p class="custom-block-title">NOTE</p><p>se la stessa variabile è definita nell&#39;ambiente e nel file, il valore dell&#39;ambiente ha la precedenza.</p></div>`,18)])}var s=e(a,[[`render`,o]]);export{i as __pageData,s as default};