import{__plugin_vue_export_helper_default as e,createElementBlock as t,createStaticVNode as n,openBlock as r}from"./chunks/plugin-vue_export-helper.Bts1mPc7.js";const i=JSON.parse(`{"title":"Документация Node.js - Интернационализация","description":"Этот раздел документации Node.js охватывает модуль интернационализации (Intl), который предоставляет доступ к различным функциям интернационализации и локализации, включая сортировку, форматирование чисел, дат и времени и многое другое.","frontmatter":{"title":"Документация Node.js - Интернационализация","description":"Этот раздел документации Node.js охватывает модуль интернационализации (Intl), который предоставляет доступ к различным функциям интернационализации и локализации, включая сортировку, форматирование чисел, дат и времени и многое другое.","head":[["meta",{"name":"og:title","content":"Документация Node.js - Интернационализация | Node.js - iDoc.dev"}],["meta",{"name":"og:description","content":"Этот раздел документации Node.js охватывает модуль интернационализации (Intl), который предоставляет доступ к различным функциям интернационализации и локализации, включая сортировку, форматирование чисел, дат и времени и многое другое."}],["meta",{"name":"twitter:title","content":"Документация Node.js - Интернационализация | Node.js - iDoc.dev"}],["meta",{"name":"twitter:description","content":"Этот раздел документации Node.js охватывает модуль интернационализации (Intl), который предоставляет доступ к различным функциям интернационализации и локализации, включая сортировку, форматирование чисел, дат и времени и многое другое."}],["link",{"rel":"canonical","href":"https://idoc.dev/ru/nodejs/api/intl"}],["meta",{"property":"og:url","content":"https://idoc.dev/ru/nodejs/api/intl"}]]},"headers":[],"relativePath":"ru/nodejs/api/intl.md","filePath":"ru/nodejs/api/intl.md","lastUpdated":null}`),a={name:`ru/nodejs/api/intl.md`};function o(e,i,a,o,s,c){return r(),t(`div`,null,i[0]||=[n(`<h1 id="internationalization-support" tabindex="-1">Поддержка интернационализации <a class="header-anchor" href="#internationalization-support" aria-label="Permalink to “Поддержка интернационализации”">​</a></h1><p>Node.js имеет множество функций, которые упрощают написание интернационализированных программ. Некоторые из них:</p><ul><li><p>Функции, чувствительные к локали или поддерживающие Unicode, в <a href="https://tc39.github.io/ecma262/" target="_blank" rel="noreferrer">ECMAScript Language Specification</a>:</p><ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize" target="_blank" rel="noreferrer"><code>String.prototype.normalize()</code></a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/toLowerCase" target="_blank" rel="noreferrer"><code>String.prototype.toLowerCase()</code></a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/toUpperCase" target="_blank" rel="noreferrer"><code>String.prototype.toUpperCase()</code></a></li></ul></li><li><p>Все функции, описанные в <a href="https://tc39.github.io/ecma402/" target="_blank" rel="noreferrer">ECMAScript Internationalization API Specification</a> (aka ECMA-402):</p><ul><li>Объект <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl" target="_blank" rel="noreferrer"><code>Intl</code></a></li><li>Методы, чувствительные к локали, такие как <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/localeCompare" target="_blank" rel="noreferrer"><code>String.prototype.localeCompare()</code></a> и <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toLocaleString" target="_blank" rel="noreferrer"><code>Date.prototype.toLocaleString()</code></a></li></ul></li><li><p>Поддержка <a href="https://en.wikipedia.org/wiki/Internationalized_domain_name" target="_blank" rel="noreferrer">интернационализированных доменных имен</a> (IDN) в <a href="/ru/nodejs/api/url#the-whatwg-url-api">WHATWG URL parser</a></p></li><li><p><a href="/ru/nodejs/api/buffer#buffertranscodesource-fromenc-toenc"><code>require(&#39;node:buffer&#39;).transcode()</code></a></p></li><li><p>Более точное редактирование строк в <a href="/ru/nodejs/api/repl#repl">REPL</a></p></li><li><p><a href="/ru/nodejs/api/util#class-utiltextdecoder"><code>require(&#39;node:util&#39;).TextDecoder</code></a></p></li><li><p><a href="https://github.com/tc39/proposal-regexp-unicode-property-escapes" target="_blank" rel="noreferrer"><code>RegExp</code> Unicode Property Escapes</a></p></li></ul><p>Node.js и базовый движок V8 используют <a href="http://site.icu-project.org/" target="_blank" rel="noreferrer">International Components for Unicode (ICU)</a> для реализации этих функций в нативном C/C++ коде. Полный набор данных ICU предоставляется Node.js по умолчанию. Однако из-за размера файла данных ICU предусмотрено несколько вариантов настройки набора данных ICU при сборке или запуске Node.js.</p><h2 id="options-for-building-nodejs" tabindex="-1">Параметры сборки Node.js <a class="header-anchor" href="#options-for-building-nodejs" aria-label="Permalink to “Параметры сборки Node.js”">​</a></h2><p>Для управления использованием ICU в Node.js во время компиляции доступны четыре параметра <code>configure</code>. Дополнительные сведения о том, как компилировать Node.js, задокументированы в <a href="https://github.com/nodejs/node/blob/HEAD/BUILDING.md" target="_blank" rel="noreferrer">BUILDING.md</a>.</p><ul><li><code>--with-intl=none</code>/<code>--without-intl</code></li><li><code>--with-intl=system-icu</code></li><li><code>--with-intl=small-icu</code></li><li><code>--with-intl=full-icu</code> (по умолчанию)</li></ul><p>Обзор доступных функций Node.js и JavaScript для каждого параметра <code>configure</code>:</p><table tabindex="0"><thead><tr><th>Функция</th><th><code>none</code></th><th><code>system-icu</code></th><th><code>small-icu</code></th><th><code>full-icu</code></th></tr></thead><tbody><tr><td><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize" target="_blank" rel="noreferrer"><code>String.prototype.normalize()</code></a></td><td>отсутствует (функция ничего не делает)</td><td>полная</td><td>полная</td><td>полная</td></tr><tr><td><code>String.prototype.to*Case()</code></td><td>полная</td><td>полная</td><td>полная</td><td>полная</td></tr><tr><td><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl" target="_blank" rel="noreferrer"><code>Intl</code></a></td><td>отсутствует (объект не существует)</td><td>частичная/полная (зависит от ОС)</td><td>частичная (только английский)</td><td>полная</td></tr><tr><td><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/localeCompare" target="_blank" rel="noreferrer"><code>String.prototype.localeCompare()</code></a></td><td>частичная (без учета локали)</td><td>полная</td><td>полная</td><td>полная</td></tr><tr><td><code>String.prototype.toLocale*Case()</code></td><td>частичная (без учета локали)</td><td>полная</td><td>полная</td><td>полная</td></tr><tr><td><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/toLocaleString" target="_blank" rel="noreferrer"><code>Number.prototype.toLocaleString()</code></a></td><td>частичная (без учета локали)</td><td>частичная/полная (зависит от ОС)</td><td>частичная (только английский)</td><td>полная</td></tr><tr><td><code>Date.prototype.toLocale*String()</code></td><td>частичная (без учета локали)</td><td>частичная/полная (зависит от ОС)</td><td>частичная (только английский)</td><td>полная</td></tr><tr><td><a href="/ru/nodejs/api/url#legacy-url-api">Legacy URL Parser</a></td><td>частичная (нет поддержки IDN)</td><td>полная</td><td>полная</td><td>полная</td></tr><tr><td><a href="/ru/nodejs/api/url#the-whatwg-url-api">WHATWG URL Parser</a></td><td>частичная (нет поддержки IDN)</td><td>полная</td><td>полная</td><td>полная</td></tr><tr><td><a href="/ru/nodejs/api/buffer#buffertranscodesource-fromenc-toenc"><code>require(&#39;node:buffer&#39;).transcode()</code></a></td><td>отсутствует (функция не существует)</td><td>полная</td><td>полная</td><td>полная</td></tr><tr><td><a href="/ru/nodejs/api/repl#repl">REPL</a></td><td>частичная (неточное редактирование строк)</td><td>полная</td><td>полная</td><td>полная</td></tr><tr><td><a href="/ru/nodejs/api/util#class-utiltextdecoder"><code>require(&#39;node:util&#39;).TextDecoder</code></a></td><td>частичная (поддержка базовых кодировок)</td><td>частичная/полная (зависит от ОС)</td><td>частичная (только Unicode)</td><td>полная</td></tr><tr><td><a href="https://github.com/tc39/proposal-regexp-unicode-property-escapes" target="_blank" rel="noreferrer"><code>RegExp</code> Unicode Property Escapes</a></td><td>отсутствует (недопустимая ошибка <code>RegExp</code>)</td><td>полная</td><td>полная</td><td>полная</td></tr><tr><td>Обозначение &quot;(без учета локали)&quot; означает, что функция выполняет свою операцию так же, как и версия функции без <code>Locale</code>, если таковая существует. Например, в режиме <code>none</code> операция <code>Date.prototype.toLocaleString()</code> идентична операции <code>Date.prototype.toString()</code>.</td><td></td><td></td><td></td><td></td></tr></tbody></table><h3 id="disable-all-internationalization-features-none" tabindex="-1">Отключение всех функций интернационализации (<code>none</code>) <a class="header-anchor" href="#disable-all-internationalization-features-none" aria-label="Permalink to “Отключение всех функций интернационализации (none)”">​</a></h3><p>Если выбран этот параметр, ICU отключается, и большинство функций интернационализации, упомянутых выше, будут <strong>недоступны</strong> в результирующем бинарном файле <code>node</code>.</p><h3 id="build-with-a-pre-installed-icu-system-icu" tabindex="-1">Сборка с предварительно установленной ICU (<code>system-icu</code>) <a class="header-anchor" href="#build-with-a-pre-installed-icu-system-icu" aria-label="Permalink to “Сборка с предварительно установленной ICU (system-icu)”">​</a></h3><p>Node.js может быть связан с ICU, уже установленной в системе. Фактически, большинство дистрибутивов Linux уже поставляются с установленной ICU, и этот параметр позволит повторно использовать тот же набор данных, который используется другими компонентами ОС.</p><p>Функциональные возможности, требующие только саму библиотеку ICU, такие как <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize" target="_blank" rel="noreferrer"><code>String.prototype.normalize()</code></a> и <a href="/ru/nodejs/api/url#the-whatwg-url-api">WHATWG URL parser</a>, полностью поддерживаются в режиме <code>system-icu</code>. Функции, требующие дополнительно данные локали ICU, такие как <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat" target="_blank" rel="noreferrer"><code>Intl.DateTimeFormat</code></a>, <em>могут</em> поддерживаться полностью или частично, в зависимости от полноты данных ICU, установленных в системе.</p><h3 id="embed-a-limited-set-of-icu-data-small-icu" tabindex="-1">Встраивание ограниченного набора данных ICU (<code>small-icu</code>) <a class="header-anchor" href="#embed-a-limited-set-of-icu-data-small-icu" aria-label="Permalink to “Встраивание ограниченного набора данных ICU (small-icu)”">​</a></h3><p>Этот параметр позволяет результирующему бинарному файлу статически связываться с библиотекой ICU и включает подмножество данных ICU (обычно только английскую локаль) в исполняемый файл <code>node</code>.</p><p>Функциональные возможности, требующие только саму библиотеку ICU, такие как <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize" target="_blank" rel="noreferrer"><code>String.prototype.normalize()</code></a> и <a href="/ru/nodejs/api/url#the-whatwg-url-api">WHATWG URL parser</a>, полностью поддерживаются в режиме <code>small-icu</code>. Функции, требующие дополнительно данные локали ICU, такие как <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat" target="_blank" rel="noreferrer"><code>Intl.DateTimeFormat</code></a>, обычно работают только с английской локалью:</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> january</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Date</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">9e8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> english</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Intl.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">DateTimeFormat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;en&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, { month: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;long&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> });</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> spanish</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Intl.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">DateTimeFormat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;es&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, { month: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;long&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> });</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(english.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">format</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(january));</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Prints &quot;January&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(spanish.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">format</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(january));</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Prints either &quot;M01&quot; or &quot;January&quot; on small-icu, depending on the user’s default locale</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Should print &quot;enero&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>Этот режим обеспечивает баланс между функциями и размером бинарного файла.</p><h4 id="providing-icu-data-at-runtime" tabindex="-1">Предоставление данных ICU во время выполнения <a class="header-anchor" href="#providing-icu-data-at-runtime" aria-label="Permalink to “Предоставление данных ICU во время выполнения”">​</a></h4><p>Если используется опция <code>small-icu</code>, то можно предоставить дополнительные данные локали во время выполнения, чтобы методы JS работали для всех локалей ICU. Предположим, что файл данных хранится в <code>/runtime/directory/with/dat/file</code>, он может быть предоставлен ICU через:</p><ul><li>Опцию конфигурации <code>--with-icu-default-data-dir</code>: Она только встраивает путь к каталогу данных по умолчанию в бинарный файл. Фактический файл данных будет загружаться во время выполнения из этого каталога.</li><li>Переменную окружения <a href="/ru/nodejs/api/cli#node-icu-datafile"><code>NODE_ICU_DATA</code></a>:</li><li>Параметр CLI <a href="/ru/nodejs/api/cli#icu-data-dirfile"><code>--icu-data-dir</code></a>:</li></ul><p>Когда указано более одного из них, параметр CLI <code>--icu-data-dir</code> имеет наивысший приоритет, затем переменная окружения <code>NODE_ICU_DATA</code>, затем опция конфигурации <code>--with-icu-default-data-dir</code>.</p><p>ICU может автоматически находить и загружать различные форматы данных, но данные должны соответствовать версии ICU, а файл должен быть правильно назван. Наиболее распространенное имя для файла данных - <code>icudtX[bl].dat</code>, где <code>X</code> обозначает предполагаемую версию ICU, а <code>b</code> или <code>l</code> указывает на порядок байтов системы. Node.js не сможет загрузиться, если ожидаемый файл данных не может быть прочитан из указанного каталога. Имя файла данных, соответствующего текущей версии Node.js, можно вычислить с помощью:</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`icudt\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">process</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">versions</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">icu</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">split</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;.&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">)[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">]</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">os</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">endianness</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">()[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">].</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toLowerCase</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">()</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}.dat\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Ознакомьтесь со статьей <a href="http://userguide.icu-project.org/icudata" target="_blank" rel="noreferrer">&quot;ICU Data&quot;</a> в руководстве пользователя ICU для получения информации о других поддерживаемых форматах и более подробной информации о данных ICU в целом.</p><p>NPM-модуль <a href="https://www.npmjs.com/package/full-icu" target="_blank" rel="noreferrer">full-icu</a> может значительно упростить установку данных ICU, определяя версию ICU выполняемого <code>node</code> и загружая соответствующий файл данных. После установки модуля через <code>npm i full-icu</code>, файл данных будет доступен в <code>./node_modules/full-icu</code>. Этот путь можно затем передать либо в <code>NODE_ICU_DATA</code>, либо в <code>--icu-data-dir</code>, как показано выше, чтобы включить полную поддержку <code>Intl</code>.</p><h3 id="embed-the-entire-icu-full-icu" tabindex="-1">Встраивание полной версии ICU (<code>full-icu</code>) <a class="header-anchor" href="#embed-the-entire-icu-full-icu" aria-label="Permalink to “Встраивание полной версии ICU (full-icu)”">​</a></h3><p>Этот параметр заставляет результирующий бинарный файл статически линковаться с ICU и включать полный набор данных ICU. Двоичный файл, созданный таким образом, не имеет никаких дополнительных внешних зависимостей и поддерживает все локали, но может быть довольно большим. Это поведение по умолчанию, если не передан флаг <code>--with-intl</code>. Официальные бинарные файлы также создаются в этом режиме.</p><h2 id="detecting-internationalization-support" tabindex="-1">Обнаружение поддержки интернационализации <a class="header-anchor" href="#detecting-internationalization-support" aria-label="Permalink to “Обнаружение поддержки интернационализации”">​</a></h2><p>Чтобы проверить, включен ли ICU вообще (<code>system-icu</code>, <code>small-icu</code> или <code>full-icu</code>), достаточно просто проверить существование <code>Intl</code>:</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> hasICU</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> typeof</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Intl </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">===</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;object&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>В качестве альтернативы можно проверить наличие <code>process.versions.icu</code>, свойства, определенного только тогда, когда ICU включен:</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> hasICU</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> typeof</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> process.versions.icu </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">===</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;string&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Чтобы проверить поддержку локали, отличной от английской (т. е. <code>full-icu</code> или <code>system-icu</code>), <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat" target="_blank" rel="noreferrer"><code>Intl.DateTimeFormat</code></a> может быть хорошим определяющим фактором:</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> hasFullICU</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  try</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> january</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Date</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">9e8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> spanish</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Intl.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">DateTimeFormat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;es&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, { month: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;long&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> });</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> spanish.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">format</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(january) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">===</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;enero&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">catch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (err) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})();</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>Для более подробных тестов поддержки <code>Intl</code> могут оказаться полезными следующие ресурсы:</p><ul><li><a href="https://github.com/srl295/btest402" target="_blank" rel="noreferrer">btest402</a>: Обычно используется для проверки правильности сборки Node.js с поддержкой <code>Intl</code>.</li><li><a href="https://github.com/tc39/test262/tree/HEAD/test/intl402" target="_blank" rel="noreferrer">Test262</a>: Официальный набор тестов на соответствие ECMAScript включает раздел, посвященный ECMA-402.</li></ul>`,38)])}var s=e(a,[[`render`,o]]);export{i as __pageData,s as default};