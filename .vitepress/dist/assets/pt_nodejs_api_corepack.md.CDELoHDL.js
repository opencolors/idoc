import{__plugin_vue_export_helper_default as e,createElementBlock as t,createStaticVNode as n,openBlock as r}from"./chunks/plugin-vue_export-helper.Bts1mPc7.js";const i=JSON.parse(`{"title":"Documentação do Corepack do Node.js","description":"Corepack é um binário distribuído com o Node.js, fornecendo uma interface padrão para gerenciar gerenciadores de pacotes como npm, pnpm e Yarn. Ele permite que os usuários alternem facilmente entre diferentes gerenciadores de pacotes e versões, garantindo compatibilidade e simplificando o fluxo de trabalho de desenvolvimento.","frontmatter":{"title":"Documentação do Corepack do Node.js","description":"Corepack é um binário distribuído com o Node.js, fornecendo uma interface padrão para gerenciar gerenciadores de pacotes como npm, pnpm e Yarn. Ele permite que os usuários alternem facilmente entre diferentes gerenciadores de pacotes e versões, garantindo compatibilidade e simplificando o fluxo de trabalho de desenvolvimento.","head":[["meta",{"name":"og:title","content":"Documentação do Corepack do Node.js | Node.js - iDoc.dev"}],["meta",{"name":"og:description","content":"Corepack é um binário distribuído com o Node.js, fornecendo uma interface padrão para gerenciar gerenciadores de pacotes como npm, pnpm e Yarn. Ele permite que os usuários alternem facilmente entre diferentes gerenciadores de pacotes e versões, garantindo compatibilidade e simplificando o fluxo de trabalho de desenvolvimento."}],["meta",{"name":"twitter:title","content":"Documentação do Corepack do Node.js | Node.js - iDoc.dev"}],["meta",{"name":"twitter:description","content":"Corepack é um binário distribuído com o Node.js, fornecendo uma interface padrão para gerenciar gerenciadores de pacotes como npm, pnpm e Yarn. Ele permite que os usuários alternem facilmente entre diferentes gerenciadores de pacotes e versões, garantindo compatibilidade e simplificando o fluxo de trabalho de desenvolvimento."}],["link",{"rel":"canonical","href":"https://idoc.dev/pt/nodejs/api/corepack"}],["meta",{"property":"og:url","content":"https://idoc.dev/pt/nodejs/api/corepack"}]]},"headers":[],"relativePath":"pt/nodejs/api/corepack.md","filePath":"pt/nodejs/api/corepack.md","lastUpdated":null}`),a={name:`pt/nodejs/api/corepack.md`};function o(e,i,a,o,s,c){return r(),t(`div`,null,i[0]||=[n(`<h1 id="corepack" tabindex="-1">Corepack <a class="header-anchor" href="#corepack" aria-label="Permalink to “Corepack”">​</a></h1><p><strong>Adicionado em: v16.9.0, v14.19.0</strong></p><div class="warning custom-block"><p class="custom-block-title">[Estável: 1 - Experimental]</p><p><a href="/pt/nodejs/api/documentation#stability-index">Estável: 1</a> <a href="/pt/nodejs/api/documentation#stability-index">Estabilidade: 1</a> - Experimental</p></div><p><em><a href="https://github.com/nodejs/corepack">Corepack</a></em> é uma ferramenta experimental para ajudar no gerenciamento de versões de seus gerenciadores de pacotes. Ele expõe proxies binários para cada <a href="/pt/nodejs/api/corepack#supported-package-managers">gerenciador de pacotes suportado</a> que, quando chamado, identificará qual gerenciador de pacotes está configurado para o projeto atual, fará o download, se necessário, e, finalmente, o executará.</p><p>Apesar de o Corepack ser distribuído com instalações padrão do Node.js, os gerenciadores de pacotes gerenciados pelo Corepack não fazem parte da distribuição do Node.js e:</p><ul><li>No primeiro uso, o Corepack baixa a versão mais recente da rede.</li><li>Quaisquer atualizações necessárias (relacionadas a vulnerabilidades de segurança ou não) estão fora do escopo do projeto Node.js. Se necessário, os usuários finais devem descobrir como atualizar por conta própria.</li></ul><p>Este recurso simplifica dois fluxos de trabalho principais:</p><ul><li>Facilita a integração de novos colaboradores, pois eles não precisarão mais seguir processos de instalação específicos do sistema apenas para ter o gerenciador de pacotes que você deseja que eles tenham.</li><li>Permite que você garanta que todos em sua equipe usarão exatamente a versão do gerenciador de pacotes que você pretende que eles usem, sem que eles tenham que sincronizá-la manualmente cada vez que você precisar fazer uma atualização.</li></ul><h2 id="workflows" tabindex="-1">Fluxos de trabalho <a class="header-anchor" href="#workflows" aria-label="Permalink to “Fluxos de trabalho”">​</a></h2><h3 id="enabling-the-feature" tabindex="-1">Ativando o recurso <a class="header-anchor" href="#enabling-the-feature" aria-label="Permalink to “Ativando o recurso”">​</a></h3><p>Devido ao seu status experimental, o Corepack atualmente precisa ser explicitamente habilitado para ter algum efeito. Para fazer isso, execute <a href="https://github.com/nodejs/corepack#corepack-enable--name" target="_blank" rel="noreferrer"><code>corepack enable</code></a>, que configurará os symlinks em seu ambiente próximo ao binário <code>node</code> (e sobrescreverá os symlinks existentes, se necessário).</p><p>A partir deste ponto, qualquer chamada para os <a href="/pt/nodejs/api/corepack#supported-package-managers">binários suportados</a> funcionará sem configuração adicional. Caso você tenha algum problema, execute <a href="https://github.com/nodejs/corepack#corepack-disable--name" target="_blank" rel="noreferrer"><code>corepack disable</code></a> para remover os proxies do seu sistema (e considere abrir um problema no <a href="https://github.com/nodejs/corepack" target="_blank" rel="noreferrer">repositório Corepack</a> para nos avisar).</p><h3 id="configuring-a-package" tabindex="-1">Configurando um pacote <a class="header-anchor" href="#configuring-a-package" aria-label="Permalink to “Configurando um pacote”">​</a></h3><p>Os proxies do Corepack encontrarão o arquivo <a href="/pt/nodejs/api/packages#nodejs-packagejson-field-definitions"><code>package.json</code></a> mais próximo na hierarquia de diretórios atual para extrair sua propriedade <a href="/pt/nodejs/api/packages#packagemanager"><code>&quot;packageManager&quot;</code></a>.</p><p>Se o valor corresponder a um <a href="/pt/nodejs/api/corepack#supported-package-managers">gerenciador de pacotes suportado</a>, o Corepack garantirá que todas as chamadas aos binários relevantes sejam executadas na versão solicitada, baixando-a sob demanda, se necessário, e abortando se não puder ser recuperada com sucesso.</p><p>Você pode usar <a href="https://github.com/nodejs/corepack#corepack-use-nameversion" target="_blank" rel="noreferrer"><code>corepack use</code></a> para pedir ao Corepack para atualizar seu <code>package.json</code> local para usar o gerenciador de pacotes de sua escolha:</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">corepack</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> use</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # define a versão 7.x mais recente no package.json</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">corepack</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> use</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> yarn@</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # define a versão mais recente no package.json</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="upgrading-the-global-versions" tabindex="-1">Atualizando as versões globais <a class="header-anchor" href="#upgrading-the-global-versions" aria-label="Permalink to “Atualizando as versões globais”">​</a></h3><p>Ao executar fora de um projeto existente (por exemplo, ao executar <code>yarn init</code>), o Corepack usará por padrão versões predefinidas correspondentes aproximadamente às versões estáveis mais recentes de cada ferramenta. Essas versões podem ser substituídas executando o comando <a href="https://github.com/nodejs/corepack#corepack-install--g--global---all--nameversion" target="_blank" rel="noreferrer"><code>corepack install</code></a> junto com a versão do gerenciador de pacotes que você deseja definir:</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">corepack</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --global</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Alternativamente, uma tag ou intervalo pode ser usado:</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">corepack</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --global</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pnpm@</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">corepack</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --global</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> yarn@stable</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="offline-workflow" tabindex="-1">Fluxo de trabalho offline <a class="header-anchor" href="#offline-workflow" aria-label="Permalink to “Fluxo de trabalho offline”">​</a></h3><p>Muitos ambientes de produção não têm acesso à rede. Como o Corepack geralmente baixa as versões do gerenciador de pacotes diretamente de seus registros, isso pode entrar em conflito com esses ambientes. Para evitar que isso aconteça, chame o comando <a href="https://github.com/nodejs/corepack#corepack-pack---all--nameversion" target="_blank" rel="noreferrer"><code>corepack pack</code></a> enquanto você ainda tem acesso à rede (normalmente ao mesmo tempo em que está preparando sua imagem de implantação). Isso garantirá que os gerenciadores de pacotes necessários estejam disponíveis mesmo sem acesso à rede.</p><p>O comando <code>pack</code> tem <a href="https://github.com/nodejs/corepack#utility-commands" target="_blank" rel="noreferrer">várias flags</a>. Consulte a <a href="https://github.com/nodejs/corepack#readme" target="_blank" rel="noreferrer">documentação detalhada do Corepack</a> para obter mais informações.</p><h2 id="supported-package-managers" tabindex="-1">Gerenciadores de pacotes suportados <a class="header-anchor" href="#supported-package-managers" aria-label="Permalink to “Gerenciadores de pacotes suportados”">​</a></h2><p>Os seguintes binários são fornecidos através do Corepack:</p><table tabindex="0"><thead><tr><th>Gerenciador de pacotes</th><th>Nomes dos binários</th></tr></thead><tbody><tr><td><a href="https://yarnpkg.com/" target="_blank" rel="noreferrer">Yarn</a></td><td><code>yarn</code>, <code>yarnpkg</code></td></tr><tr><td><a href="https://pnpm.io/" target="_blank" rel="noreferrer">pnpm</a></td><td><code>pnpm</code>, <code>pnpx</code></td></tr></tbody></table><h2 id="common-questions" tabindex="-1">Perguntas frequentes <a class="header-anchor" href="#common-questions" aria-label="Permalink to “Perguntas frequentes”">​</a></h2><h3 id="how-does-corepack-interact-with-npm?" tabindex="-1">Como o Corepack interage com o npm? <a class="header-anchor" href="#how-does-corepack-interact-with-npm?" aria-label="Permalink to “Como o Corepack interage com o npm?”">​</a></h3><p>Embora o Corepack pudesse suportar o npm como qualquer outro gerenciador de pacotes, seus shims não são habilitados por padrão. Isso tem algumas consequências:</p><ul><li>É sempre possível executar um comando <code>npm</code> dentro de um projeto configurado para ser usado com outro gerenciador de pacotes, já que o Corepack não pode interceptá-lo.</li><li>Embora <code>npm</code> seja uma opção válida na propriedade <a href="/pt/nodejs/api/packages#packagemanager"><code>&quot;packageManager&quot;</code></a>, a falta de shim fará com que o npm global seja usado.</li></ul><h3 id="running-npm-install--g-yarn-doesnt-work" tabindex="-1">Executar <code>npm install -g yarn</code> não funciona <a class="header-anchor" href="#running-npm-install--g-yarn-doesnt-work" aria-label="Permalink to “Executar npm install -g yarn não funciona”">​</a></h3><p>O npm impede a substituição acidental dos binários do Corepack ao fazer uma instalação global. Para evitar este problema, considere uma das seguintes opções:</p><ul><li>Não execute este comando; O Corepack fornecerá os binários do gerenciador de pacotes de qualquer maneira e garantirá que as versões solicitadas estejam sempre disponíveis, portanto, instalar os gerenciadores de pacotes explicitamente não é necessário.</li><li>Adicione a flag <code>--force</code> a <code>npm install</code>; isso dirá ao npm que está tudo bem substituir os binários, mas você apagará os do Corepack no processo. (Execute <a href="https://github.com/nodejs/corepack#corepack-enable--name" target="_blank" rel="noreferrer"><code>corepack enable</code></a> para adicioná-los de volta.)</li></ul>`,35)])}var s=e(a,[[`render`,o]]);export{i as __pageData,s as default};