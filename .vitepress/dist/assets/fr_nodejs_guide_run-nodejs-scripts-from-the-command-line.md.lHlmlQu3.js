import{__plugin_vue_export_helper_default as e,createElementBlock as t,createStaticVNode as n,openBlock as r}from"./chunks/plugin-vue_export-helper.Bts1mPc7.js";const i=JSON.parse(`{"title":"Exécuter des scripts Node.js à partir de la ligne de commande","description":"Découvrez comment exécuter des programmes Node.js à partir de la ligne de commande, y compris l'utilisation de la commande node, les lignes shebang, les permissions d'exécution, la transmission de chaînes de caractères en tant qu'arguments et la réinitialisation automatique de l'application.","frontmatter":{"title":"Exécuter des scripts Node.js à partir de la ligne de commande","description":"Découvrez comment exécuter des programmes Node.js à partir de la ligne de commande, y compris l'utilisation de la commande node, les lignes shebang, les permissions d'exécution, la transmission de chaînes de caractères en tant qu'arguments et la réinitialisation automatique de l'application.","head":[["meta",{"name":"og:title","content":"Exécuter des scripts Node.js à partir de la ligne de commande | Node.js - iDoc.dev"}],["meta",{"name":"og:description","content":"Découvrez comment exécuter des programmes Node.js à partir de la ligne de commande, y compris l'utilisation de la commande node, les lignes shebang, les permissions d'exécution, la transmission de chaînes de caractères en tant qu'arguments et la réinitialisation automatique de l'application."}],["meta",{"name":"twitter:title","content":"Exécuter des scripts Node.js à partir de la ligne de commande | Node.js - iDoc.dev"}],["meta",{"name":"twitter:description","content":"Découvrez comment exécuter des programmes Node.js à partir de la ligne de commande, y compris l'utilisation de la commande node, les lignes shebang, les permissions d'exécution, la transmission de chaînes de caractères en tant qu'arguments et la réinitialisation automatique de l'application."}],["link",{"rel":"canonical","href":"https://idoc.dev/fr/nodejs/guide/run-nodejs-scripts-from-the-command-line"}],["meta",{"property":"og:url","content":"https://idoc.dev/fr/nodejs/guide/run-nodejs-scripts-from-the-command-line"}]]},"headers":[],"relativePath":"fr/nodejs/guide/run-nodejs-scripts-from-the-command-line.md","filePath":"fr/nodejs/guide/run-nodejs-scripts-from-the-command-line.md","lastUpdated":1749464498000}`),a={name:`fr/nodejs/guide/run-nodejs-scripts-from-the-command-line.md`};function o(e,i,a,o,s,c){return r(),t(`div`,null,i[0]||=[n(`<h1 id="executer-des-scripts-node-js-depuis-la-ligne-de-commande" tabindex="-1">Exécuter des scripts Node.js depuis la ligne de commande <a class="header-anchor" href="#executer-des-scripts-node-js-depuis-la-ligne-de-commande" aria-label="Permalink to “Exécuter des scripts Node.js depuis la ligne de commande”">​</a></h1><p>La manière habituelle d&#39;exécuter un programme Node.js est d&#39;utiliser la commande <code>node</code> disponible globalement (une fois que vous avez installé Node.js) et de passer le nom du fichier que vous souhaitez exécuter.</p><p>Si votre fichier d&#39;application Node.js principal est <code>app.js</code>, vous pouvez l&#39;appeler en tapant :</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">node</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> app.js</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Ci-dessus, vous demandez explicitement au shell d&#39;exécuter votre script avec <code>node</code>. Vous pouvez également intégrer ces informations dans votre fichier JavaScript avec une ligne &quot;shebang&quot;. Le &quot;shebang&quot; est la première ligne du fichier et indique au système d&#39;exploitation quel interpréteur utiliser pour exécuter le script. Voici la première ligne de JavaScript\xA0:</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#!/usr/bin/node</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Ci-dessus, nous donnons explicitement le chemin absolu de l&#39;interpréteur. Tous les systèmes d&#39;exploitation n&#39;ont pas <code>node</code> dans le dossier <code>bin</code>, mais tous devraient avoir <code>env</code>. Vous pouvez demander au système d&#39;exploitation d&#39;exécuter <code>env</code> avec <code>node</code> comme paramètre\xA0:</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#!/usr/bin/env node</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// votre code javascript</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="pour-utiliser-un-shebang-votre-fichier-doit-avoir-l-autorisation-d-execution" tabindex="-1">Pour utiliser un shebang, votre fichier doit avoir l&#39;autorisation d&#39;exécution. <a class="header-anchor" href="#pour-utiliser-un-shebang-votre-fichier-doit-avoir-l-autorisation-d-execution" aria-label="Permalink to “Pour utiliser un shebang, votre fichier doit avoir l&#39;autorisation d&#39;exécution.”">​</a></h2><p>Vous pouvez donner à <code>app.js</code> l&#39;autorisation d&#39;exécution en exécutant\xA0:</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">chmod</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> u+x</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> app.js</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Lors de l&#39;exécution de la commande, assurez-vous d&#39;être dans le même répertoire qui contient le fichier <code>app.js</code>.</p><h2 id="passer-une-chaine-de-caracteres-comme-argument-a-node-au-lieu-du-chemin-d-acces-au-fichier" tabindex="-1">Passer une chaîne de caractères comme argument à node au lieu du chemin d&#39;accès au fichier <a class="header-anchor" href="#passer-une-chaine-de-caracteres-comme-argument-a-node-au-lieu-du-chemin-d-acces-au-fichier" aria-label="Permalink to “Passer une chaîne de caractères comme argument à node au lieu du chemin d&#39;accès au fichier”">​</a></h2><p>Pour exécuter une chaîne de caractères comme argument, vous pouvez utiliser <code>-e</code>, <code>--eval &quot;script&quot;</code>. Évaluez l&#39;argument suivant comme JavaScript. Les modules qui sont prédéfinis dans le REPL peuvent également être utilisés dans le script. Sous Windows, en utilisant <code>cmd.exe</code>, un guillemet simple ne fonctionnera pas correctement car il ne reconnaît que les guillemets doubles <code>&quot;</code> pour la citation. Dans Powershell ou Git bash, les deux <code>&quot;</code> et <code>&#39;</code> sont utilisables.</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">node</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;console.log(123)&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="redemarrer-l-application-automatiquement" tabindex="-1">Redémarrer l&#39;application automatiquement <a class="header-anchor" href="#redemarrer-l-application-automatiquement" aria-label="Permalink to “Redémarrer l&#39;application automatiquement”">​</a></h2><p>À partir de nodejs V 16, il existe une option intégrée pour redémarrer automatiquement l&#39;application lorsqu&#39;un fichier change. Ceci est utile à des fins de développement. Pour utiliser cette fonctionnalité, vous devez passer l&#39;indicateur <code>watch</code> à nodejs.</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">node</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --watch</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> app.js</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Ainsi, lorsque vous modifiez le fichier, l&#39;application redémarre automatiquement. Lisez la documentation de l&#39;indicateur --watch <a href="/fr/nodejs/api/cli#watch">/api/cli#watch</a>.</p>`,19)])}var s=e(a,[[`render`,o]]);export{i as __pageData,s as default};