import{__plugin_vue_export_helper_default as e,createElementBlock as t,createStaticVNode as n,openBlock as r}from"./chunks/plugin-vue_export-helper.Bts1mPc7.js";const i=JSON.parse(`{"title":"Выполнение скриптов Node.js из командной строки","description":"Узнайте, как запускать программы Node.js из командной строки, включая использование команды node, строки shebang, права на выполнение, передачу строк в качестве аргументов и автоматическое перезапуск приложения.","frontmatter":{"title":"Выполнение скриптов Node.js из командной строки","description":"Узнайте, как запускать программы Node.js из командной строки, включая использование команды node, строки shebang, права на выполнение, передачу строк в качестве аргументов и автоматическое перезапуск приложения.","head":[["meta",{"name":"og:title","content":"Выполнение скриптов Node.js из командной строки | Node.js - iDoc.dev"}],["meta",{"name":"og:description","content":"Узнайте, как запускать программы Node.js из командной строки, включая использование команды node, строки shebang, права на выполнение, передачу строк в качестве аргументов и автоматическое перезапуск приложения."}],["meta",{"name":"twitter:title","content":"Выполнение скриптов Node.js из командной строки | Node.js - iDoc.dev"}],["meta",{"name":"twitter:description","content":"Узнайте, как запускать программы Node.js из командной строки, включая использование команды node, строки shebang, права на выполнение, передачу строк в качестве аргументов и автоматическое перезапуск приложения."}],["link",{"rel":"canonical","href":"https://idoc.dev/ru/nodejs/guide/run-nodejs-scripts-from-the-command-line"}],["meta",{"property":"og:url","content":"https://idoc.dev/ru/nodejs/guide/run-nodejs-scripts-from-the-command-line"}]]},"headers":[],"relativePath":"ru/nodejs/guide/run-nodejs-scripts-from-the-command-line.md","filePath":"ru/nodejs/guide/run-nodejs-scripts-from-the-command-line.md","lastUpdated":1749464498000}`),a={name:`ru/nodejs/guide/run-nodejs-scripts-from-the-command-line.md`};function o(e,i,a,o,s,c){return r(),t(`div`,null,i[0]||=[n(`<h1 id="запуск-скриптов-node-js-из-команднои-строки" tabindex="-1">Запуск скриптов Node.js из командной строки <a class="header-anchor" href="#запуск-скриптов-node-js-из-команднои-строки" aria-label="Permalink to “Запуск скриптов Node.js из командной строки”">​</a></h1><p>Обычно программа Node.js запускается с помощью глобально доступной команды <code>node</code> (после установки Node.js) и передачи имени файла, который вы хотите выполнить.</p><p>Если ваш основной файл приложения Node.js — <code>app.js</code>, вы можете вызвать его, набрав:</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">node</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> app.js</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Выше вы явно говорите оболочке запустить ваш скрипт с помощью <code>node</code>. Вы также можете встроить эту информацию в свой файл JavaScript с помощью строки &quot;shebang&quot;. &quot;Shebang&quot; — это первая строка в файле, которая сообщает ОС, какой интерпретатор использовать для запуска скрипта. Ниже приведена первая строка JavaScript:</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#!/usr/bin/node</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Выше мы явно указываем абсолютный путь к интерпретатору. Не во всех операционных системах <code>node</code> находится в папке <code>bin</code>, но во всех должна быть <code>env</code>. Вы можете указать ОС запустить <code>env</code> с <code>node</code> в качестве параметра:</p><div class="language-javascript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#!/usr/bin/env node</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// ваш код javascript</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="чтобы-использовать-shebang-ваш-фаил-должен-иметь-разрешение-на-выполнение" tabindex="-1">Чтобы использовать shebang, ваш файл должен иметь разрешение на выполнение. <a class="header-anchor" href="#чтобы-использовать-shebang-ваш-фаил-должен-иметь-разрешение-на-выполнение" aria-label="Permalink to “Чтобы использовать shebang, ваш файл должен иметь разрешение на выполнение.”">​</a></h2><p>Вы можете дать <code>app.js</code> разрешение на выполнение, выполнив:</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">chmod</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> u+x</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> app.js</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>При выполнении команды убедитесь, что вы находитесь в том же каталоге, который содержит файл <code>app.js</code>.</p><h2 id="передача-строки-в-качестве-аргумента-node-вместо-пути-к-фаилу" tabindex="-1">Передача строки в качестве аргумента node вместо пути к файлу <a class="header-anchor" href="#передача-строки-в-качестве-аргумента-node-вместо-пути-к-фаилу" aria-label="Permalink to “Передача строки в качестве аргумента node вместо пути к файлу”">​</a></h2><p>Чтобы выполнить строку в качестве аргумента, можно использовать <code>-e</code>, <code>--eval &quot;script&quot;</code>. Оцените следующий аргумент как JavaScript. Модули, которые предопределены в REPL, также могут использоваться в скрипте. В Windows, при использовании <code>cmd.exe</code>, одинарная кавычка не будет работать правильно, потому что он распознает только двойные <code>&quot;</code> для заключения в кавычки. В Powershell или Git bash можно использовать как <code>&quot;</code> так и <code>&#39;</code>.</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">node</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;console.log(123)&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="автоматическии-перезапуск-приложения" tabindex="-1">Автоматический перезапуск приложения <a class="header-anchor" href="#автоматическии-перезапуск-приложения" aria-label="Permalink to “Автоматический перезапуск приложения”">​</a></h2><p>Начиная с nodejs V 16, есть встроенная опция для автоматического перезапуска приложения при изменении файла. Это полезно для целей разработки. Чтобы использовать эту функцию, необходимо передать флаг <code>watch</code> в nodejs.</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">node</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --watch</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> app.js</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Таким образом, при изменении файла приложение будет перезапускаться автоматически. Прочтите документацию по флагу --watch <a href="/ru/nodejs/api/cli#watch">flag documentation</a>.</p>`,19)])}var s=e(a,[[`render`,o]]);export{i as __pageData,s as default};