import{__plugin_vue_export_helper_default as e,createElementBlock as t,createStaticVNode as n,openBlock as r}from"./chunks/plugin-vue_export-helper.Bts1mPc7.js";const i=JSON.parse(`{"title":"ECMAScript 2015 (ES6) et au-delà dans Node.js","description":"Node.js prend en charge les fonctionnalités ECMAScript modernes via le moteur V8, avec de nouvelles fonctionnalités et améliorations apportées de manière opportune.","frontmatter":{"title":"ECMAScript 2015 (ES6) et au-delà dans Node.js","description":"Node.js prend en charge les fonctionnalités ECMAScript modernes via le moteur V8, avec de nouvelles fonctionnalités et améliorations apportées de manière opportune.","head":[["meta",{"name":"og:title","content":"ECMAScript 2015 (ES6) et au-delà dans Node.js | Node.js - iDoc.dev"}],["meta",{"name":"og:description","content":"Node.js prend en charge les fonctionnalités ECMAScript modernes via le moteur V8, avec de nouvelles fonctionnalités et améliorations apportées de manière opportune."}],["meta",{"name":"twitter:title","content":"ECMAScript 2015 (ES6) et au-delà dans Node.js | Node.js - iDoc.dev"}],["meta",{"name":"twitter:description","content":"Node.js prend en charge les fonctionnalités ECMAScript modernes via le moteur V8, avec de nouvelles fonctionnalités et améliorations apportées de manière opportune."}],["link",{"rel":"canonical","href":"https://idoc.dev/fr/nodejs/guide/ECMAScript-2015(ES6)-and-beyond"}],["meta",{"property":"og:url","content":"https://idoc.dev/fr/nodejs/guide/ECMAScript-2015(ES6)-and-beyond"}]]},"headers":[],"relativePath":"fr/nodejs/guide/ECMAScript-2015(ES6)-and-beyond.md","filePath":"fr/nodejs/guide/ECMAScript-2015(ES6)-and-beyond.md","lastUpdated":1749464498000}`),a={name:`fr/nodejs/guide/ECMAScript-2015(ES6)-and-beyond.md`};function o(e,i,a,o,s,c){return r(),t(`div`,null,i[0]||=[n(`<h1 id="ecmascript-2015-es6-et-versions-ulterieures" tabindex="-1">ECMAScript 2015 (ES6) et versions ultérieures <a class="header-anchor" href="#ecmascript-2015-es6-et-versions-ulterieures" aria-label="Permalink to “ECMAScript 2015 (ES6) et versions ultérieures”">​</a></h1><p>Node.js est construit sur des versions modernes de <a href="https://v8.dev/" target="_blank" rel="noreferrer">V8</a>. En restant à jour avec les dernières versions de ce moteur, nous nous assurons que les nouvelles fonctionnalités de la <a href="https://tc39.es/ecma262/" target="_blank" rel="noreferrer">spécification JavaScript ECMA-262</a> soient mises à la disposition des développeurs Node.js en temps opportun, ainsi que des améliorations continues de la performance et de la stabilité.</p><p>Toutes les fonctionnalités ECMAScript 2015 (ES6) sont divisées en trois groupes : fonctionnalités <code>livrées</code>, <code>en phase de préparation</code> et <code>en cours de développement</code> :</p><ul><li>Toutes les fonctionnalités <code>livrées</code>, que V8 considère comme stables, sont activées <code>par défaut sur Node.js</code> et ne nécessitent <code>AUCUN</code> type de drapeau d&#39;exécution.</li><li>Les fonctionnalités <code>en phase de préparation</code>, qui sont des fonctionnalités presque terminées mais qui ne sont pas considérées comme stables par l&#39;équipe V8, nécessitent un drapeau d&#39;exécution : <code>--harmony</code>.</li><li>Les fonctionnalités <code>en cours de développement</code> peuvent être activées individuellement par leur drapeau d&#39;harmonie respectif, bien que cela soit fortement déconseillé, sauf à des fins de test. Remarque : ces drapeaux sont exposés par V8 et sont susceptibles de changer sans aucun avis de dépréciation.</li></ul><h2 id="quelles-fonctionnalites-sont-livrees-par-defaut-avec-quelle-version-de-node-js" tabindex="-1">Quelles fonctionnalités sont livrées par défaut avec quelle version de Node.js\xA0? <a class="header-anchor" href="#quelles-fonctionnalites-sont-livrees-par-defaut-avec-quelle-version-de-node-js" aria-label="Permalink to “Quelles fonctionnalités sont livrées par défaut avec quelle version de Node.js\xA0?”">​</a></h2><p>Le site web <a href="https://node.green" target="_blank" rel="noreferrer">node.green</a> fournit un excellent aperçu des fonctionnalités ECMAScript prises en charge dans diverses versions de Node.js, basé sur la table de compatibilité de kangax.</p><h2 id="quelles-sont-les-fonctionnalites-en-cours-de-developpement" tabindex="-1">Quelles sont les fonctionnalités en cours de développement ? <a class="header-anchor" href="#quelles-sont-les-fonctionnalites-en-cours-de-developpement" aria-label="Permalink to “Quelles sont les fonctionnalités en cours de développement ?”">​</a></h2><p>De nouvelles fonctionnalités sont constamment ajoutées au moteur V8. En règle générale, attendez-vous à ce qu&#39;elles arrivent dans une future version de Node.js, bien que le calendrier soit inconnu.</p><p>Vous pouvez répertorier toutes les fonctionnalités en cours de développement disponibles sur chaque version de Node.js en effectuant une recherche dans l&#39;argument <code>--v8-options</code>. Veuillez noter qu&#39;il s&#39;agit de fonctionnalités incomplètes et potentiellement défectueuses de V8, utilisez-les donc à vos risques et périls\xA0:</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">node</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --v8-options</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> grep</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;in progress&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="j-ai-configure-mon-infrastructure-pour-tirer-parti-du-drapeau-harmony-dois-je-le-supprimer" tabindex="-1">J&#39;ai configuré mon infrastructure pour tirer parti du drapeau --harmony. Dois-je le supprimer ? <a class="header-anchor" href="#j-ai-configure-mon-infrastructure-pour-tirer-parti-du-drapeau-harmony-dois-je-le-supprimer" aria-label="Permalink to “J&#39;ai configuré mon infrastructure pour tirer parti du drapeau --harmony. Dois-je le supprimer ?”">​</a></h2><p>Le comportement actuel du drapeau <code>--harmony</code> sur Node.js est d&#39;activer uniquement les fonctionnalités <code>en phase de préparation</code>. Après tout, c&#39;est maintenant un synonyme de <code>--es_staging</code>. Comme mentionné ci-dessus, ce sont des fonctionnalités terminées qui n&#39;ont pas encore été considérées comme stables. Si vous voulez jouer la sécurité, surtout dans les environnements de production, envisagez de supprimer ce drapeau d&#39;exécution jusqu&#39;à ce qu&#39;il soit livré par défaut sur V8 et, par conséquent, sur Node.js. Si vous le maintenez activé, vous devez vous préparer à ce que les futures mises à niveau de Node.js cassent votre code si V8 modifie sa sémantique pour se conformer plus étroitement à la norme.</p><h2 id="comment-trouver-la-version-de-v8-fournie-avec-une-version-particuliere-de-node-js" tabindex="-1">Comment trouver la version de V8 fournie avec une version particulière de Node.js\xA0? <a class="header-anchor" href="#comment-trouver-la-version-de-v8-fournie-avec-une-version-particuliere-de-node-js" aria-label="Permalink to “Comment trouver la version de V8 fournie avec une version particulière de Node.js\xA0?”">​</a></h2><p>Node.js offre un moyen simple de lister toutes les dépendances et versions respectives fournies avec un binaire spécifique via l&#39;objet global <code>process</code>. Dans le cas du moteur V8, tapez la commande suivante dans votre terminal pour récupérer sa version\xA0:</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">node</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> process.versions.v8</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div>`,15)])}var s=e(a,[[`render`,o]]);export{i as __pageData,s as default};